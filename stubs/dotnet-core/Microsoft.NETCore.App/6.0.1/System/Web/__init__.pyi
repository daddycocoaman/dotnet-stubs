from typing import Tuple, Set, Iterable, List


class HttpUtility(Object):
    def __init__(self): ...
    @overload
    def HtmlAttributeEncode(s: str) -> str: ...
    @overload
    def HtmlAttributeEncode(s: str, output: TextWriter) -> None: ...
    @overload
    def HtmlDecode(s: str) -> str: ...
    @overload
    def HtmlDecode(s: str, output: TextWriter) -> None: ...
    @overload
    def HtmlEncode(s: str) -> str: ...
    @overload
    def HtmlEncode(value: Object) -> str: ...
    @overload
    def HtmlEncode(s: str, output: TextWriter) -> None: ...
    @overload
    def JavaScriptStringEncode(value: str) -> str: ...
    @overload
    def JavaScriptStringEncode(value: str, addDoubleQuotes: bool) -> str: ...
    @overload
    def ParseQueryString(query: str) -> NameValueCollection: ...
    @overload
    def ParseQueryString(query: str, encoding: Encoding) -> NameValueCollection: ...
    @overload
    def UrlDecode(str: str) -> str: ...
    @overload
    def UrlDecode(str: str, e: Encoding) -> str: ...
    @overload
    def UrlDecode(bytes: Set(Byte), e: Encoding) -> str: ...
    @overload
    def UrlDecode(bytes: Set(Byte), offset: int, count: int, e: Encoding) -> str: ...
    @overload
    def UrlDecodeToBytes(bytes: Set(Byte)) -> Set(Byte): ...
    @overload
    def UrlDecodeToBytes(str: str) -> Set(Byte): ...
    @overload
    def UrlDecodeToBytes(str: str, e: Encoding) -> Set(Byte): ...
    @overload
    def UrlDecodeToBytes(bytes: Set(Byte), offset: int, count: int) -> Set(Byte): ...
    @overload
    def UrlEncode(str: str) -> str: ...
    @overload
    def UrlEncode(bytes: Set(Byte)) -> str: ...
    @overload
    def UrlEncode(str: str, e: Encoding) -> str: ...
    @overload
    def UrlEncode(bytes: Set(Byte), offset: int, count: int) -> str: ...
    @overload
    def UrlEncodeToBytes(bytes: Set(Byte)) -> Set(Byte): ...
    @overload
    def UrlEncodeToBytes(str: str) -> Set(Byte): ...
    @overload
    def UrlEncodeToBytes(str: str, e: Encoding) -> Set(Byte): ...
    @overload
    def UrlEncodeToBytes(bytes: Set(Byte), offset: int, count: int) -> Set(Byte): ...
    def UrlPathEncode(str: str) -> str: ...
