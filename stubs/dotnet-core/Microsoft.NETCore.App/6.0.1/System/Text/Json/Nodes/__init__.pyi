from typing import Tuple, Set, Iterable, List


class JsonValue(JsonNode):
    @overload
    def Create(value: bool, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: SByte, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Single, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: str, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: UInt64, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: JsonElement, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: T, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: UInt32, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Int64, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: UInt16, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: int, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Byte, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Char, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: DateTime, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: DateTimeOffset, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: float, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Guid, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Int16, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Nullable, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: Decimal, options: Nullable) -> JsonValue: ...
    @overload
    def Create(value: T, jsonTypeInfo: JsonTypeInfo, options: Nullable) -> JsonValue: ...
    def TryGetValue(self) -> Tuple[bool, T]: ...
