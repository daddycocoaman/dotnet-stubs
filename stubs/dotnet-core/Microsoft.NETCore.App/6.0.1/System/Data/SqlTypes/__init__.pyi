from typing import Tuple, Set, Iterable, List


class SqlBytes(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, buffer: Set(Byte)): ...
    @overload
    def __init__(self, value: SqlBinary): ...
    @overload
    def __init__(self, s: Stream): ...
    @property
    def Buffer(self) -> Set(Byte): ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Item(self, offset: Int64) -> Byte: ...
    @property
    def Length(self) -> Int64: ...
    @property
    def MaxLength(self) -> Int64: ...
    @property
    def Null() -> SqlBytes: ...
    @property
    def Storage(self) -> StorageState: ...
    @property
    def Stream(self) -> Stream: ...
    @property
    def Value(self) -> Set(Byte): ...
    def GetXsdType(schemaSet: XmlSchemaSet) -> XmlQualifiedName: ...
    @overload
    def op_Explicit(value: SqlBytes) -> SqlBinary: ...
    @overload
    def op_Explicit(value: SqlBinary) -> SqlBytes: ...
    def Read(self, offset: Int64, buffer: Set(Byte), offsetInBuffer: int, count: int) -> Int64: ...
    @Item.setter
    def Item(self, offset: Int64, value: Byte) -> None: ...
    @Stream.setter
    def Stream(self, value: Stream) -> None: ...
    def SetLength(self, value: Int64) -> None: ...
    def SetNull(self) -> None: ...
    def ToSqlBinary(self) -> SqlBinary: ...
    def Write(self, offset: Int64, buffer: Set(Byte), offsetInBuffer: int, count: int) -> None: ...
