from typing import Tuple, Set, Iterable, List


class PipeSecurity(NativeObjectSecurity):
    def __init__(self): ...
    def AccessRuleFactory(self, identityReference: IdentityReference, accessMask: int, isInherited: bool, inheritanceFlags: InheritanceFlags, propagationFlags: PropagationFlags, type: AccessControlType) -> AccessRule: ...
    def AddAccessRule(self, rule: PipeAccessRule) -> None: ...
    def AddAuditRule(self, rule: PipeAuditRule) -> None: ...
    def AuditRuleFactory(self, identityReference: IdentityReference, accessMask: int, isInherited: bool, inheritanceFlags: InheritanceFlags, propagationFlags: PropagationFlags, flags: AuditFlags) -> AuditRule: ...
    @property
    def AccessRightType(self) -> Type: ...
    @property
    def AccessRuleType(self) -> Type: ...
    @property
    def AuditRuleType(self) -> Type: ...
    def RemoveAccessRule(self, rule: PipeAccessRule) -> bool: ...
    def RemoveAccessRuleSpecific(self, rule: PipeAccessRule) -> None: ...
    def RemoveAuditRule(self, rule: PipeAuditRule) -> bool: ...
    def RemoveAuditRuleAll(self, rule: PipeAuditRule) -> None: ...
    def RemoveAuditRuleSpecific(self, rule: PipeAuditRule) -> None: ...
    def ResetAccessRule(self, rule: PipeAccessRule) -> None: ...
    def SetAccessRule(self, rule: PipeAccessRule) -> None: ...
    def SetAuditRule(self, rule: PipeAuditRule) -> None: ...
