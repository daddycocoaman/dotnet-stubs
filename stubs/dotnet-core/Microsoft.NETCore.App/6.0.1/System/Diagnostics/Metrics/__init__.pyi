from typing import Tuple, Set, Iterable, List


class MeterListener(Object):
    def __init__(self): ...
    def DisableMeasurementEvents(self, instrument: Instrument) -> Object: ...
    def Dispose(self) -> None: ...
    def EnableMeasurementEvents(self, instrument: Instrument, state: Object) -> None: ...
    @property
    def InstrumentPublished(self) -> Action: ...
    @property
    def MeasurementsCompleted(self) -> Action: ...
    def RecordObservableInstruments(self) -> None: ...
    @InstrumentPublished.setter
    def InstrumentPublished(self, value: Action) -> None: ...
    @MeasurementsCompleted.setter
    def MeasurementsCompleted(self, value: Action) -> None: ...
    def SetMeasurementEventCallback(self, measurementCallback: MeasurementCallback) -> None: ...
    def Start(self) -> None: ...
