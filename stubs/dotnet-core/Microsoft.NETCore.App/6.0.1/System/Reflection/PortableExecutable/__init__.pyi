from typing import Tuple, Set, Iterable, List


class Characteristics:
    RelocsStripped = 1
    ExecutableImage = 2
    LineNumsStripped = 4
    LocalSymsStripped = 8
    AggressiveWSTrim = 16
    LargeAddressAware = 32
    BytesReversedLo = 128
    Bit32Machine = 256
    DebugStripped = 512
    RemovableRunFromSwap = 1024
    NetRunFromSwap = 2048
    System = 4096
    Dll = 8192
    UpSystemOnly = 16384
    BytesReversedHi = 32768


class CodeViewDebugDirectoryData(ValueType):
    @property
    def Age(self) -> int: ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def Path(self) -> str: ...


class CoffHeader(Object):
    @property
    def Characteristics(self) -> Characteristics: ...
    @property
    def Machine(self) -> Machine: ...
    @property
    def NumberOfSections(self) -> Int16: ...
    @property
    def NumberOfSymbols(self) -> int: ...
    @property
    def PointerToSymbolTable(self) -> int: ...
    @property
    def SizeOfOptionalHeader(self) -> Int16: ...
    @property
    def TimeDateStamp(self) -> int: ...


class CorFlags:
    ILOnly = 1
    Requires32Bit = 2
    ILLibrary = 4
    StrongNameSigned = 8
    NativeEntryPoint = 16
    TrackDebugData = 65536
    Prefers32Bit = 131072


class CorHeader(Object):
    @property
    def CodeManagerTableDirectory(self) -> DirectoryEntry: ...
    @property
    def EntryPointTokenOrRelativeVirtualAddress(self) -> int: ...
    @property
    def ExportAddressTableJumpsDirectory(self) -> DirectoryEntry: ...
    @property
    def Flags(self) -> CorFlags: ...
    @property
    def MajorRuntimeVersion(self) -> UInt16: ...
    @property
    def ManagedNativeHeaderDirectory(self) -> DirectoryEntry: ...
    @property
    def MetadataDirectory(self) -> DirectoryEntry: ...
    @property
    def MinorRuntimeVersion(self) -> UInt16: ...
    @property
    def ResourcesDirectory(self) -> DirectoryEntry: ...
    @property
    def StrongNameSignatureDirectory(self) -> DirectoryEntry: ...
    @property
    def VtableFixupsDirectory(self) -> DirectoryEntry: ...


class DebugDirectoryBuilder(Object):
    def __init__(self): ...
    @overload
    def AddCodeViewEntry(self, pdbPath: str, pdbContentId: BlobContentId, portablePdbVersion: UInt16) -> None: ...
    @overload
    def AddCodeViewEntry(self, pdbPath: str, pdbContentId: BlobContentId, portablePdbVersion: UInt16, age: int) -> None: ...
    def AddEmbeddedPortablePdbEntry(self, debugMetadata: BlobBuilder, portablePdbVersion: UInt16) -> None: ...
    @overload
    def AddEntry(self, type: DebugDirectoryEntryType, version: UInt32, stamp: UInt32) -> None: ...
    @overload
    def AddEntry(self, type: DebugDirectoryEntryType, version: UInt32, stamp: UInt32, data: TData, dataSerializer: Action) -> None: ...
    def AddPdbChecksumEntry(self, algorithmName: str, checksum: ImmutableArray) -> None: ...
    def AddReproducibleEntry(self) -> None: ...


class DebugDirectoryEntry(ValueType):
    def __init__(self, stamp: UInt32, majorVersion: UInt16, minorVersion: UInt16, type: DebugDirectoryEntryType, dataSize: int, dataRelativeVirtualAddress: int, dataPointer: int): ...
    @property
    def DataPointer(self) -> int: ...
    @property
    def DataRelativeVirtualAddress(self) -> int: ...
    @property
    def DataSize(self) -> int: ...
    @property
    def IsPortableCodeView(self) -> bool: ...
    @property
    def MajorVersion(self) -> UInt16: ...
    @property
    def MinorVersion(self) -> UInt16: ...
    @property
    def Stamp(self) -> UInt32: ...
    @property
    def Type(self) -> DebugDirectoryEntryType: ...


class DebugDirectoryEntryType:
    Unknown = 0
    Coff = 1
    CodeView = 2
    Reproducible = 16
    EmbeddedPortablePdb = 17
    PdbChecksum = 19


class DirectoryEntry(ValueType):
    def __init__(self, relativeVirtualAddress: int, size: int): ...


class DllCharacteristics:
    ProcessInit = 1
    ProcessTerm = 2
    ThreadInit = 4
    ThreadTerm = 8
    HighEntropyVirtualAddressSpace = 32
    DynamicBase = 64
    NxCompatible = 256
    NoIsolation = 512
    NoSeh = 1024
    NoBind = 2048
    AppContainer = 4096
    WdmDriver = 8192
    TerminalServerAware = 32768


class Machine:
    Unknown = 0
    I386 = 332
    WceMipsV2 = 361
    Alpha = 388
    SH3 = 418
    SH3Dsp = 419
    SH3E = 420
    SH4 = 422
    SH5 = 424
    Arm = 448
    Thumb = 450
    ArmThumb2 = 452
    AM33 = 467
    PowerPC = 496
    PowerPCFP = 497
    IA64 = 512
    MIPS16 = 614
    Alpha64 = 644
    MipsFpu = 870
    MipsFpu16 = 1126
    Tricore = 1312
    Ebc = 3772
    Amd64 = 34404
    M32R = 36929
    Arm64 = 43620


class ManagedPEBuilder(PEBuilder):
    def __init__(self, header: PEHeaderBuilder, metadataRootBuilder: MetadataRootBuilder, ilStream: BlobBuilder, mappedFieldData: BlobBuilder, managedResources: BlobBuilder, nativeResources: ResourceSectionBuilder, debugDirectoryBuilder: DebugDirectoryBuilder, strongNameSignatureSize: int, entryPoint: MethodDefinitionHandle, flags: CorFlags, deterministicIdProvider: Func): ...
    def Sign(self, peImage: BlobBuilder, signatureProvider: Func) -> None: ...


class PdbChecksumDebugDirectoryData(ValueType):
    @property
    def AlgorithmName(self) -> str: ...
    @property
    def Checksum(self) -> ImmutableArray: ...


class PEBuilder(Object):
    @property
    def Header(self) -> PEHeaderBuilder: ...
    @property
    def IdProvider(self) -> Func: ...
    @property
    def IsDeterministic(self) -> bool: ...
    def Serialize(self, builder: BlobBuilder) -> BlobContentId: ...


class PEDirectoriesBuilder(Object):
    def __init__(self): ...
    @property
    def AddressOfEntryPoint(self) -> int: ...
    @property
    def BaseRelocationTable(self) -> DirectoryEntry: ...
    @property
    def BoundImportTable(self) -> DirectoryEntry: ...
    @property
    def CopyrightTable(self) -> DirectoryEntry: ...
    @property
    def CorHeaderTable(self) -> DirectoryEntry: ...
    @property
    def DebugTable(self) -> DirectoryEntry: ...
    @property
    def DelayImportTable(self) -> DirectoryEntry: ...
    @property
    def ExceptionTable(self) -> DirectoryEntry: ...
    @property
    def ExportTable(self) -> DirectoryEntry: ...
    @property
    def GlobalPointerTable(self) -> DirectoryEntry: ...
    @property
    def ImportAddressTable(self) -> DirectoryEntry: ...
    @property
    def ImportTable(self) -> DirectoryEntry: ...
    @property
    def LoadConfigTable(self) -> DirectoryEntry: ...
    @property
    def ResourceTable(self) -> DirectoryEntry: ...
    @property
    def ThreadLocalStorageTable(self) -> DirectoryEntry: ...
    @AddressOfEntryPoint.setter
    def AddressOfEntryPoint(self, value: int) -> None: ...
    @BaseRelocationTable.setter
    def BaseRelocationTable(self, value: DirectoryEntry) -> None: ...
    @BoundImportTable.setter
    def BoundImportTable(self, value: DirectoryEntry) -> None: ...
    @CopyrightTable.setter
    def CopyrightTable(self, value: DirectoryEntry) -> None: ...
    @CorHeaderTable.setter
    def CorHeaderTable(self, value: DirectoryEntry) -> None: ...
    @DebugTable.setter
    def DebugTable(self, value: DirectoryEntry) -> None: ...
    @DelayImportTable.setter
    def DelayImportTable(self, value: DirectoryEntry) -> None: ...
    @ExceptionTable.setter
    def ExceptionTable(self, value: DirectoryEntry) -> None: ...
    @ExportTable.setter
    def ExportTable(self, value: DirectoryEntry) -> None: ...
    @GlobalPointerTable.setter
    def GlobalPointerTable(self, value: DirectoryEntry) -> None: ...
    @ImportAddressTable.setter
    def ImportAddressTable(self, value: DirectoryEntry) -> None: ...
    @ImportTable.setter
    def ImportTable(self, value: DirectoryEntry) -> None: ...
    @LoadConfigTable.setter
    def LoadConfigTable(self, value: DirectoryEntry) -> None: ...
    @ResourceTable.setter
    def ResourceTable(self, value: DirectoryEntry) -> None: ...
    @ThreadLocalStorageTable.setter
    def ThreadLocalStorageTable(self, value: DirectoryEntry) -> None: ...


class PEHeader(Object):
    @property
    def AddressOfEntryPoint(self) -> int: ...
    @property
    def BaseOfCode(self) -> int: ...
    @property
    def BaseOfData(self) -> int: ...
    @property
    def BaseRelocationTableDirectory(self) -> DirectoryEntry: ...
    @property
    def BoundImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CertificateTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CheckSum(self) -> UInt32: ...
    @property
    def CopyrightTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CorHeaderTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DebugTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DelayImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DllCharacteristics(self) -> DllCharacteristics: ...
    @property
    def ExceptionTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ExportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def FileAlignment(self) -> int: ...
    @property
    def GlobalPointerTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ImageBase(self) -> UInt64: ...
    @property
    def ImportAddressTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def LoadConfigTableDirectory(self) -> DirectoryEntry: ...
    @property
    def Magic(self) -> PEMagic: ...
    @property
    def MajorImageVersion(self) -> UInt16: ...
    @property
    def MajorLinkerVersion(self) -> Byte: ...
    @property
    def MajorOperatingSystemVersion(self) -> UInt16: ...
    @property
    def MajorSubsystemVersion(self) -> UInt16: ...
    @property
    def MinorImageVersion(self) -> UInt16: ...
    @property
    def MinorLinkerVersion(self) -> Byte: ...
    @property
    def MinorOperatingSystemVersion(self) -> UInt16: ...
    @property
    def MinorSubsystemVersion(self) -> UInt16: ...
    @property
    def NumberOfRvaAndSizes(self) -> int: ...
    @property
    def ResourceTableDirectory(self) -> DirectoryEntry: ...
    @property
    def SectionAlignment(self) -> int: ...
    @property
    def SizeOfCode(self) -> int: ...
    @property
    def SizeOfHeaders(self) -> int: ...
    @property
    def SizeOfHeapCommit(self) -> UInt64: ...
    @property
    def SizeOfHeapReserve(self) -> UInt64: ...
    @property
    def SizeOfImage(self) -> int: ...
    @property
    def SizeOfInitializedData(self) -> int: ...
    @property
    def SizeOfStackCommit(self) -> UInt64: ...
    @property
    def SizeOfStackReserve(self) -> UInt64: ...
    @property
    def SizeOfUninitializedData(self) -> int: ...
    @property
    def Subsystem(self) -> Subsystem: ...
    @property
    def ThreadLocalStorageTableDirectory(self) -> DirectoryEntry: ...


class PEHeaderBuilder(Object):
    def __init__(self, machine: Machine, sectionAlignment: int, fileAlignment: int, imageBase: UInt64, majorLinkerVersion: Byte, minorLinkerVersion: Byte, majorOperatingSystemVersion: UInt16, minorOperatingSystemVersion: UInt16, majorImageVersion: UInt16, minorImageVersion: UInt16, majorSubsystemVersion: UInt16, minorSubsystemVersion: UInt16, subsystem: Subsystem, dllCharacteristics: DllCharacteristics, imageCharacteristics: Characteristics, sizeOfStackReserve: UInt64, sizeOfStackCommit: UInt64, sizeOfHeapReserve: UInt64, sizeOfHeapCommit: UInt64): ...
    def CreateExecutableHeader() -> PEHeaderBuilder: ...
    def CreateLibraryHeader() -> PEHeaderBuilder: ...
    @property
    def DllCharacteristics(self) -> DllCharacteristics: ...
    @property
    def FileAlignment(self) -> int: ...
    @property
    def ImageBase(self) -> UInt64: ...
    @property
    def ImageCharacteristics(self) -> Characteristics: ...
    @property
    def Machine(self) -> Machine: ...
    @property
    def MajorImageVersion(self) -> UInt16: ...
    @property
    def MajorLinkerVersion(self) -> Byte: ...
    @property
    def MajorOperatingSystemVersion(self) -> UInt16: ...
    @property
    def MajorSubsystemVersion(self) -> UInt16: ...
    @property
    def MinorImageVersion(self) -> UInt16: ...
    @property
    def MinorLinkerVersion(self) -> Byte: ...
    @property
    def MinorOperatingSystemVersion(self) -> UInt16: ...
    @property
    def MinorSubsystemVersion(self) -> UInt16: ...
    @property
    def SectionAlignment(self) -> int: ...
    @property
    def SizeOfHeapCommit(self) -> UInt64: ...
    @property
    def SizeOfHeapReserve(self) -> UInt64: ...
    @property
    def SizeOfStackCommit(self) -> UInt64: ...
    @property
    def SizeOfStackReserve(self) -> UInt64: ...
    @property
    def Subsystem(self) -> Subsystem: ...


class PEHeaders(Object):
    @overload
    def __init__(self, peStream: Stream): ...
    @overload
    def __init__(self, peStream: Stream, size: int): ...
    @overload
    def __init__(self, peStream: Stream, size: int, isLoadedImage: bool): ...
    @property
    def CoffHeader(self) -> CoffHeader: ...
    @property
    def CoffHeaderStartOffset(self) -> int: ...
    @property
    def CorHeader(self) -> CorHeader: ...
    @property
    def CorHeaderStartOffset(self) -> int: ...
    @property
    def IsCoffOnly(self) -> bool: ...
    @property
    def IsConsoleApplication(self) -> bool: ...
    @property
    def IsDll(self) -> bool: ...
    @property
    def IsExe(self) -> bool: ...
    @property
    def MetadataSize(self) -> int: ...
    @property
    def MetadataStartOffset(self) -> int: ...
    @property
    def PEHeader(self) -> PEHeader: ...
    @property
    def PEHeaderStartOffset(self) -> int: ...
    @property
    def SectionHeaders(self) -> ImmutableArray: ...
    def GetContainingSectionIndex(self, relativeVirtualAddress: int) -> int: ...
    def TryGetDirectoryOffset(self, directory: DirectoryEntry) -> Tuple[bool, int]: ...


class PEMagic:
    PE32 = 267
    PE32Plus = 523


class PEMemoryBlock(ValueType):
    @property
    def Length(self) -> int: ...
    @property
    def Pointer(self) -> Byte: ...
    @overload
    def GetContent(self) -> ImmutableArray: ...
    @overload
    def GetContent(self, start: int, length: int) -> ImmutableArray: ...
    @overload
    def GetReader(self) -> BlobReader: ...
    @overload
    def GetReader(self, start: int, length: int) -> BlobReader: ...


class PEReader(Object):
    @overload
    def __init__(self, peStream: Stream): ...
    @overload
    def __init__(self, peImage: ImmutableArray): ...
    @overload
    def __init__(self, peImage: Byte, size: int): ...
    @overload
    def __init__(self, peStream: Stream, options: PEStreamOptions): ...
    @overload
    def __init__(self, peImage: Byte, size: int, isLoadedImage: bool): ...
    @overload
    def __init__(self, peStream: Stream, options: PEStreamOptions, size: int): ...
    def Dispose(self) -> None: ...
    @property
    def HasMetadata(self) -> bool: ...
    @property
    def IsEntireImageAvailable(self) -> bool: ...
    @property
    def IsLoadedImage(self) -> bool: ...
    @property
    def PEHeaders(self) -> PEHeaders: ...
    def GetEntireImage(self) -> PEMemoryBlock: ...
    def GetMetadata(self) -> PEMemoryBlock: ...
    @overload
    def GetSectionData(self, relativeVirtualAddress: int) -> PEMemoryBlock: ...
    @overload
    def GetSectionData(self, sectionName: str) -> PEMemoryBlock: ...
    def ReadCodeViewDebugDirectoryData(self, entry: DebugDirectoryEntry) -> CodeViewDebugDirectoryData: ...
    def ReadDebugDirectory(self) -> ImmutableArray: ...
    def ReadEmbeddedPortablePdbDebugDirectoryData(self, entry: DebugDirectoryEntry) -> MetadataReaderProvider: ...
    def ReadPdbChecksumDebugDirectoryData(self, entry: DebugDirectoryEntry) -> PdbChecksumDebugDirectoryData: ...
    def TryOpenAssociatedPortablePdb(self, peImagePath: str, pdbFileStreamProvider: Func) -> Tuple[bool, MetadataReaderProvider, str]: ...


class PEStreamOptions:
    Default = 0
    LeaveOpen = 1
    PrefetchMetadata = 2
    PrefetchEntireImage = 4
    IsLoadedImage = 8


class ResourceSectionBuilder(Object):
    pass


class SectionCharacteristics:
    TypeReg = 0
    TypeDSect = 1
    TypeNoLoad = 2
    TypeGroup = 4
    TypeNoPad = 8
    TypeCopy = 16
    ContainsCode = 32
    ContainsInitializedData = 64
    ContainsUninitializedData = 128
    LinkerOther = 256
    LinkerInfo = 512
    TypeOver = 1024
    LinkerRemove = 2048
    LinkerComdat = 4096
    MemProtected = 16384
    NoDeferSpecExc = 16384
    GPRel = 32768
    MemFardata = 32768
    MemSysheap = 65536
    MemPurgeable = 131072
    Mem16Bit = 131072
    MemLocked = 262144
    MemPreload = 524288
    Align1Bytes = 1048576
    Align2Bytes = 2097152
    Align4Bytes = 3145728
    Align8Bytes = 4194304
    Align16Bytes = 5242880
    Align32Bytes = 6291456
    Align64Bytes = 7340032
    Align128Bytes = 8388608
    Align256Bytes = 9437184
    Align512Bytes = 10485760
    Align1024Bytes = 11534336
    Align2048Bytes = 12582912
    Align4096Bytes = 13631488
    Align8192Bytes = 14680064
    AlignMask = 15728640
    LinkerNRelocOvfl = 16777216
    MemDiscardable = 33554432
    MemNotCached = 67108864
    MemNotPaged = 134217728
    MemShared = 268435456
    MemExecute = 536870912
    MemRead = 1073741824
    MemWrite = 2147483648


class SectionHeader(ValueType):
    @property
    def Name(self) -> str: ...
    @property
    def NumberOfLineNumbers(self) -> UInt16: ...
    @property
    def NumberOfRelocations(self) -> UInt16: ...
    @property
    def PointerToLineNumbers(self) -> int: ...
    @property
    def PointerToRawData(self) -> int: ...
    @property
    def PointerToRelocations(self) -> int: ...
    @property
    def SectionCharacteristics(self) -> SectionCharacteristics: ...
    @property
    def SizeOfRawData(self) -> int: ...
    @property
    def VirtualAddress(self) -> int: ...
    @property
    def VirtualSize(self) -> int: ...


class SectionLocation(ValueType):
    def __init__(self, relativeVirtualAddress: int, pointerToRawData: int): ...
    @property
    def PointerToRawData(self) -> int: ...
    @property
    def RelativeVirtualAddress(self) -> int: ...


class Subsystem:
    Unknown = 0
    Native = 1
    WindowsGui = 2
    WindowsCui = 3
    OS2Cui = 5
    PosixCui = 7
    NativeWindows = 8
    WindowsCEGui = 9
    EfiApplication = 10
    EfiBootServiceDriver = 11
    EfiRuntimeDriver = 12
    EfiRom = 13
    Xbox = 14
    WindowsBootApplication = 16
