from typing import Tuple, Set, Iterable, List


class TextFieldParser:
    @overload
    def __init__(self, path: str): ...
    @overload
    def __init__(self, stream: Stream): ...
    @overload
    def __init__(self, reader: TextReader): ...
    @overload
    def __init__(self, path: str, defaultEncoding: Encoding): ...
    @overload
    def __init__(self, stream: Stream, defaultEncoding: Encoding): ...
    @overload
    def __init__(self, path: str, defaultEncoding: Encoding, detectEncoding: bool): ...
    @overload
    def __init__(self, stream: Stream, defaultEncoding: Encoding, detectEncoding: bool): ...
    @overload
    def __init__(self, stream: Stream, defaultEncoding: Encoding, detectEncoding: bool, leaveOpen: bool): ...
    def Close(self) -> None: ...
    def Dispose(self) -> None: ...
    @property
    def CommentTokens(self) -> Set(str): ...
    @property
    def Delimiters(self) -> Set(str): ...
    @property
    def EndOfData(self) -> bool: ...
    @property
    def ErrorLine(self) -> str: ...
    @property
    def ErrorLineNumber(self) -> Int64: ...
    @property
    def FieldWidths(self) -> Set(int): ...
    @property
    def HasFieldsEnclosedInQuotes(self) -> bool: ...
    @property
    def LineNumber(self) -> Int64: ...
    @property
    def TextFieldType(self) -> FieldType: ...
    @property
    def TrimWhiteSpace(self) -> bool: ...
    def PeekChars(self, numberOfChars: int) -> str: ...
    def ReadFields(self) -> Set(str): ...
    def ReadLine(self) -> str: ...
    def ReadToEnd(self) -> str: ...
    @CommentTokens.setter
    def CommentTokens(self, value: Set(str)) -> None: ...
    @Delimiters.setter
    def Delimiters(self, value: Set(str)) -> None: ...
    @FieldWidths.setter
    def FieldWidths(self, value: Set(int)) -> None: ...
    @HasFieldsEnclosedInQuotes.setter
    def HasFieldsEnclosedInQuotes(self, value: bool) -> None: ...
    @TextFieldType.setter
    def TextFieldType(self, value: FieldType) -> None: ...
    @TrimWhiteSpace.setter
    def TrimWhiteSpace(self, value: bool) -> None: ...
    def SetDelimiters(self, delimiters: Set(str)) -> None: ...
    def SetFieldWidths(self, fieldWidths: Set(int)) -> None: ...
