__all__ = ['Automation','Automation','Automation','Automation','VisualStyles','VisualStyles','VisualStyles','VisualStyles']
from typing import Tuple, Set, Iterable, List


class PaddingConverter(TypeConverter):
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ITypeDescriptorContext, sourceType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, context: ITypeDescriptorContext, destinationType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object) -> Object: ...
    @overload
    def ConvertTo(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object, destinationType: Type) -> Object: ...
    @overload
    def CreateInstance(self, context: ITypeDescriptorContext, propertyValues: IDictionary) -> Object: ...
    @overload
    def GetCreateInstanceSupported(self, context: ITypeDescriptorContext) -> bool: ...
    @overload
    def GetProperties(self, context: ITypeDescriptorContext, value: Object, attributes: Set(Attribute)) -> PropertyDescriptorCollection: ...
    @overload
    def GetPropertiesSupported(self, context: ITypeDescriptorContext) -> bool: ...
