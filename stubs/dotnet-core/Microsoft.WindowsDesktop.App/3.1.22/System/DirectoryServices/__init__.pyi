__all__ = ['ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory','ActiveDirectory']
from typing import Tuple, Set, Iterable, List


class DirectoryServicesPermissionEntryCollection(CollectionBase):
    def Add(self, value: DirectoryServicesPermissionEntry) -> int: ...
    @overload
    def AddRange(self, value: DirectoryServicesPermissionEntryCollection) -> None: ...
    @overload
    def AddRange(self, value: Set(DirectoryServicesPermissionEntry)) -> None: ...
    def Contains(self, value: DirectoryServicesPermissionEntry) -> bool: ...
    def CopyTo(self, array: Set(DirectoryServicesPermissionEntry), index: int) -> None: ...
    @property
    def Item(self, index: int) -> DirectoryServicesPermissionEntry: ...
    def IndexOf(self, value: DirectoryServicesPermissionEntry) -> int: ...
    def Insert(self, index: int, value: DirectoryServicesPermissionEntry) -> None: ...
    def Remove(self, value: DirectoryServicesPermissionEntry) -> None: ...
    @Item.setter
    def Item(self, index: int, value: DirectoryServicesPermissionEntry) -> None: ...
