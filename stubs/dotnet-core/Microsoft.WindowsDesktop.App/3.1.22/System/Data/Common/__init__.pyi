from typing import Tuple, Set, Iterable, List


class DBDataPermission(CodeAccessPermission):
    def Add(self, connectionString: str, restrictions: str, behavior: KeyRestrictionBehavior) -> None: ...
    def Copy(self) -> IPermission: ...
    def FromXml(self, elem: SecurityElement) -> None: ...
    @property
    def AllowBlankPassword(self) -> bool: ...
    def Intersect(self, target: IPermission) -> IPermission: ...
    def IsSubsetOf(self, target: IPermission) -> bool: ...
    def IsUnrestricted(self) -> bool: ...
    @AllowBlankPassword.setter
    def AllowBlankPassword(self, value: bool) -> None: ...
    def ToXml(self) -> SecurityElement: ...
    def Union(self, other: IPermission) -> IPermission: ...


class DBDataPermissionAttribute(CodeAccessSecurityAttribute):
    @property
    def AllowBlankPassword(self) -> bool: ...
    @property
    def ConnectionString(self) -> str: ...
    @property
    def KeyRestrictionBehavior(self) -> KeyRestrictionBehavior: ...
    @property
    def KeyRestrictions(self) -> str: ...
    @AllowBlankPassword.setter
    def AllowBlankPassword(self, value: bool) -> None: ...
    @ConnectionString.setter
    def ConnectionString(self, value: str) -> None: ...
    @KeyRestrictionBehavior.setter
    def KeyRestrictionBehavior(self, value: KeyRestrictionBehavior) -> None: ...
    @KeyRestrictions.setter
    def KeyRestrictions(self, value: str) -> None: ...
    def ShouldSerializeConnectionString(self) -> bool: ...
    def ShouldSerializeKeyRestrictions(self) -> bool: ...
