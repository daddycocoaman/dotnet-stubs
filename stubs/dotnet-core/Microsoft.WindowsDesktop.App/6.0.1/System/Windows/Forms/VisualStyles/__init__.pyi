from typing import Tuple, Set, Iterable, List


class TextMetrics(ValueType):
    @property
    def Ascent(self) -> int: ...
    @property
    def AverageCharWidth(self) -> int: ...
    @property
    def BreakChar(self) -> Char: ...
    @property
    def CharSet(self) -> TextMetricsCharacterSet: ...
    @property
    def DefaultChar(self) -> Char: ...
    @property
    def Descent(self) -> int: ...
    @property
    def DigitizedAspectX(self) -> int: ...
    @property
    def DigitizedAspectY(self) -> int: ...
    @property
    def ExternalLeading(self) -> int: ...
    @property
    def FirstChar(self) -> Char: ...
    @property
    def Height(self) -> int: ...
    @property
    def InternalLeading(self) -> int: ...
    @property
    def Italic(self) -> bool: ...
    @property
    def LastChar(self) -> Char: ...
    @property
    def MaxCharWidth(self) -> int: ...
    @property
    def Overhang(self) -> int: ...
    @property
    def PitchAndFamily(self) -> TextMetricsPitchAndFamilyValues: ...
    @property
    def StruckOut(self) -> bool: ...
    @property
    def Underlined(self) -> bool: ...
    @property
    def Weight(self) -> int: ...
    @Ascent.setter
    def Ascent(self, value: int) -> None: ...
    @AverageCharWidth.setter
    def AverageCharWidth(self, value: int) -> None: ...
    @BreakChar.setter
    def BreakChar(self, value: Char) -> None: ...
    @CharSet.setter
    def CharSet(self, value: TextMetricsCharacterSet) -> None: ...
    @DefaultChar.setter
    def DefaultChar(self, value: Char) -> None: ...
    @Descent.setter
    def Descent(self, value: int) -> None: ...
    @DigitizedAspectX.setter
    def DigitizedAspectX(self, value: int) -> None: ...
    @DigitizedAspectY.setter
    def DigitizedAspectY(self, value: int) -> None: ...
    @ExternalLeading.setter
    def ExternalLeading(self, value: int) -> None: ...
    @FirstChar.setter
    def FirstChar(self, value: Char) -> None: ...
    @Height.setter
    def Height(self, value: int) -> None: ...
    @InternalLeading.setter
    def InternalLeading(self, value: int) -> None: ...
    @Italic.setter
    def Italic(self, value: bool) -> None: ...
    @LastChar.setter
    def LastChar(self, value: Char) -> None: ...
    @MaxCharWidth.setter
    def MaxCharWidth(self, value: int) -> None: ...
    @Overhang.setter
    def Overhang(self, value: int) -> None: ...
    @PitchAndFamily.setter
    def PitchAndFamily(self, value: TextMetricsPitchAndFamilyValues) -> None: ...
    @StruckOut.setter
    def StruckOut(self, value: bool) -> None: ...
    @Underlined.setter
    def Underlined(self, value: bool) -> None: ...
    @Weight.setter
    def Weight(self, value: int) -> None: ...


class TextMetricsCharacterSet:
    Ansi = 0
    Default = 1
    Symbol = 2
    Mac = 77
    ShiftJis = 128
    Hangul = 129
    Johab = 130
    Gb2312 = 134
    ChineseBig5 = 136
    Greek = 161
    Turkish = 162
    Vietnamese = 163
    Hebrew = 177
    Arabic = 178
    Baltic = 186
    Russian = 204
    Thai = 222
    EastEurope = 238
    Oem = 255


class TextMetricsPitchAndFamilyValues:
    FixedPitch = 1
    Vector = 2
    TrueType = 4
    Device = 8


class ThemeSizeType:
    Minimum = 0
    True = 1
    Draw = 2
