__all__ = ['IndexedProperties']
from typing import Tuple, Set, Iterable, List


class EnumeratedPrintQueueTypes:
    Queued = 1
    DirectPrinting = 2
    Shared = 8
    Connections = 16
    Local = 64
    EnableDevQuery = 128
    KeepPrintedJobs = 256
    WorkOffline = 1024
    EnableBidi = 2048
    RawOnly = 4096
    PublishedInDirectoryServices = 8192
    Fax = 16384
    TerminalServer = 32768
    PushedUserConnection = 131072
    PushedMachineConnection = 262144


class LocalPrintServer(PrintServer):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, propertiesFilter: Set(str)): ...
    @overload
    def __init__(self, propertiesFilter: Set(LocalPrintServerIndexedProperty)): ...
    @overload
    def __init__(self, propertiesFilter: Set(str), desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, propertiesFilter: Set(LocalPrintServerIndexedProperty), desiredAccess: PrintSystemDesiredAccess): ...
    def Commit(self) -> None: ...
    @overload
    def ConnectToPrintQueue(self, printQueuePath: str) -> bool: ...
    @overload
    def ConnectToPrintQueue(self, printer: PrintQueue) -> bool: ...
    @overload
    def DisconnectFromPrintQueue(self, printQueuePath: str) -> bool: ...
    @overload
    def DisconnectFromPrintQueue(self, printer: PrintQueue) -> bool: ...
    @property
    def DefaultPrintQueue(self) -> PrintQueue: ...
    def GetDefaultPrintQueue() -> PrintQueue: ...
    def Refresh(self) -> None: ...
    @DefaultPrintQueue.setter
    def DefaultPrintQueue(self, printQueue: PrintQueue) -> None: ...


class LocalPrintServerIndexedProperty:
    DefaultSpoolDirectory = 0
    PortThreadPriority = 1
    DefaultPortThreadPriority = 2
    SchedulerPriority = 3
    DefaultSchedulerPriority = 4
    BeepEnabled = 5
    NetPopup = 6
    EventLog = 7
    MajorVersion = 8
    MinorVersion = 9
    RestartJobOnPoolTimeout = 10
    RestartJobOnPoolEnabled = 11
    DefaultPrintQueue = 12


class PrintDocumentImageableArea(Object):
    @property
    def ExtentHeight(self) -> float: ...
    @property
    def ExtentWidth(self) -> float: ...
    @property
    def MediaSizeHeight(self) -> float: ...
    @property
    def MediaSizeWidth(self) -> float: ...
    @property
    def OriginHeight(self) -> float: ...
    @property
    def OriginWidth(self) -> float: ...


class PrintDriver(PrintFilter):
    def Commit(self) -> None: ...
    def Refresh(self) -> None: ...


class PrintFilter(PrintSystemObject):
    pass


class PrintJobInfoCollection(PrintSystemObjects):
    def __init__(self, printQueue: PrintQueue, propertyFilter: Set(str)): ...
    def Add(self, printObject: PrintSystemJobInfo) -> None: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def GetNonGenericEnumerator(self) -> IEnumerator: ...


class PrintJobPriority:
    #None = 0
    Minimum = 1
    Default = 1
    Maximum = 99


class PrintJobSettings(Object):
    @property
    def CurrentPrintTicket(self) -> PrintTicket: ...
    @property
    def Description(self) -> str: ...
    @CurrentPrintTicket.setter
    def CurrentPrintTicket(self, printTicket: PrintTicket) -> None: ...
    @Description.setter
    def Description(self, description: str) -> None: ...


class PrintJobStatus:
    #None = 0
    Paused = 1
    Error = 2
    Deleting = 4
    Spooling = 8
    Printing = 16
    Offline = 32
    PaperOut = 64
    Printed = 128
    Deleted = 256
    Blocked = 512
    UserIntervention = 1024
    Restarted = 2048
    Completed = 4096
    Retained = 8192


class PrintJobType:
    #None = 0
    Xps = 1
    Legacy = 2


class PrintPort(PrintSystemObject):
    def Commit(self) -> None: ...
    def Refresh(self) -> None: ...


class PrintProcessor(PrintFilter):
    def Commit(self) -> None: ...
    def Refresh(self) -> None: ...


class PrintQueue(PrintSystemObject):
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, propertyFilter: Set(PrintQueueIndexedProperty)): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, propertyFilter: Set(str)): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, printSchemaVersion: int): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, propertyFilter: Set(PrintQueueIndexedProperty), desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, propertyFilter: Set(str), desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, printServer: PrintServer, printQueueName: str, printSchemaVersion: int, desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def AddJob(self) -> PrintSystemJobInfo: ...
    @overload
    def AddJob(self, jobName: str) -> PrintSystemJobInfo: ...
    @overload
    def AddJob(self, jobName: str, printTicket: PrintTicket) -> PrintSystemJobInfo: ...
    @overload
    def AddJob(self, jobName: str, documentPath: str, fastCopy: bool) -> PrintSystemJobInfo: ...
    @overload
    def AddJob(self, jobName: str, documentPath: str, fastCopy: bool, printTicket: PrintTicket) -> PrintSystemJobInfo: ...
    def Commit(self) -> None: ...
    @overload
    def CreateXpsDocumentWriter(printQueue: PrintQueue) -> XpsDocumentWriter: ...
    @overload
    def CreateXpsDocumentWriter(documentImageableArea: PrintDocumentImageableArea) -> Tuple[XpsDocumentWriter, PrintDocumentImageableArea]: ...
    @overload
    def CreateXpsDocumentWriter(width: float, height: float) -> Tuple[XpsDocumentWriter, float, float]: ...
    @overload
    def CreateXpsDocumentWriter(jobDescription: str, documentImageableArea: PrintDocumentImageableArea) -> Tuple[XpsDocumentWriter, PrintDocumentImageableArea]: ...
    @overload
    def CreateXpsDocumentWriter(documentImageableArea: PrintDocumentImageableArea, pageRangeSelection: PageRangeSelection, pageRange: PageRange) -> Tuple[XpsDocumentWriter, PrintDocumentImageableArea, PageRangeSelection, PageRange]: ...
    @overload
    def CreateXpsDocumentWriter(jobDescription: str, documentImageableArea: PrintDocumentImageableArea, pageRangeSelection: PageRangeSelection, pageRange: PageRange) -> Tuple[XpsDocumentWriter, PrintDocumentImageableArea, PageRangeSelection, PageRange]: ...
    @property
    def AveragePagesPerMinute(self) -> int: ...
    @property
    def ClientPrintSchemaVersion(self) -> int: ...
    @property
    def Comment(self) -> str: ...
    @property
    def CurrentJobSettings(self) -> PrintJobSettings: ...
    @property
    def DefaultPrintTicket(self) -> PrintTicket: ...
    @property
    def DefaultPriority(self) -> int: ...
    @property
    def Description(self) -> str: ...
    @property
    def FullName(self) -> str: ...
    @property
    def HasPaperProblem(self) -> bool: ...
    @property
    def HasToner(self) -> bool: ...
    @property
    def HostingPrintServer(self) -> PrintServer: ...
    @property
    def InPartialTrust(self) -> bool: ...
    @property
    def IsBidiEnabled(self) -> bool: ...
    @property
    def IsBusy(self) -> bool: ...
    @property
    def IsDevQueryEnabled(self) -> bool: ...
    @property
    def IsDirect(self) -> bool: ...
    @property
    def IsDoorOpened(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInError(self) -> bool: ...
    @property
    def IsInitializing(self) -> bool: ...
    @property
    def IsIOActive(self) -> bool: ...
    @property
    def IsManualFeedRequired(self) -> bool: ...
    @property
    def IsNotAvailable(self) -> bool: ...
    @property
    def IsOffline(self) -> bool: ...
    @property
    def IsOutOfMemory(self) -> bool: ...
    @property
    def IsOutOfPaper(self) -> bool: ...
    @property
    def IsOutputBinFull(self) -> bool: ...
    @property
    def IsPaperJammed(self) -> bool: ...
    @property
    def IsPaused(self) -> bool: ...
    @property
    def IsPendingDeletion(self) -> bool: ...
    @property
    def IsPowerSaveOn(self) -> bool: ...
    @property
    def IsPrinting(self) -> bool: ...
    @property
    def IsProcessing(self) -> bool: ...
    @property
    def IsPublished(self) -> bool: ...
    @property
    def IsQueued(self) -> bool: ...
    @property
    def IsRawOnlyEnabled(self) -> bool: ...
    @property
    def IsServerUnknown(self) -> bool: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def IsTonerLow(self) -> bool: ...
    @property
    def IsWaiting(self) -> bool: ...
    @property
    def IsWarmingUp(self) -> bool: ...
    @property
    def IsXpsDevice(self) -> bool: ...
    @property
    def KeepPrintedJobs(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def MaxPrintSchemaVersion() -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NeedUserIntervention(self) -> bool: ...
    @property
    def NumberOfJobs(self) -> int: ...
    @property
    def PagePunt(self) -> bool: ...
    @property
    def PrintingIsCancelled(self) -> bool: ...
    @property
    def Priority(self) -> int: ...
    @property
    def QueueAttributes(self) -> PrintQueueAttributes: ...
    @property
    def QueueDriver(self) -> PrintDriver: ...
    @property
    def QueuePort(self) -> PrintPort: ...
    @property
    def QueuePrintProcessor(self) -> PrintProcessor: ...
    @property
    def QueueStatus(self) -> PrintQueueStatus: ...
    @property
    def ScheduleCompletedJobsFirst(self) -> bool: ...
    @property
    def SeparatorFile(self) -> str: ...
    @property
    def ShareName(self) -> str: ...
    @property
    def StartTimeOfDay(self) -> int: ...
    @property
    def UntilTimeOfDay(self) -> int: ...
    @property
    def UserPrintTicket(self) -> PrintTicket: ...
    def GetJob(self, jobId: int) -> PrintSystemJobInfo: ...
    @overload
    def GetPrintCapabilities(self) -> PrintCapabilities: ...
    @overload
    def GetPrintCapabilities(self, printTicket: PrintTicket) -> PrintCapabilities: ...
    @overload
    def GetPrintCapabilitiesAsXml(self) -> MemoryStream: ...
    @overload
    def GetPrintCapabilitiesAsXml(self, printTicket: PrintTicket) -> MemoryStream: ...
    def GetPrintJobInfoCollection(self) -> PrintJobInfoCollection: ...
    @overload
    def MergeAndValidatePrintTicket(self, basePrintTicket: PrintTicket, deltaPrintTicket: PrintTicket) -> ValidationResult: ...
    @overload
    def MergeAndValidatePrintTicket(self, basePrintTicket: PrintTicket, deltaPrintTicket: PrintTicket, scope: PrintTicketScope) -> ValidationResult: ...
    def Pause(self) -> None: ...
    def Purge(self) -> None: ...
    def Refresh(self) -> None: ...
    def Resume(self) -> None: ...
    @Comment.setter
    def Comment(self, inComment: str) -> None: ...
    @DefaultPrintTicket.setter
    def DefaultPrintTicket(self, newDefaultPrintTicket: PrintTicket) -> None: ...
    @DefaultPriority.setter
    def DefaultPriority(self, inDefaultPriority: int) -> None: ...
    @InPartialTrust.setter
    def InPartialTrust(self, isPT: bool) -> None: ...
    @Location.setter
    def Location(self, inLocation: str) -> None: ...
    @Name.setter
    def Name(self, objName: str) -> None: ...
    @PrintingIsCancelled.setter
    def PrintingIsCancelled(self, isCancelled: bool) -> None: ...
    @Priority.setter
    def Priority(self, inPriority: int) -> None: ...
    @QueueDriver.setter
    def QueueDriver(self, driver: PrintDriver) -> None: ...
    @QueuePort.setter
    def QueuePort(self, port: PrintPort) -> None: ...
    @QueuePrintProcessor.setter
    def QueuePrintProcessor(self, printProcessor: PrintProcessor) -> None: ...
    @SeparatorFile.setter
    def SeparatorFile(self, inSeparatorFile: str) -> None: ...
    @ShareName.setter
    def ShareName(self, inShareName: str) -> None: ...
    @StartTimeOfDay.setter
    def StartTimeOfDay(self, inStartTime: int) -> None: ...
    @UntilTimeOfDay.setter
    def UntilTimeOfDay(self, inUntilTime: int) -> None: ...
    @UserPrintTicket.setter
    def UserPrintTicket(self, newUserPrintTicket: PrintTicket) -> None: ...


class PrintQueueAttributes:
    #None = 0
    Queued = 1
    Direct = 2
    Shared = 8
    Hidden = 32
    EnableDevQuery = 128
    KeepPrintedJobs = 256
    ScheduleCompletedJobsFirst = 512
    EnableBidi = 2048
    RawOnly = 4096
    Published = 8192


class PrintQueueCollection(PrintSystemObjects):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, printServer: PrintServer, propertyFilter: Set(str)): ...
    @overload
    def __init__(self, printServer: PrintServer, propertyFilter: Set(str), enumerationFlag: Set(EnumeratedPrintQueueTypes)): ...
    def Add(self, printObject: PrintQueue) -> None: ...
    @property
    def SyncRoot() -> Object: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def GetNonGenericEnumerator(self) -> IEnumerator: ...


class PrintQueueIndexedProperty:
    Name = 0
    ShareName = 1
    Comment = 2
    Location = 3
    Description = 4
    Priority = 5
    DefaultPriority = 6
    StartTimeOfDay = 7
    UntilTimeOfDay = 8
    AveragePagesPerMinute = 9
    NumberOfJobs = 10
    QueueAttributes = 11
    QueueDriver = 12
    QueuePort = 13
    QueuePrintProcessor = 14
    HostingPrintServer = 15
    QueueStatus = 16
    SeparatorFile = 17
    UserPrintTicket = 18
    DefaultPrintTicket = 19


class PrintQueueStatus:
    #None = 0
    Paused = 1
    Error = 2
    PendingDeletion = 4
    PaperJam = 8
    PaperOut = 16
    ManualFeed = 32
    PaperProblem = 64
    Offline = 128
    IOActive = 256
    Busy = 512
    Printing = 1024
    OutputBinFull = 2048
    NotAvailable = 4096
    Waiting = 8192
    Processing = 16384
    Initializing = 32768
    WarmingUp = 65536
    TonerLow = 131072
    NoToner = 262144
    PagePunt = 524288
    UserIntervention = 1048576
    OutOfMemory = 2097152
    DoorOpen = 4194304
    ServerUnknown = 8388608
    PowerSave = 16777216


class PrintQueueStream(Stream):
    @overload
    def __init__(self, printQueue: PrintQueue, printJobName: str): ...
    @overload
    def __init__(self, printQueue: PrintQueue, printJobName: str, commitDataOnClose: bool): ...
    @overload
    def __init__(self, printQueue: PrintQueue, printJobName: str, commitDataOnClose: bool, printTicket: PrintTicket): ...
    def BeginWrite(self, buffer: Set(Byte), offset: int, count: int, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def Close(self) -> None: ...
    def EndWrite(self, asyncResult: IAsyncResult) -> None: ...
    def Flush(self) -> None: ...
    @property
    def CanRead(self) -> bool: ...
    @property
    def CanSeek(self) -> bool: ...
    @property
    def CanWrite(self) -> bool: ...
    @property
    def JobIdentifier(self) -> int: ...
    @property
    def Length(self) -> Int64: ...
    @property
    def Position(self) -> Int64: ...
    def HandlePackagingProgressEvent(self, sender: Object, e: PackagingProgressEventArgs) -> None: ...
    @overload
    def Read(self, buffer: Set(Byte), offset: int, count: int) -> int: ...
    def Seek(self, offset: Int64, origin: SeekOrigin) -> Int64: ...
    @Position.setter
    def Position(self, value: Int64) -> None: ...
    def SetLength(self, value: Int64) -> None: ...
    @overload
    def Write(self, buffer: Set(Byte), offset: int, count: int) -> None: ...


class PrintQueueStringProperty(Object):
    def __init__(self): ...
    @property
    def Name(self) -> str: ...
    @property
    def Type(self) -> PrintQueueStringPropertyType: ...
    @Name.setter
    def Name(self, __set_formal: str) -> None: ...
    @Type.setter
    def Type(self, __set_formal: PrintQueueStringPropertyType) -> None: ...


class PrintQueueStringPropertyType:
    Location = 0
    Comment = 1
    ShareName = 2


class PrintServer(PrintSystemObject):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, path: str): ...
    @overload
    def __init__(self, path: str, desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, path: str, propertiesFilter: Set(str)): ...
    @overload
    def __init__(self, path: str, propertiesFilter: Set(PrintServerIndexedProperty)): ...
    @overload
    def __init__(self, path: str, propertiesFilter: Set(str), desiredAccess: PrintSystemDesiredAccess): ...
    @overload
    def __init__(self, path: str, propertiesFilter: Set(PrintServerIndexedProperty), desiredAccess: PrintSystemDesiredAccess): ...
    def Commit(self) -> None: ...
    @overload
    def DeletePrintQueue(printQueue: PrintQueue) -> bool: ...
    @overload
    def DeletePrintQueue(printQueueName: str) -> bool: ...
    @property
    def BeepEnabled(self) -> bool: ...
    @property
    def DefaultPortThreadPriority(self) -> ThreadPriority: ...
    @property
    def DefaultSchedulerPriority(self) -> ThreadPriority: ...
    @property
    def DefaultSpoolDirectory(self) -> str: ...
    @property
    def EventLog(self) -> PrintServerEventLoggingTypes: ...
    @property
    def MajorVersion(self) -> int: ...
    @property
    def MinorVersion(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NetPopup(self) -> bool: ...
    @property
    def PortThreadPriority(self) -> ThreadPriority: ...
    @property
    def RestartJobOnPoolEnabled(self) -> bool: ...
    @property
    def RestartJobOnPoolTimeout(self) -> int: ...
    @property
    def SchedulerPriority(self) -> ThreadPriority: ...
    @property
    def SubSystemVersion(self) -> Byte: ...
    @overload
    def GetPrintQueue(self, printQueueName: str) -> PrintQueue: ...
    @overload
    def GetPrintQueue(self, printQueueName: str, propertiesFilter: Set(str)) -> PrintQueue: ...
    @overload
    def GetPrintQueues(self) -> PrintQueueCollection: ...
    @overload
    def GetPrintQueues(self, propertiesFilter: Set(PrintQueueIndexedProperty)) -> PrintQueueCollection: ...
    @overload
    def GetPrintQueues(self, propertiesFilter: Set(str)) -> PrintQueueCollection: ...
    @overload
    def GetPrintQueues(self, enumerationFlag: Set(EnumeratedPrintQueueTypes)) -> PrintQueueCollection: ...
    @overload
    def GetPrintQueues(self, propertiesFilter: Set(PrintQueueIndexedProperty), enumerationFlag: Set(EnumeratedPrintQueueTypes)) -> PrintQueueCollection: ...
    @overload
    def GetPrintQueues(self, propertiesFilter: Set(str), enumerationFlag: Set(EnumeratedPrintQueueTypes)) -> PrintQueueCollection: ...
    @overload
    def InstallPrintQueue(self, printQueueName: str, driverName: str, portNames: Set(str), printProcessorName: str, initialParameters: PrintPropertyDictionary) -> PrintQueue: ...
    @overload
    def InstallPrintQueue(self, printQueueName: str, driverName: str, portNames: Set(str), printProcessorName: str, printQueueAttributes: PrintQueueAttributes) -> PrintQueue: ...
    @overload
    def InstallPrintQueue(self, printQueueName: str, driverName: str, portNames: Set(str), printProcessorName: str, printQueueAttributes: PrintQueueAttributes, printQueueProperty: PrintQueueStringProperty, printQueuePriority: int, printQueueDefaultPriority: int) -> PrintQueue: ...
    @overload
    def InstallPrintQueue(self, printQueueName: str, driverName: str, portNames: Set(str), printProcessorName: str, printQueueAttributes: PrintQueueAttributes, printQueueShareName: str, printQueueComment: str, printQueueLocation: str, printQueueSeparatorFile: str, printQueuePriority: int, printQueueDefaultPriority: int) -> PrintQueue: ...
    def Refresh(self) -> None: ...
    @BeepEnabled.setter
    def BeepEnabled(self, value: bool) -> None: ...
    @DefaultSpoolDirectory.setter
    def DefaultSpoolDirectory(self, value: str) -> None: ...
    @EventLog.setter
    def EventLog(self, value: PrintServerEventLoggingTypes) -> None: ...
    @NetPopup.setter
    def NetPopup(self, value: bool) -> None: ...
    @PortThreadPriority.setter
    def PortThreadPriority(self, value: ThreadPriority) -> None: ...
    @RestartJobOnPoolEnabled.setter
    def RestartJobOnPoolEnabled(self, value: bool) -> None: ...
    @RestartJobOnPoolTimeout.setter
    def RestartJobOnPoolTimeout(self, value: int) -> None: ...
    @SchedulerPriority.setter
    def SchedulerPriority(self, value: ThreadPriority) -> None: ...


class PrintServerEventLoggingTypes:
    #None = 0
    LogPrintingSuccessEvents = 1
    LogPrintingErrorEvents = 2
    LogPrintingWarningEvents = 3
    LogPrintingInformationEvents = 4
    LogAllPrintingEvents = 5


class PrintServerIndexedProperty:
    DefaultSpoolDirectory = 0
    PortThreadPriority = 1
    DefaultPortThreadPriority = 2
    SchedulerPriority = 3
    DefaultSchedulerPriority = 4
    BeepEnabled = 5
    NetPopup = 6
    EventLog = 7
    MajorVersion = 8
    MinorVersion = 9
    RestartJobOnPoolTimeout = 10
    RestartJobOnPoolEnabled = 11


class PrintSystemDesiredAccess:
    #None = 0
    EnumerateServer = 131074
    UsePrinter = 131080
    AdministrateServer = 983041
    AdministratePrinter = 983052


class PrintSystemJobInfo(PrintSystemObject):
    def Cancel(self) -> None: ...
    def Commit(self) -> None: ...
    @property
    def HostingPrintQueue(self) -> PrintQueue: ...
    @property
    def HostingPrintServer(self) -> PrintServer: ...
    @property
    def IsBlocked(self) -> bool: ...
    @property
    def IsCompleted(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDeleting(self) -> bool: ...
    @property
    def IsInError(self) -> bool: ...
    @property
    def IsOffline(self) -> bool: ...
    @property
    def IsPaperOut(self) -> bool: ...
    @property
    def IsPaused(self) -> bool: ...
    @property
    def IsPrinted(self) -> bool: ...
    @property
    def IsPrinting(self) -> bool: ...
    @property
    def IsRestarted(self) -> bool: ...
    @property
    def IsRetained(self) -> bool: ...
    @property
    def IsSpooling(self) -> bool: ...
    @property
    def IsUserInterventionRequired(self) -> bool: ...
    @property
    def JobIdentifier(self) -> int: ...
    @property
    def JobName(self) -> str: ...
    @property
    def JobSize(self) -> int: ...
    @property
    def JobStatus(self) -> PrintJobStatus: ...
    @property
    def JobStream(self) -> Stream: ...
    @property
    def NumberOfPages(self) -> int: ...
    @property
    def NumberOfPagesPrinted(self) -> int: ...
    @property
    def PositionInPrintQueue(self) -> int: ...
    @property
    def Priority(self) -> PrintJobPriority: ...
    def Get(printQueue: PrintQueue, jobIdentifier: int) -> PrintSystemJobInfo: ...
    @property
    def StartTimeOfDay(self) -> int: ...
    @property
    def Submitter(self) -> str: ...
    @property
    def TimeJobSubmitted(self) -> DateTime: ...
    @property
    def TimeSinceStartedPrinting(self) -> int: ...
    @property
    def UntilTimeOfDay(self) -> int: ...
    def Pause(self) -> None: ...
    def Refresh(self) -> None: ...
    def Restart(self) -> None: ...
    def Resume(self) -> None: ...
    @JobName.setter
    def JobName(self, newJobName: str) -> None: ...


class PrintSystemObject(Object):
    def Commit(self) -> None: ...
    def Dispose(self) -> None: ...
    @property
    def Name(self) -> str: ...
    @property
    def Parent(self) -> PrintSystemObject: ...
    @property
    def PropertiesCollection(self) -> PrintPropertyDictionary: ...
    def Refresh(self) -> None: ...


class PrintSystemObjectLoadMode:
    #None = 0
    LoadUninitialized = 1
    LoadInitialized = 2


class PrintSystemObjectPropertiesChangedEventArgs(EventArgs):
    def __init__(self, events: StringCollection): ...
    def Dispose(self) -> None: ...
    @property
    def PropertiesNames(self) -> StringCollection: ...


class PrintSystemObjectPropertyChangedEventArgs(EventArgs):
    def __init__(self, eventName: str): ...
    def Dispose(self) -> None: ...
    @property
    def PropertyName(self) -> str: ...


class PrintSystemObjects(Object):
    def Dispose(self) -> None: ...
