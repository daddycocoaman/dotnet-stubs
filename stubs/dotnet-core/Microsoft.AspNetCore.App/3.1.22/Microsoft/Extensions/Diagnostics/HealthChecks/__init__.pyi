from typing import Tuple, Set, Iterable, List


class HealthCheckPublisherOptions:
    def __init__(self): ...
    @property
    def Delay(self) -> TimeSpan: ...
    @property
    def Period(self) -> TimeSpan: ...
    @property
    def Predicate(self) -> Func: ...
    @property
    def Timeout(self) -> TimeSpan: ...
    @Delay.setter
    def Delay(self, value: TimeSpan) -> None: ...
    @Period.setter
    def Period(self, value: TimeSpan) -> None: ...
    @Predicate.setter
    def Predicate(self, value: Func) -> None: ...
    @Timeout.setter
    def Timeout(self, value: TimeSpan) -> None: ...


class HealthCheckService:
    @overload
    def CheckHealthAsync(self, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def CheckHealthAsync(self, predicate: Func, cancellationToken: CancellationToken) -> Task: ...


class HealthCheckServiceOptions:
    def __init__(self): ...
    @property
    def Registrations(self) -> ICollection: ...
