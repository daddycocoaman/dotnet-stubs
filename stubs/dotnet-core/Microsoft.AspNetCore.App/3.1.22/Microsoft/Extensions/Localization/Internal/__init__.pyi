from typing import Tuple, Set, Iterable, List


class AssemblyWrapper:
    def __init__(self, assembly: Assembly): ...
    @property
    def Assembly(self) -> Assembly: ...
    @property
    def FullName(self) -> str: ...
    def GetManifestResourceStream(self, name: str) -> Stream: ...


class IResourceStringProvider:
    def GetAllResourceStrings(self, culture: CultureInfo, throwOnMissing: bool) -> List[str]: ...


class ResourceManagerStringProvider:
    def __init__(self, resourceCache: IResourceNamesCache, resourceManager: ResourceManager, assembly: Assembly, baseName: str): ...
    def GetAllResourceStrings(self, culture: CultureInfo, throwOnMissing: bool) -> List[str]: ...
