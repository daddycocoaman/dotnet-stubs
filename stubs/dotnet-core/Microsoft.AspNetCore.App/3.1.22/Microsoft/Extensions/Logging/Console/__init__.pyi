from typing import Tuple, Set, Iterable, List


class ConsoleLoggerFormat:
    Default = 0
    Systemd = 1


class ConsoleLoggerOptions:
    def __init__(self): ...
    @property
    def DisableColors(self) -> bool: ...
    @property
    def Format(self) -> ConsoleLoggerFormat: ...
    @property
    def IncludeScopes(self) -> bool: ...
    @property
    def LogToStandardErrorThreshold(self) -> LogLevel: ...
    @property
    def TimestampFormat(self) -> str: ...
    @DisableColors.setter
    def DisableColors(self, value: bool) -> None: ...
    @Format.setter
    def Format(self, value: ConsoleLoggerFormat) -> None: ...
    @IncludeScopes.setter
    def IncludeScopes(self, value: bool) -> None: ...
    @LogToStandardErrorThreshold.setter
    def LogToStandardErrorThreshold(self, value: LogLevel) -> None: ...
    @TimestampFormat.setter
    def TimestampFormat(self, value: str) -> None: ...


class ConsoleLoggerProvider:
    def __init__(self, options: IOptionsMonitor): ...
    def CreateLogger(self, name: str) -> ILogger: ...
    def Dispose(self) -> None: ...
    def SetScopeProvider(self, scopeProvider: IExternalScopeProvider) -> None: ...
