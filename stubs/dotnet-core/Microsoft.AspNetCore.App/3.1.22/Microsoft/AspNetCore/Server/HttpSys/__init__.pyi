from typing import Tuple, Set, Iterable, List


class AuthenticationManager:
    @property
    def AllowAnonymous(self) -> bool: ...
    @property
    def Schemes(self) -> AuthenticationSchemes: ...
    @AllowAnonymous.setter
    def AllowAnonymous(self, value: bool) -> None: ...
    @Schemes.setter
    def Schemes(self, value: AuthenticationSchemes) -> None: ...


class AuthenticationSchemes:
    #None = 0
    Basic = 1
    NTLM = 4
    Negotiate = 8
    Kerberos = 16


class ClientCertificateMethod:
    NoCertificate = 0
    AllowCertificate = 1
    AllowRenegotation = 2


class Http503VerbosityLevel:
    Basic = 0
    Limited = 1
    Full = 2


class HttpSysDefaults:
    pass


class HttpSysException:
    @property
    def ErrorCode(self) -> int: ...


class HttpSysOptions:
    def __init__(self): ...
    @property
    def AllowSynchronousIO(self) -> bool: ...
    @property
    def Authentication(self) -> AuthenticationManager: ...
    @property
    def ClientCertificateMethod(self) -> ClientCertificateMethod: ...
    @property
    def EnableResponseCaching(self) -> bool: ...
    @property
    def Http503Verbosity(self) -> Http503VerbosityLevel: ...
    @property
    def MaxAccepts(self) -> int: ...
    @property
    def MaxConnections(self) -> Nullable: ...
    @property
    def MaxRequestBodySize(self) -> Nullable: ...
    @property
    def RequestQueueLimit(self) -> Int64: ...
    @property
    def RequestQueueMode(self) -> RequestQueueMode: ...
    @property
    def RequestQueueName(self) -> str: ...
    @property
    def ThrowWriteExceptions(self) -> bool: ...
    @property
    def Timeouts(self) -> TimeoutManager: ...
    @property
    def UrlPrefixes(self) -> UrlPrefixCollection: ...
    @AllowSynchronousIO.setter
    def AllowSynchronousIO(self, value: bool) -> None: ...
    @ClientCertificateMethod.setter
    def ClientCertificateMethod(self, value: ClientCertificateMethod) -> None: ...
    @EnableResponseCaching.setter
    def EnableResponseCaching(self, value: bool) -> None: ...
    @Http503Verbosity.setter
    def Http503Verbosity(self, value: Http503VerbosityLevel) -> None: ...
    @MaxAccepts.setter
    def MaxAccepts(self, value: int) -> None: ...
    @MaxConnections.setter
    def MaxConnections(self, value: Nullable) -> None: ...
    @MaxRequestBodySize.setter
    def MaxRequestBodySize(self, value: Nullable) -> None: ...
    @RequestQueueLimit.setter
    def RequestQueueLimit(self, value: Int64) -> None: ...
    @RequestQueueMode.setter
    def RequestQueueMode(self, value: RequestQueueMode) -> None: ...
    @RequestQueueName.setter
    def RequestQueueName(self, value: str) -> None: ...
    @ThrowWriteExceptions.setter
    def ThrowWriteExceptions(self, value: bool) -> None: ...


class IHttpSysRequestInfoFeature:
    @property
    def RequestInfo(self) -> IReadOnlyDictionary: ...


class RequestQueueMode:
    Create = 0
    Attach = 1
    CreateOrAttach = 2


class TimeoutManager:
    @property
    def DrainEntityBody(self) -> TimeSpan: ...
    @property
    def EntityBody(self) -> TimeSpan: ...
    @property
    def HeaderWait(self) -> TimeSpan: ...
    @property
    def IdleConnection(self) -> TimeSpan: ...
    @property
    def MinSendBytesPerSecond(self) -> Int64: ...
    @property
    def RequestQueue(self) -> TimeSpan: ...
    @DrainEntityBody.setter
    def DrainEntityBody(self, value: TimeSpan) -> None: ...
    @EntityBody.setter
    def EntityBody(self, value: TimeSpan) -> None: ...
    @HeaderWait.setter
    def HeaderWait(self, value: TimeSpan) -> None: ...
    @IdleConnection.setter
    def IdleConnection(self, value: TimeSpan) -> None: ...
    @MinSendBytesPerSecond.setter
    def MinSendBytesPerSecond(self, value: Int64) -> None: ...
    @RequestQueue.setter
    def RequestQueue(self, value: TimeSpan) -> None: ...


class UrlPrefix:
    @overload
    def Create(prefix: str) -> UrlPrefix: ...
    @overload
    def Create(scheme: str, host: str, port: str, path: str) -> UrlPrefix: ...
    @overload
    def Create(scheme: str, host: str, portValue: Nullable, path: str) -> UrlPrefix: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def FullPrefix(self) -> str: ...
    @property
    def Host(self) -> str: ...
    @property
    def IsHttps(self) -> bool: ...
    @property
    def Path(self) -> str: ...
    @property
    def Port(self) -> str: ...
    @property
    def PortValue(self) -> int: ...
    @property
    def Scheme(self) -> str: ...
    def GetHashCode(self) -> int: ...
    def ToString(self) -> str: ...


class UrlPrefixCollection:
    @overload
    def Add(self, prefix: str) -> None: ...
    @overload
    def Add(self, item: UrlPrefix) -> None: ...
    def Clear(self) -> None: ...
    def Contains(self, item: UrlPrefix) -> bool: ...
    def CopyTo(self, array: Set(UrlPrefix), arrayIndex: int) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def GetEnumerator(self) -> IEnumerator: ...
    @overload
    def Remove(self, prefix: str) -> bool: ...
    @overload
    def Remove(self, item: UrlPrefix) -> bool: ...
