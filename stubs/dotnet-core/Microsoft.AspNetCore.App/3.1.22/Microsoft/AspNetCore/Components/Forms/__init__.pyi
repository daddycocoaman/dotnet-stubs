from typing import Tuple, Set, Iterable, List


class EditContextFieldClassExtensions:
    @overload
    def FieldCssClass(editContext: EditContext, accessor: Expression) -> str: ...
    @overload
    def FieldCssClass(editContext: EditContext, fieldIdentifier: FieldIdentifier) -> Tuple[str, FieldIdentifier]: ...


class EditForm(ComponentBase):
    def __init__(self): ...
    @property
    def AdditionalAttributes(self) -> IReadOnlyDictionary: ...
    @property
    def ChildContent(self) -> RenderFragment: ...
    @property
    def EditContext(self) -> EditContext: ...
    @property
    def Model(self) -> Object: ...
    @property
    def OnInvalidSubmit(self) -> EventCallback: ...
    @property
    def OnSubmit(self) -> EventCallback: ...
    @property
    def OnValidSubmit(self) -> EventCallback: ...
    @AdditionalAttributes.setter
    def AdditionalAttributes(self, value: IReadOnlyDictionary) -> None: ...
    @ChildContent.setter
    def ChildContent(self, value: RenderFragment) -> None: ...
    @EditContext.setter
    def EditContext(self, value: EditContext) -> None: ...
    @Model.setter
    def Model(self, value: Object) -> None: ...
    @OnInvalidSubmit.setter
    def OnInvalidSubmit(self, value: EventCallback) -> None: ...
    @OnSubmit.setter
    def OnSubmit(self, value: EventCallback) -> None: ...
    @OnValidSubmit.setter
    def OnValidSubmit(self, value: EventCallback) -> None: ...




class InputCheckbox:
    def __init__(self): ...








class InputText:
    def __init__(self): ...


class InputTextArea:
    def __init__(self): ...




class ValidationSummary(ComponentBase):
    def __init__(self): ...
    @property
    def AdditionalAttributes(self) -> IReadOnlyDictionary: ...
    @property
    def Model(self) -> Object: ...
    @AdditionalAttributes.setter
    def AdditionalAttributes(self, value: IReadOnlyDictionary) -> None: ...
    @Model.setter
    def Model(self, value: Object) -> None: ...
