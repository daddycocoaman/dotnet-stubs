from typing import Tuple, Set, Iterable, List


class AuthenticationState:
    def __init__(self, user: ClaimsPrincipal): ...
    @property
    def User(self) -> ClaimsPrincipal: ...


class AuthenticationStateChangedHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, task: Task, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, task: Task) -> None: ...


class AuthenticationStateProvider:
    def add_AuthenticationStateChanged(self, value: AuthenticationStateChangedHandler) -> None: ...
    def GetAuthenticationStateAsync(self) -> Task: ...
    def remove_AuthenticationStateChanged(self, value: AuthenticationStateChangedHandler) -> None: ...


class AuthorizeRouteView(RouteView):
    def __init__(self): ...
    @property
    def Authorizing(self) -> RenderFragment: ...
    @property
    def NotAuthorized(self) -> RenderFragment: ...
    @Authorizing.setter
    def Authorizing(self, value: RenderFragment) -> None: ...
    @NotAuthorized.setter
    def NotAuthorized(self, value: RenderFragment) -> None: ...


class AuthorizeView(AuthorizeViewCore):
    def __init__(self): ...
    @property
    def Policy(self) -> str: ...
    @property
    def Roles(self) -> str: ...
    @Policy.setter
    def Policy(self, value: str) -> None: ...
    @Roles.setter
    def Roles(self, value: str) -> None: ...


class AuthorizeViewCore(ComponentBase):
    @property
    def Authorized(self) -> RenderFragment: ...
    @property
    def Authorizing(self) -> RenderFragment: ...
    @property
    def ChildContent(self) -> RenderFragment: ...
    @property
    def NotAuthorized(self) -> RenderFragment: ...
    @property
    def Resource(self) -> Object: ...
    @Authorized.setter
    def Authorized(self, value: RenderFragment) -> None: ...
    @Authorizing.setter
    def Authorizing(self, value: RenderFragment) -> None: ...
    @ChildContent.setter
    def ChildContent(self, value: RenderFragment) -> None: ...
    @NotAuthorized.setter
    def NotAuthorized(self, value: RenderFragment) -> None: ...
    @Resource.setter
    def Resource(self, value: Object) -> None: ...


class CascadingAuthenticationState(ComponentBase):
    def __init__(self): ...
    @property
    def ChildContent(self) -> RenderFragment: ...
    @ChildContent.setter
    def ChildContent(self, value: RenderFragment) -> None: ...


class IHostEnvironmentAuthenticationStateProvider:
    def SetAuthenticationState(self, authenticationStateTask: Task) -> None: ...
