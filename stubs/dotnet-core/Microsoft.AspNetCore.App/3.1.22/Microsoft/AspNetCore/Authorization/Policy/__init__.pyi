from typing import Tuple, Set, Iterable, List


class IPolicyEvaluator:
    def AuthenticateAsync(self, policy: AuthorizationPolicy, context: HttpContext) -> Task: ...
    def AuthorizeAsync(self, policy: AuthorizationPolicy, authenticationResult: AuthenticateResult, context: HttpContext, resource: Object) -> Task: ...


class PolicyAuthorizationResult:
    def Challenge() -> PolicyAuthorizationResult: ...
    def Forbid() -> PolicyAuthorizationResult: ...
    @property
    def Challenged(self) -> bool: ...
    @property
    def Forbidden(self) -> bool: ...
    @property
    def Succeeded(self) -> bool: ...
    def Success() -> PolicyAuthorizationResult: ...


class PolicyEvaluator:
    def __init__(self, authorization: IAuthorizationService): ...
    def AuthenticateAsync(self, policy: AuthorizationPolicy, context: HttpContext) -> Task: ...
    def AuthorizeAsync(self, policy: AuthorizationPolicy, authenticationResult: AuthenticateResult, context: HttpContext, resource: Object) -> Task: ...
