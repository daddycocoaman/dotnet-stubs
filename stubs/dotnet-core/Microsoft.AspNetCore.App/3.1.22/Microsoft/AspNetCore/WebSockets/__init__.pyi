from typing import Tuple, Set, Iterable, List


class ExtendedWebSocketAcceptContext(WebSocketAcceptContext):
    def __init__(self): ...
    @property
    def KeepAliveInterval(self) -> Nullable: ...
    @property
    def ReceiveBufferSize(self) -> Nullable: ...
    @property
    def SubProtocol(self) -> str: ...
    @KeepAliveInterval.setter
    def KeepAliveInterval(self, value: Nullable) -> None: ...
    @ReceiveBufferSize.setter
    def ReceiveBufferSize(self, value: Nullable) -> None: ...
    @SubProtocol.setter
    def SubProtocol(self, value: str) -> None: ...


class WebSocketMiddleware:
    def __init__(self, next: RequestDelegate, options: IOptions, loggerFactory: ILoggerFactory): ...
    def Invoke(self, context: HttpContext) -> Task: ...


class WebSocketsDependencyInjectionExtensions:
    def AddWebSockets(services: IServiceCollection, configure: Action) -> IServiceCollection: ...
