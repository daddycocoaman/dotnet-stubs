from typing import Tuple, Set, Iterable, List


class NetworkInformationAccess:
    #None = 0
    Read = 1
    Ping = 4


class NetworkInformationPermission(CodeAccessPermission):
    @overload
    def __init__(self, state: PermissionState): ...
    @overload
    def __init__(self, access: NetworkInformationAccess): ...
    def AddPermission(self, access: NetworkInformationAccess) -> None: ...
    def Copy(self) -> IPermission: ...
    def FromXml(self, securityElement: SecurityElement) -> None: ...
    @property
    def Access(self) -> NetworkInformationAccess: ...
    def Intersect(self, target: IPermission) -> IPermission: ...
    def IsSubsetOf(self, target: IPermission) -> bool: ...
    def IsUnrestricted(self) -> bool: ...
    def ToXml(self) -> SecurityElement: ...
    def Union(self, target: IPermission) -> IPermission: ...


class NetworkInformationPermissionAttribute(CodeAccessSecurityAttribute):
    def __init__(self, action: SecurityAction): ...
    def CreatePermission(self) -> IPermission: ...
    @property
    def Access(self) -> str: ...
    @Access.setter
    def Access(self, value: str) -> None: ...
