from typing import Tuple, Set, Iterable, List


class AfterViewComponentEventData(EventData):
    def __init__(self, actionDescriptor: ActionDescriptor, viewComponentContext: ViewComponentContext, viewComponentResult: IViewComponentResult, viewComponent: Object): ...
    @property
    def ActionDescriptor(self) -> ActionDescriptor: ...
    @property
    def ViewComponent(self) -> Object: ...
    @property
    def ViewComponentContext(self) -> ViewComponentContext: ...
    @property
    def ViewComponentResult(self) -> IViewComponentResult: ...


class AfterViewEventData(EventData):
    def __init__(self, view: IView, viewContext: ViewContext): ...
    @property
    def View(self) -> IView: ...
    @property
    def ViewContext(self) -> ViewContext: ...


class BeforeViewComponentEventData(EventData):
    def __init__(self, actionDescriptor: ActionDescriptor, viewComponentContext: ViewComponentContext, viewComponent: Object): ...
    @property
    def ActionDescriptor(self) -> ActionDescriptor: ...
    @property
    def ViewComponent(self) -> Object: ...
    @property
    def ViewComponentContext(self) -> ViewComponentContext: ...


class BeforeViewEventData(EventData):
    def __init__(self, view: IView, viewContext: ViewContext): ...
    @property
    def View(self) -> IView: ...
    @property
    def ViewContext(self) -> ViewContext: ...


class ViewComponentAfterViewExecuteEventData(EventData):
    def __init__(self, actionDescriptor: ActionDescriptor, viewComponentContext: ViewComponentContext, view: IView): ...
    @property
    def ActionDescriptor(self) -> ActionDescriptor: ...
    @property
    def View(self) -> IView: ...
    @property
    def ViewComponentContext(self) -> ViewComponentContext: ...


class ViewComponentBeforeViewExecuteEventData(EventData):
    def __init__(self, actionDescriptor: ActionDescriptor, viewComponentContext: ViewComponentContext, view: IView): ...
    @property
    def ActionDescriptor(self) -> ActionDescriptor: ...
    @property
    def View(self) -> IView: ...
    @property
    def ViewComponentContext(self) -> ViewComponentContext: ...


class ViewFoundEventData(EventData):
    def __init__(self, actionContext: ActionContext, isMainPage: bool, result: ActionResult, viewName: str, view: IView): ...
    @property
    def ActionContext(self) -> ActionContext: ...
    @property
    def IsMainPage(self) -> bool: ...
    @property
    def Result(self) -> ActionResult: ...
    @property
    def View(self) -> IView: ...
    @property
    def ViewName(self) -> str: ...


class ViewNotFoundEventData(EventData):
    def __init__(self, actionContext: ActionContext, isMainPage: bool, result: ActionResult, viewName: str, searchedLocations: Iterable[str]): ...
    @property
    def ActionContext(self) -> ActionContext: ...
    @property
    def IsMainPage(self) -> bool: ...
    @property
    def Result(self) -> ActionResult: ...
    @property
    def SearchedLocations(self) -> Iterable[str]: ...
    @property
    def ViewName(self) -> str: ...
