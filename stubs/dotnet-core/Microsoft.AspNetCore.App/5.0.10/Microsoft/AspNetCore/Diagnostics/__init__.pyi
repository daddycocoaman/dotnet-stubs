from typing import Tuple, Set, Iterable, List


class DeveloperExceptionPageMiddleware:
    def __init__(self, next: RequestDelegate, options: IOptions, loggerFactory: ILoggerFactory, hostingEnvironment: IWebHostEnvironment, diagnosticSource: DiagnosticSource, filters: Iterable[IDeveloperPageExceptionFilter]): ...
    def Invoke(self, context: HttpContext) -> Task: ...


class ExceptionHandlerFeature:
    def __init__(self): ...
    @property
    def Error(self) -> Exception: ...
    @property
    def Path(self) -> str: ...
    @Error.setter
    def Error(self, value: Exception) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...


class ExceptionHandlerMiddleware:
    def __init__(self, next: RequestDelegate, loggerFactory: ILoggerFactory, options: IOptions, diagnosticListener: DiagnosticListener): ...
    def Invoke(self, context: HttpContext) -> Task: ...


class StatusCodeContext:
    def __init__(self, context: HttpContext, options: StatusCodePagesOptions, next: RequestDelegate): ...
    @property
    def HttpContext(self) -> HttpContext: ...
    @property
    def Next(self) -> RequestDelegate: ...
    @property
    def Options(self) -> StatusCodePagesOptions: ...


class StatusCodePagesFeature:
    def __init__(self): ...
    @property
    def Enabled(self) -> bool: ...
    @Enabled.setter
    def Enabled(self, value: bool) -> None: ...


class StatusCodePagesMiddleware:
    def __init__(self, next: RequestDelegate, options: IOptions): ...
    def Invoke(self, context: HttpContext) -> Task: ...


class StatusCodeReExecuteFeature:
    def __init__(self): ...
    @property
    def OriginalPath(self) -> str: ...
    @property
    def OriginalPathBase(self) -> str: ...
    @property
    def OriginalQueryString(self) -> str: ...
    @OriginalPath.setter
    def OriginalPath(self, value: str) -> None: ...
    @OriginalPathBase.setter
    def OriginalPathBase(self, value: str) -> None: ...
    @OriginalQueryString.setter
    def OriginalQueryString(self, value: str) -> None: ...


class WelcomePageMiddleware:
    def __init__(self, next: RequestDelegate, options: IOptions): ...
    def Invoke(self, context: HttpContext) -> Task: ...
