from typing import Tuple, Set, Iterable, List


class EventLogLoggerProvider:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: EventLogSettings): ...
    @overload
    def __init__(self, options: IOptions): ...
    def CreateLogger(self, name: str) -> ILogger: ...
    def Dispose(self) -> None: ...
    def SetScopeProvider(self, scopeProvider: IExternalScopeProvider) -> None: ...


class EventLogSettings:
    def __init__(self): ...
    @property
    def Filter(self) -> Func`3: ...
    @property
    def LogName(self) -> str: ...
    @property
    def MachineName(self) -> str: ...
    @property
    def SourceName(self) -> str: ...
    @Filter.setter
    def Filter(self, value: Func`3) -> None: ...
    @LogName.setter
    def LogName(self, value: str) -> None: ...
    @MachineName.setter
    def MachineName(self, value: str) -> None: ...
    @SourceName.setter
    def SourceName(self, value: str) -> None: ...
