from typing import Tuple, Set, Iterable, List


class MemoryDistributedCache:
    @overload
    def __init__(self, optionsAccessor: IOptions): ...
    @overload
    def __init__(self, optionsAccessor: IOptions, loggerFactory: ILoggerFactory): ...
    def Get(self, key: str) -> Set(Byte): ...
    def GetAsync(self, key: str, token: CancellationToken) -> Task: ...
    def Refresh(self, key: str) -> None: ...
    def RefreshAsync(self, key: str, token: CancellationToken) -> Task: ...
    def Remove(self, key: str) -> None: ...
    def RemoveAsync(self, key: str, token: CancellationToken) -> Task: ...
    def Set(self, key: str, value: Set(Byte), options: DistributedCacheEntryOptions) -> None: ...
    def SetAsync(self, key: str, value: Set(Byte), options: DistributedCacheEntryOptions, token: CancellationToken) -> Task: ...
