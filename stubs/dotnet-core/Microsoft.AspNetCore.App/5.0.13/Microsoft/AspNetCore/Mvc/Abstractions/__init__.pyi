from typing import Tuple, Set, Iterable, List


class ActionDescriptor:
    def __init__(self): ...
    @property
    def ActionConstraints(self) -> List[IActionConstraintMetadata]: ...
    @property
    def AttributeRouteInfo(self) -> AttributeRouteInfo: ...
    @property
    def BoundProperties(self) -> List[ParameterDescriptor]: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def EndpointMetadata(self) -> List[Object]: ...
    @property
    def FilterDescriptors(self) -> List[FilterDescriptor]: ...
    @property
    def Id(self) -> str: ...
    @property
    def Parameters(self) -> List[ParameterDescriptor]: ...
    @property
    def Properties(self) -> IDictionary: ...
    @property
    def RouteValues(self) -> IDictionary: ...
    @ActionConstraints.setter
    def ActionConstraints(self, value: List[IActionConstraintMetadata]) -> None: ...
    @AttributeRouteInfo.setter
    def AttributeRouteInfo(self, value: AttributeRouteInfo) -> None: ...
    @BoundProperties.setter
    def BoundProperties(self, value: List[ParameterDescriptor]) -> None: ...
    @DisplayName.setter
    def DisplayName(self, value: str) -> None: ...
    @EndpointMetadata.setter
    def EndpointMetadata(self, value: List[Object]) -> None: ...
    @FilterDescriptors.setter
    def FilterDescriptors(self, value: List[FilterDescriptor]) -> None: ...
    @Parameters.setter
    def Parameters(self, value: List[ParameterDescriptor]) -> None: ...
    @Properties.setter
    def Properties(self, value: IDictionary) -> None: ...
    @RouteValues.setter
    def RouteValues(self, value: IDictionary) -> None: ...


class ActionDescriptorExtensions:
    def GetProperty(actionDescriptor: ActionDescriptor) -> T: ...
    def SetProperty(actionDescriptor: ActionDescriptor, value: T) -> None: ...


class ActionDescriptorProviderContext:
    def __init__(self): ...
    @property
    def Results(self) -> List[ActionDescriptor]: ...


class ActionInvokerProviderContext:
    def __init__(self, actionContext: ActionContext): ...
    @property
    def ActionContext(self) -> ActionContext: ...
    @property
    def Result(self) -> IActionInvoker: ...
    @Result.setter
    def Result(self, value: IActionInvoker) -> None: ...


class IActionDescriptorProvider:
    @property
    def Order(self) -> int: ...
    def OnProvidersExecuted(self, context: ActionDescriptorProviderContext) -> None: ...
    def OnProvidersExecuting(self, context: ActionDescriptorProviderContext) -> None: ...


class IActionInvoker:
    def InvokeAsync(self) -> Task: ...


class IActionInvokerProvider:
    @property
    def Order(self) -> int: ...
    def OnProvidersExecuted(self, context: ActionInvokerProviderContext) -> None: ...
    def OnProvidersExecuting(self, context: ActionInvokerProviderContext) -> None: ...


class ParameterDescriptor:
    def __init__(self): ...
    @property
    def BindingInfo(self) -> BindingInfo: ...
    @property
    def Name(self) -> str: ...
    @property
    def ParameterType(self) -> Type: ...
    @BindingInfo.setter
    def BindingInfo(self, value: BindingInfo) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @ParameterType.setter
    def ParameterType(self, value: Type) -> None: ...
