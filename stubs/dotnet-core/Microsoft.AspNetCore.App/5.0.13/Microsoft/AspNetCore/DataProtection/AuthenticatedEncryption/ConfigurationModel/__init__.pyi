from typing import Tuple, Set, Iterable, List


class AlgorithmConfiguration:
    def CreateNewDescriptor(self) -> IAuthenticatedEncryptorDescriptor: ...


class AuthenticatedEncryptorConfiguration(AlgorithmConfiguration):
    def __init__(self): ...
    def CreateNewDescriptor(self) -> IAuthenticatedEncryptorDescriptor: ...
    @property
    def EncryptionAlgorithm(self) -> EncryptionAlgorithm: ...
    @property
    def ValidationAlgorithm(self) -> ValidationAlgorithm: ...
    @EncryptionAlgorithm.setter
    def EncryptionAlgorithm(self, value: EncryptionAlgorithm) -> None: ...
    @ValidationAlgorithm.setter
    def ValidationAlgorithm(self, value: ValidationAlgorithm) -> None: ...


class AuthenticatedEncryptorDescriptor:
    def __init__(self, configuration: AuthenticatedEncryptorConfiguration, masterKey: ISecret): ...
    def ExportToXml(self) -> XmlSerializedDescriptorInfo: ...


class AuthenticatedEncryptorDescriptorDeserializer:
    def __init__(self): ...
    def ImportFromXml(self, element: XElement) -> IAuthenticatedEncryptorDescriptor: ...


class CngCbcAuthenticatedEncryptorConfiguration(AlgorithmConfiguration):
    def __init__(self): ...
    def CreateNewDescriptor(self) -> IAuthenticatedEncryptorDescriptor: ...
    @property
    def EncryptionAlgorithm(self) -> str: ...
    @property
    def EncryptionAlgorithmKeySize(self) -> int: ...
    @property
    def EncryptionAlgorithmProvider(self) -> str: ...
    @property
    def HashAlgorithm(self) -> str: ...
    @property
    def HashAlgorithmProvider(self) -> str: ...
    @EncryptionAlgorithm.setter
    def EncryptionAlgorithm(self, value: str) -> None: ...
    @EncryptionAlgorithmKeySize.setter
    def EncryptionAlgorithmKeySize(self, value: int) -> None: ...
    @EncryptionAlgorithmProvider.setter
    def EncryptionAlgorithmProvider(self, value: str) -> None: ...
    @HashAlgorithm.setter
    def HashAlgorithm(self, value: str) -> None: ...
    @HashAlgorithmProvider.setter
    def HashAlgorithmProvider(self, value: str) -> None: ...


class CngCbcAuthenticatedEncryptorDescriptor:
    def __init__(self, configuration: CngCbcAuthenticatedEncryptorConfiguration, masterKey: ISecret): ...
    def ExportToXml(self) -> XmlSerializedDescriptorInfo: ...


class CngCbcAuthenticatedEncryptorDescriptorDeserializer:
    def __init__(self): ...
    def ImportFromXml(self, element: XElement) -> IAuthenticatedEncryptorDescriptor: ...


class CngGcmAuthenticatedEncryptorConfiguration(AlgorithmConfiguration):
    def __init__(self): ...
    def CreateNewDescriptor(self) -> IAuthenticatedEncryptorDescriptor: ...
    @property
    def EncryptionAlgorithm(self) -> str: ...
    @property
    def EncryptionAlgorithmKeySize(self) -> int: ...
    @property
    def EncryptionAlgorithmProvider(self) -> str: ...
    @EncryptionAlgorithm.setter
    def EncryptionAlgorithm(self, value: str) -> None: ...
    @EncryptionAlgorithmKeySize.setter
    def EncryptionAlgorithmKeySize(self, value: int) -> None: ...
    @EncryptionAlgorithmProvider.setter
    def EncryptionAlgorithmProvider(self, value: str) -> None: ...


class CngGcmAuthenticatedEncryptorDescriptor:
    def __init__(self, configuration: CngGcmAuthenticatedEncryptorConfiguration, masterKey: ISecret): ...
    def ExportToXml(self) -> XmlSerializedDescriptorInfo: ...


class CngGcmAuthenticatedEncryptorDescriptorDeserializer:
    def __init__(self): ...
    def ImportFromXml(self, element: XElement) -> IAuthenticatedEncryptorDescriptor: ...


class IAuthenticatedEncryptorDescriptor:
    def ExportToXml(self) -> XmlSerializedDescriptorInfo: ...


class IAuthenticatedEncryptorDescriptorDeserializer:
    def ImportFromXml(self, element: XElement) -> IAuthenticatedEncryptorDescriptor: ...


class ManagedAuthenticatedEncryptorConfiguration(AlgorithmConfiguration):
    def __init__(self): ...
    def CreateNewDescriptor(self) -> IAuthenticatedEncryptorDescriptor: ...
    @property
    def EncryptionAlgorithmKeySize(self) -> int: ...
    @property
    def EncryptionAlgorithmType(self) -> Type: ...
    @property
    def ValidationAlgorithmType(self) -> Type: ...
    @EncryptionAlgorithmKeySize.setter
    def EncryptionAlgorithmKeySize(self, value: int) -> None: ...
    @EncryptionAlgorithmType.setter
    def EncryptionAlgorithmType(self, value: Type) -> None: ...
    @ValidationAlgorithmType.setter
    def ValidationAlgorithmType(self, value: Type) -> None: ...


class ManagedAuthenticatedEncryptorDescriptor:
    def __init__(self, configuration: ManagedAuthenticatedEncryptorConfiguration, masterKey: ISecret): ...
    def ExportToXml(self) -> XmlSerializedDescriptorInfo: ...


class ManagedAuthenticatedEncryptorDescriptorDeserializer:
    def __init__(self): ...
    def ImportFromXml(self, element: XElement) -> IAuthenticatedEncryptorDescriptor: ...


class XmlExtensions:
    def MarkAsRequiresEncryption(element: XElement) -> None: ...


class XmlSerializedDescriptorInfo:
    def __init__(self, serializedDescriptorElement: XElement, deserializerType: Type): ...
    @property
    def DeserializerType(self) -> Type: ...
    @property
    def SerializedDescriptorElement(self) -> XElement: ...
