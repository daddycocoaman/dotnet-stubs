from typing import Tuple, Set, Iterable, List


class ResponseCachingFeature:
    def __init__(self): ...
    @property
    def VaryByQueryKeys(self) -> Set(str): ...
    @VaryByQueryKeys.setter
    def VaryByQueryKeys(self, value: Set(str)) -> None: ...


class ResponseCachingMiddleware:
    def __init__(self, next: RequestDelegate, options: IOptions, loggerFactory: ILoggerFactory, poolProvider: ObjectPoolProvider): ...
    def Invoke(self, httpContext: HttpContext) -> Task: ...


class ResponseCachingOptions:
    def __init__(self): ...
    @property
    def MaximumBodySize(self) -> Int64: ...
    @property
    def SizeLimit(self) -> Int64: ...
    @property
    def UseCaseSensitivePaths(self) -> bool: ...
    @MaximumBodySize.setter
    def MaximumBodySize(self, value: Int64) -> None: ...
    @SizeLimit.setter
    def SizeLimit(self, value: Int64) -> None: ...
    @UseCaseSensitivePaths.setter
    def UseCaseSensitivePaths(self, value: bool) -> None: ...
