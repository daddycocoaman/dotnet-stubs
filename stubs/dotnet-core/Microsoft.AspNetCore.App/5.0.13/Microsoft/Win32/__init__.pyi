from typing import Tuple, Set, Iterable, List


class PowerModeChangedEventArgs:
    def __init__(self, mode: PowerModes): ...
    @property
    def Mode(self) -> PowerModes: ...


class PowerModeChangedEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: PowerModeChangedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: PowerModeChangedEventArgs) -> None: ...


class PowerModes:
    Resume = 1
    StatusChange = 2
    Suspend = 3


class SessionEndedEventArgs:
    def __init__(self, reason: SessionEndReasons): ...
    @property
    def Reason(self) -> SessionEndReasons: ...


class SessionEndedEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: SessionEndedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: SessionEndedEventArgs) -> None: ...


class SessionEndingEventArgs:
    def __init__(self, reason: SessionEndReasons): ...
    @property
    def Cancel(self) -> bool: ...
    @property
    def Reason(self) -> SessionEndReasons: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> None: ...


class SessionEndingEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: SessionEndingEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: SessionEndingEventArgs) -> None: ...


class SessionEndReasons:
    Logoff = 1
    SystemShutdown = 2


class SessionSwitchEventArgs:
    def __init__(self, reason: SessionSwitchReason): ...
    @property
    def Reason(self) -> SessionSwitchReason: ...


class SessionSwitchEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: SessionSwitchEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: SessionSwitchEventArgs) -> None: ...


class SessionSwitchReason:
    ConsoleConnect = 1
    ConsoleDisconnect = 2
    RemoteConnect = 3
    RemoteDisconnect = 4
    SessionLogon = 5
    SessionLogoff = 6
    SessionLock = 7
    SessionUnlock = 8
    SessionRemoteControl = 9


class SystemEvents:
    def add_DisplaySettingsChanged(value: EventHandler) -> None: ...
    def add_DisplaySettingsChanging(value: EventHandler) -> None: ...
    def add_EventsThreadShutdown(value: EventHandler) -> None: ...
    def add_InstalledFontsChanged(value: EventHandler) -> None: ...
    def add_LowMemory(value: EventHandler) -> None: ...
    def add_PaletteChanged(value: EventHandler) -> None: ...
    def add_PowerModeChanged(value: PowerModeChangedEventHandler) -> None: ...
    def add_SessionEnded(value: SessionEndedEventHandler) -> None: ...
    def add_SessionEnding(value: SessionEndingEventHandler) -> None: ...
    def add_SessionSwitch(value: SessionSwitchEventHandler) -> None: ...
    def add_TimeChanged(value: EventHandler) -> None: ...
    def add_TimerElapsed(value: TimerElapsedEventHandler) -> None: ...
    def add_UserPreferenceChanged(value: UserPreferenceChangedEventHandler) -> None: ...
    def add_UserPreferenceChanging(value: UserPreferenceChangingEventHandler) -> None: ...
    def CreateTimer(interval: int) -> IntPtr: ...
    def InvokeOnEventsThread(method: Delegate) -> None: ...
    def KillTimer(timerId: IntPtr) -> None: ...
    def remove_DisplaySettingsChanged(value: EventHandler) -> None: ...
    def remove_DisplaySettingsChanging(value: EventHandler) -> None: ...
    def remove_EventsThreadShutdown(value: EventHandler) -> None: ...
    def remove_InstalledFontsChanged(value: EventHandler) -> None: ...
    def remove_LowMemory(value: EventHandler) -> None: ...
    def remove_PaletteChanged(value: EventHandler) -> None: ...
    def remove_PowerModeChanged(value: PowerModeChangedEventHandler) -> None: ...
    def remove_SessionEnded(value: SessionEndedEventHandler) -> None: ...
    def remove_SessionEnding(value: SessionEndingEventHandler) -> None: ...
    def remove_SessionSwitch(value: SessionSwitchEventHandler) -> None: ...
    def remove_TimeChanged(value: EventHandler) -> None: ...
    def remove_TimerElapsed(value: TimerElapsedEventHandler) -> None: ...
    def remove_UserPreferenceChanged(value: UserPreferenceChangedEventHandler) -> None: ...
    def remove_UserPreferenceChanging(value: UserPreferenceChangingEventHandler) -> None: ...


class TimerElapsedEventArgs:
    def __init__(self, timerId: IntPtr): ...
    @property
    def TimerId(self) -> IntPtr: ...


class TimerElapsedEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: TimerElapsedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: TimerElapsedEventArgs) -> None: ...


class UserPreferenceCategory:
    Accessibility = 1
    Color = 2
    Desktop = 3
    General = 4
    Icon = 5
    Keyboard = 6
    Menu = 7
    Mouse = 8
    Policy = 9
    Power = 10
    Screensaver = 11
    Window = 12
    Locale = 13
    VisualStyle = 14


class UserPreferenceChangedEventArgs:
    def __init__(self, category: UserPreferenceCategory): ...
    @property
    def Category(self) -> UserPreferenceCategory: ...


class UserPreferenceChangedEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: UserPreferenceChangedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: UserPreferenceChangedEventArgs) -> None: ...


class UserPreferenceChangingEventArgs:
    def __init__(self, category: UserPreferenceCategory): ...
    @property
    def Category(self) -> UserPreferenceCategory: ...


class UserPreferenceChangingEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: UserPreferenceChangingEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: UserPreferenceChangingEventArgs) -> None: ...
