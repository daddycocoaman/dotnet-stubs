from typing import Tuple, Set, Iterable, List


class Rfc3161TimestampTokenInfo(Object):
    def __init__(self, policyId: Oid, hashAlgorithmId: Oid, messageHash: ReadOnlyMemory, serialNumber: ReadOnlyMemory, timestamp: DateTimeOffset, accuracyInMicroseconds: Nullable, isOrdering: bool, nonce: Nullable, tsaName: Nullable, extensions: X509ExtensionCollection): ...
    def Encode(self) -> Set(Byte): ...
    @property
    def AccuracyInMicroseconds(self) -> Nullable: ...
    @property
    def HasExtensions(self) -> bool: ...
    @property
    def HashAlgorithmId(self) -> Oid: ...
    @property
    def IsOrdering(self) -> bool: ...
    @property
    def PolicyId(self) -> Oid: ...
    @property
    def Timestamp(self) -> DateTimeOffset: ...
    @property
    def Version(self) -> int: ...
    def GetExtensions(self) -> X509ExtensionCollection: ...
    def GetMessageHash(self) -> ReadOnlyMemory: ...
    def GetNonce(self) -> Nullable: ...
    def GetSerialNumber(self) -> ReadOnlyMemory: ...
    def GetTimestampAuthorityName(self) -> Nullable: ...
    def TryDecode(source: ReadOnlyMemory) -> Tuple[bool, Rfc3161TimestampTokenInfo, int]: ...
    def TryEncode(self, destination: Span) -> Tuple[bool, int]: ...
