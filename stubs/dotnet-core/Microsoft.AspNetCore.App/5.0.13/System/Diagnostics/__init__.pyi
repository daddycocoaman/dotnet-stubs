from typing import Tuple, Set, Iterable, List


class PerformanceCounterPermissionEntryCollection(CollectionBase):
    def Add(self, value: PerformanceCounterPermissionEntry) -> int: ...
    @overload
    def AddRange(self, value: PerformanceCounterPermissionEntryCollection) -> None: ...
    @overload
    def AddRange(self, value: Set(PerformanceCounterPermissionEntry)) -> None: ...
    def Contains(self, value: PerformanceCounterPermissionEntry) -> bool: ...
    def CopyTo(self, array: Set(PerformanceCounterPermissionEntry), index: int) -> None: ...
    @property
    def Item(self, index: int) -> PerformanceCounterPermissionEntry: ...
    def IndexOf(self, value: PerformanceCounterPermissionEntry) -> int: ...
    def Insert(self, index: int, value: PerformanceCounterPermissionEntry) -> None: ...
    def Remove(self, value: PerformanceCounterPermissionEntry) -> None: ...
    @Item.setter
    def Item(self, index: int, value: PerformanceCounterPermissionEntry) -> None: ...
