from typing import Tuple, Set, Iterable, List


class CompiledPageActionDescriptorProvider:
    def __init__(self, pageRouteModelProviders: Iterable[IPageRouteModelProvider], applicationModelProviders: Iterable[IPageApplicationModelProvider], applicationPartManager: ApplicationPartManager, mvcOptions: IOptions, pageOptions: IOptions): ...
    @property
    def Order(self) -> int: ...
    def OnProvidersExecuted(self, context: ActionDescriptorProviderContext) -> None: ...
    def OnProvidersExecuting(self, context: ActionDescriptorProviderContext) -> None: ...


class HandlerMethodDescriptor:
    def __init__(self): ...
    @property
    def HttpMethod(self) -> str: ...
    @property
    def MethodInfo(self) -> MethodInfo: ...
    @property
    def Name(self) -> str: ...
    @property
    def Parameters(self) -> List[HandlerParameterDescriptor]: ...
    @HttpMethod.setter
    def HttpMethod(self, value: str) -> None: ...
    @MethodInfo.setter
    def MethodInfo(self, value: MethodInfo) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Parameters.setter
    def Parameters(self, value: List[HandlerParameterDescriptor]) -> None: ...


class HandlerParameterDescriptor(ParameterDescriptor):
    def __init__(self): ...
    @property
    def ParameterInfo(self) -> ParameterInfo: ...
    @ParameterInfo.setter
    def ParameterInfo(self, value: ParameterInfo) -> None: ...


class IPageHandlerMethodSelector:
    def Select(self, context: PageContext) -> HandlerMethodDescriptor: ...


class PageActionDescriptorProvider:
    def __init__(self, pageRouteModelProviders: Iterable[IPageRouteModelProvider], mvcOptionsAccessor: IOptions, pagesOptionsAccessor: IOptions): ...
    @property
    def Order(self) -> int: ...
    def OnProvidersExecuted(self, context: ActionDescriptorProviderContext) -> None: ...
    def OnProvidersExecuting(self, context: ActionDescriptorProviderContext) -> None: ...
    @Order.setter
    def Order(self, value: int) -> None: ...


class PageBoundPropertyDescriptor(ParameterDescriptor):
    def __init__(self): ...
    @property
    def Property(self) -> PropertyInfo: ...
    @Property.setter
    def Property(self, value: PropertyInfo) -> None: ...


class PageLoader:
    def LoadAsync(self, actionDescriptor: PageActionDescriptor, endpointMetadata: EndpointMetadataCollection) -> Task: ...


class PageModelAttribute:
    def __init__(self): ...


class PageResultExecutor(ViewExecutor):
    def __init__(self, writerFactory: IHttpResponseStreamWriterFactory, compositeViewEngine: ICompositeViewEngine, razorViewEngine: IRazorViewEngine, razorPageActivator: IRazorPageActivator, diagnosticListener: DiagnosticListener, htmlEncoder: HtmlEncoder): ...
    @overload
    def ExecuteAsync(self, pageContext: PageContext, result: PageResult) -> Task: ...


class PageViewLocationExpander:
    def __init__(self): ...
    def ExpandViewLocations(self, context: ViewLocationExpanderContext, viewLocations: Iterable[str]) -> Iterable[str]: ...
    def PopulateValues(self, context: ViewLocationExpanderContext) -> None: ...


class RazorPageAdapter:
    def __init__(self, page: RazorPageBase, modelType: Type): ...
    def EnsureRenderedBodyOrSections(self) -> None: ...
    def ExecuteAsync(self) -> Task: ...
    @property
    def BodyContent(self) -> IHtmlContent: ...
    @property
    def IsLayoutBeingRendered(self) -> bool: ...
    @property
    def Layout(self) -> str: ...
    @property
    def Path(self) -> str: ...
    @property
    def PreviousSectionWriters(self) -> IDictionary: ...
    @property
    def SectionWriters(self) -> IDictionary: ...
    @property
    def ViewContext(self) -> ViewContext: ...
    @BodyContent.setter
    def BodyContent(self, value: IHtmlContent) -> None: ...
    @IsLayoutBeingRendered.setter
    def IsLayoutBeingRendered(self, value: bool) -> None: ...
    @Layout.setter
    def Layout(self, value: str) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @PreviousSectionWriters.setter
    def PreviousSectionWriters(self, value: IDictionary) -> None: ...
    @ViewContext.setter
    def ViewContext(self, value: ViewContext) -> None: ...


class ServiceBasedPageModelActivatorProvider:
    def __init__(self): ...
    def CreateActivator(self, descriptor: CompiledPageActionDescriptor) -> Func: ...
    def CreateReleaser(self, descriptor: CompiledPageActionDescriptor) -> Action: ...
