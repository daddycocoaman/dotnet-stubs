from typing import Tuple, Set, Iterable, List


class DotNetDispatcher:
    def BeginInvokeDotNet(jsRuntime: JSRuntime, invocationInfo: DotNetInvocationInfo, argsJson: str) -> None: ...
    def EndInvokeJS(jsRuntime: JSRuntime, arguments: str) -> None: ...
    def Invoke(jsRuntime: JSRuntime, invocationInfo: DotNetInvocationInfo, argsJson: str) -> Tuple[str, DotNetInvocationInfo]: ...
    def ReceiveByteArray(jsRuntime: JSRuntime, id: int, data: Set(Byte)) -> None: ...


class DotNetInvocationInfo:
    def __init__(self, assemblyName: str, methodIdentifier: str, dotNetObjectId: Int64, callId: str): ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def CallId(self) -> str: ...
    @property
    def DotNetObjectId(self) -> Int64: ...
    @property
    def MethodIdentifier(self) -> str: ...


class DotNetInvocationResult:
    @property
    def ErrorKind(self) -> str: ...
    @property
    def Exception(self) -> Exception: ...
    @property
    def ResultJson(self) -> str: ...
    @property
    def Success(self) -> bool: ...


class IJSVoidResult:
    pass
