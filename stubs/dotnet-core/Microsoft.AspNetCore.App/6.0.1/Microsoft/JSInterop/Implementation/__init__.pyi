from typing import Tuple, Set, Iterable, List


class JSInProcessObjectReference(JSObjectReference):
    def Dispose(self) -> None: ...
    def Invoke(self, identifier: str, args: Set(Object)) -> TValue: ...


class JSObjectReference:
    def DisposeAsync(self) -> ValueTask: ...
    @overload
    def InvokeAsync(self, identifier: str, args: Set(Object)) -> ValueTask: ...
    @overload
    def InvokeAsync(self, identifier: str, cancellationToken: CancellationToken, args: Set(Object)) -> ValueTask: ...


class JSObjectReferenceJsonWorker:
    def ReadJSObjectReferenceIdentifier(reader: Utf8JsonReader) -> Tuple[Int64, Utf8JsonReader]: ...
    def WriteJSObjectReference(writer: Utf8JsonWriter, objectReference: JSObjectReference) -> None: ...


class JSStreamReference(JSObjectReference):
    @property
    def Length(self) -> Int64: ...
