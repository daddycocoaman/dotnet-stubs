from typing import Tuple, Set, Iterable, List


class InstanceCompletionAction:
    DeleteNothing = 0
    DeleteAll = 1


class InstanceEncodingOption:
    #None = 0
    GZip = 1


class InstanceLockedExceptionAction:
    NoRetry = 0
    BasicRetry = 1
    AggressiveRetry = 2


class SqlWorkflowInstanceStore(InstanceStore):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, connectionString: str): ...
    @property
    def ConnectionString(self) -> str: ...
    @property
    def EnqueueRunCommands(self) -> bool: ...
    @property
    def HostLockRenewalPeriod(self) -> TimeSpan: ...
    @property
    def InstanceCompletionAction(self) -> InstanceCompletionAction: ...
    @property
    def InstanceEncodingOption(self) -> InstanceEncodingOption: ...
    @property
    def InstanceLockedExceptionAction(self) -> InstanceLockedExceptionAction: ...
    @property
    def MaxConnectionRetries(self) -> int: ...
    @property
    def RunnableInstancesDetectionPeriod(self) -> TimeSpan: ...
    def Promote(self, name: str, promoteAsVariant: Iterable[XName], promoteAsBinary: Iterable[XName]) -> None: ...
    @ConnectionString.setter
    def ConnectionString(self, value: str) -> None: ...
    @EnqueueRunCommands.setter
    def EnqueueRunCommands(self, value: bool) -> None: ...
    @HostLockRenewalPeriod.setter
    def HostLockRenewalPeriod(self, value: TimeSpan) -> None: ...
    @InstanceCompletionAction.setter
    def InstanceCompletionAction(self, value: InstanceCompletionAction) -> None: ...
    @InstanceEncodingOption.setter
    def InstanceEncodingOption(self, value: InstanceEncodingOption) -> None: ...
    @InstanceLockedExceptionAction.setter
    def InstanceLockedExceptionAction(self, value: InstanceLockedExceptionAction) -> None: ...
    @MaxConnectionRetries.setter
    def MaxConnectionRetries(self, value: int) -> None: ...
    @RunnableInstancesDetectionPeriod.setter
    def RunnableInstancesDetectionPeriod(self, value: TimeSpan) -> None: ...
