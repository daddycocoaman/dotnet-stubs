from typing import Tuple, Set, Iterable, List


class IDesignerDebugView:
    def DeleteBreakpoint(self, sourceLocation: SourceLocation) -> None: ...
    def EnsureVisible(self, sourceLocation: SourceLocation) -> None: ...
    @property
    def CurrentContext(self) -> SourceLocation: ...
    @property
    def CurrentLocation(self) -> SourceLocation: ...
    @property
    def HideSourceFileName(self) -> bool: ...
    @property
    def IsDebugging(self) -> bool: ...
    @property
    def SelectedLocation(self) -> SourceLocation: ...
    def GetBreakpointLocations(self) -> IDictionary: ...
    def GetExactLocation(self, approximateLocation: SourceLocation) -> SourceLocation: ...
    def InsertBreakpoint(self, sourceLocation: SourceLocation, breakpointType: BreakpointTypes) -> None: ...
    def ResetBreakpoints(self) -> None: ...
    @CurrentContext.setter
    def CurrentContext(self, value: SourceLocation) -> None: ...
    @CurrentLocation.setter
    def CurrentLocation(self, value: SourceLocation) -> None: ...
    @HideSourceFileName.setter
    def HideSourceFileName(self, value: bool) -> None: ...
    @IsDebugging.setter
    def IsDebugging(self, value: bool) -> None: ...
    def UpdateBreakpoint(self, sourceLocation: SourceLocation, breakpointType: BreakpointTypes) -> None: ...
