from typing import Tuple, Set, Iterable, List


class ModelTreeManager(Object):
    def __init__(self, context: EditingContext): ...
    def add_EditingScopeCompleted(self, value: EventHandler) -> None: ...
    def CreateModelItem(self, parent: ModelItem, instance: Object) -> ModelItem: ...
    @property
    def Root(self) -> ModelItem: ...
    def GetModelItem(self, instance: Object, shouldExpandModelTree: bool) -> ModelItem: ...
    def Load(self, rootInstance: Object) -> None: ...
    def remove_EditingScopeCompleted(self, value: EventHandler) -> None: ...
