from typing import Tuple, Set, Iterable, List


class ExpressionActivityEditor(UserControl):
    def BeginEdit(self) -> None: ...
    def CanCommit(self) -> bool: ...
    def Commit(self, isExplicitCommit: bool) -> bool: ...
    @property
    def AcceptsReturn(self) -> bool: ...
    @property
    def AcceptsTab(self) -> bool: ...
    @property
    def ExplicitCommit(self) -> bool: ...
    @property
    def Expression(self) -> ModelItem: ...
    @property
    def ExpressionType(self) -> Type: ...
    @property
    def HintText(self) -> str: ...
    @property
    def HorizontalScrollBarVisibility(self) -> ScrollBarVisibility: ...
    @property
    def IsIndependentExpression(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsSupportedExpression(self) -> bool: ...
    @property
    def OwnerActivity(self) -> ModelItem: ...
    @property
    def PathToArgument(self) -> str: ...
    @property
    def UseLocationExpression(self) -> bool: ...
    @property
    def VerticalScrollBarVisibility(self) -> ScrollBarVisibility: ...
    def GetExpressionActivityEditor(target: Object) -> str: ...
    @AcceptsReturn.setter
    def AcceptsReturn(self, value: bool) -> None: ...
    @AcceptsTab.setter
    def AcceptsTab(self, value: bool) -> None: ...
    @ExplicitCommit.setter
    def ExplicitCommit(self, value: bool) -> None: ...
    @Expression.setter
    def Expression(self, value: ModelItem) -> None: ...
    @ExpressionType.setter
    def ExpressionType(self, value: Type) -> None: ...
    @HintText.setter
    def HintText(self, value: str) -> None: ...
    @HorizontalScrollBarVisibility.setter
    def HorizontalScrollBarVisibility(self, value: ScrollBarVisibility) -> None: ...
    @IsIndependentExpression.setter
    def IsIndependentExpression(self, value: bool) -> None: ...
    @IsReadOnly.setter
    def IsReadOnly(self, value: bool) -> None: ...
    @IsSupportedExpression.setter
    def IsSupportedExpression(self, value: bool) -> None: ...
    @OwnerActivity.setter
    def OwnerActivity(self, value: ModelItem) -> None: ...
    @PathToArgument.setter
    def PathToArgument(self, value: str) -> None: ...
    @UseLocationExpression.setter
    def UseLocationExpression(self, value: bool) -> None: ...
    @VerticalScrollBarVisibility.setter
    def VerticalScrollBarVisibility(self, value: ScrollBarVisibility) -> None: ...
    def SetExpressionActivityEditor(target: Object, name: str) -> None: ...
