from typing import Tuple, Set, Iterable, List


class IValidationErrorService:
    def ShowValidationErrors(self, errors: List[ValidationErrorInfo]) -> None: ...


class ValidationErrorInfo(Object):
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, validationError: ValidationError): ...
    @property
    def FileName(self) -> str: ...
    @property
    def Id(self) -> str: ...
    @property
    def IsWarning(self) -> bool: ...
    @property
    def Message(self) -> str: ...
    @property
    def PropertyName(self) -> str: ...
    @property
    def SourceReferenceId(self) -> Guid: ...
    @FileName.setter
    def FileName(self, value: str) -> None: ...
    @SourceReferenceId.setter
    def SourceReferenceId(self, value: Guid) -> None: ...


class ValidationService(Object):
    def __init__(self, context: EditingContext): ...
    @property
    def Settings(self) -> ValidationSettings: ...
    @overload
    def NavigateToError(self, validationErrorInfo: ValidationErrorInfo) -> None: ...
    @overload
    def NavigateToError(self, id: str) -> None: ...
    def ValidateWorkflow(self) -> None: ...


class ValidationState:
    Valid = 0
    ChildInvalid = 1
    Warning = 2
    Error = 3
