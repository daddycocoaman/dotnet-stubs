from typing import Tuple, Set, Iterable, List


class ActivitySymbol(Object):
    @property
    def EndColumn(self) -> int: ...
    @property
    def EndLine(self) -> int: ...
    @property
    def Id(self) -> str: ...
    @property
    def StartColumn(self) -> int: ...
    @property
    def StartLine(self) -> int: ...
    def ToString(self) -> str: ...


class DebugSymbol(Object):
    def GetSymbol(instance: Object) -> Object: ...
    def SetSymbol(instance: Object, value: Object) -> None: ...


class WorkflowSymbol(Object):
    def __init__(self): ...
    def CalculateChecksum(self) -> bool: ...
    def Decode(symbolString: str) -> WorkflowSymbol: ...
    def Encode(self) -> str: ...
    @property
    def FileName(self) -> str: ...
    @property
    def Symbols(self) -> ICollection: ...
    def GetChecksum(self) -> Set(Byte): ...
    @FileName.setter
    def FileName(self, value: str) -> None: ...
    @Symbols.setter
    def Symbols(self, value: ICollection) -> None: ...
    def ToString(self) -> str: ...
