from typing import Tuple, Set, Iterable, List


class IProvideStarLayoutInfo:
    @property
    def StarLayoutCombinations(self) -> Iterable[StarLayoutInfo]: ...
    def OnStarSizeAllocationCompleted(self) -> None: ...


class IProvideStarLayoutInfoBase:
    @property
    def TargetElement(self) -> UIElement: ...
    def OnInitializeLayout(self) -> None: ...


class ISupportStarLayout:
    @property
    def IsStarLayoutPass(self) -> bool: ...
    def RegisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...
    def UnregisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...


class RibbonContextualTabGroupsPanel(Panel):
    def __init__(self): ...
    @property
    def Ribbon(self) -> Ribbon: ...


class RibbonGalleryCategoriesPanel(Panel):
    def __init__(self): ...
    @property
    def CanHorizontallyScroll(self) -> bool: ...
    @property
    def CanVerticallyScroll(self) -> bool: ...
    @property
    def ExtentHeight(self) -> float: ...
    @property
    def ExtentWidth(self) -> float: ...
    @property
    def HorizontalOffset(self) -> float: ...
    @property
    def ScrollOwner(self) -> ScrollViewer: ...
    @property
    def TargetElement(self) -> UIElement: ...
    @property
    def VerticalOffset(self) -> float: ...
    @property
    def ViewportHeight(self) -> float: ...
    @property
    def ViewportWidth(self) -> float: ...
    def LineDown(self) -> None: ...
    def LineLeft(self) -> None: ...
    def LineRight(self) -> None: ...
    def LineUp(self) -> None: ...
    def MakeVisible(self, visual: Visual, rectangle: Rect) -> Rect: ...
    def MouseWheelDown(self) -> None: ...
    def MouseWheelLeft(self) -> None: ...
    def MouseWheelRight(self) -> None: ...
    def MouseWheelUp(self) -> None: ...
    def OnInitializeLayout(self) -> None: ...
    def PageDown(self) -> None: ...
    def PageLeft(self) -> None: ...
    def PageRight(self) -> None: ...
    def PageUp(self) -> None: ...
    @CanHorizontallyScroll.setter
    def CanHorizontallyScroll(self, value: bool) -> None: ...
    @CanVerticallyScroll.setter
    def CanVerticallyScroll(self, value: bool) -> None: ...
    @ScrollOwner.setter
    def ScrollOwner(self, value: ScrollViewer) -> None: ...
    def SetHorizontalOffset(self, offset: float) -> None: ...
    def SetVerticalOffset(self, offset: float) -> None: ...


class RibbonGalleryItemsPanel(Panel):
    def __init__(self): ...


class RibbonGroupItemsPanel(Panel):
    def __init__(self): ...
    @property
    def StarLayoutCombinations(self) -> Iterable[StarLayoutInfo]: ...
    @property
    def TargetElement(self) -> UIElement: ...
    def OnInitializeLayout(self) -> None: ...
    def OnStarSizeAllocationCompleted(self) -> None: ...


class RibbonGroupsPanel(StackPanel):
    def __init__(self): ...
    @property
    def IsStarLayoutPass(self) -> bool: ...
    def RegisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...
    def UnregisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...


class RibbonMenuItemsPanel(VirtualizingStackPanel):
    def __init__(self): ...
    @property
    def IsStarLayoutPass(self) -> bool: ...
    def RegisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...
    def UnregisterStarLayoutProvider(self, starLayoutInfoProvider: IProvideStarLayoutInfoBase) -> None: ...


class RibbonQuickAccessToolBarOverflowPanel(Panel):
    def __init__(self): ...


class RibbonQuickAccessToolBarPanel(VirtualizingPanel):
    def __init__(self): ...


class RibbonScrollButtonVisibilityConverter(Object):
    def __init__(self): ...
    def Convert(self, values: Set(Object), targetType: Type, parameter: Object, culture: CultureInfo) -> Object: ...
    def ConvertBack(self, value: Object, targetTypes: Set(Type), parameter: Object, culture: CultureInfo) -> Set(Object): ...


class RibbonTabHeadersPanel(Panel):
    def __init__(self): ...
    @property
    def CanHorizontallyScroll(self) -> bool: ...
    @property
    def CanVerticallyScroll(self) -> bool: ...
    @property
    def ExtentHeight(self) -> float: ...
    @property
    def ExtentWidth(self) -> float: ...
    @property
    def HorizontalOffset(self) -> float: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ScrollOwner(self) -> ScrollViewer: ...
    @property
    def VerticalOffset(self) -> float: ...
    @property
    def ViewportHeight(self) -> float: ...
    @property
    def ViewportWidth(self) -> float: ...
    def LineDown(self) -> None: ...
    def LineLeft(self) -> None: ...
    def LineRight(self) -> None: ...
    def LineUp(self) -> None: ...
    def MakeVisible(self, visual: Visual, rectangle: Rect) -> Rect: ...
    def MouseWheelDown(self) -> None: ...
    def MouseWheelLeft(self) -> None: ...
    def MouseWheelRight(self) -> None: ...
    def MouseWheelUp(self) -> None: ...
    def PageDown(self) -> None: ...
    def PageLeft(self) -> None: ...
    def PageRight(self) -> None: ...
    def PageUp(self) -> None: ...
    @CanHorizontallyScroll.setter
    def CanHorizontallyScroll(self, value: bool) -> None: ...
    @CanVerticallyScroll.setter
    def CanVerticallyScroll(self, value: bool) -> None: ...
    @ScrollOwner.setter
    def ScrollOwner(self, value: ScrollViewer) -> None: ...
    def SetHorizontalOffset(self, offset: float) -> None: ...
    def SetVerticalOffset(self, offset: float) -> None: ...


class RibbonTabsPanel(Panel):
    def __init__(self): ...
    @property
    def CanHorizontallyScroll(self) -> bool: ...
    @property
    def CanVerticallyScroll(self) -> bool: ...
    @property
    def ExtentHeight(self) -> float: ...
    @property
    def ExtentWidth(self) -> float: ...
    @property
    def HorizontalOffset(self) -> float: ...
    @property
    def ScrollOwner(self) -> ScrollViewer: ...
    @property
    def VerticalOffset(self) -> float: ...
    @property
    def ViewportHeight(self) -> float: ...
    @property
    def ViewportWidth(self) -> float: ...
    def LineDown(self) -> None: ...
    def LineLeft(self) -> None: ...
    def LineRight(self) -> None: ...
    def LineUp(self) -> None: ...
    def MakeVisible(self, visual: Visual, rectangle: Rect) -> Rect: ...
    def MouseWheelDown(self) -> None: ...
    def MouseWheelLeft(self) -> None: ...
    def MouseWheelRight(self) -> None: ...
    def MouseWheelUp(self) -> None: ...
    def PageDown(self) -> None: ...
    def PageLeft(self) -> None: ...
    def PageRight(self) -> None: ...
    def PageUp(self) -> None: ...
    @CanHorizontallyScroll.setter
    def CanHorizontallyScroll(self, value: bool) -> None: ...
    @CanVerticallyScroll.setter
    def CanVerticallyScroll(self, value: bool) -> None: ...
    @ScrollOwner.setter
    def ScrollOwner(self, value: ScrollViewer) -> None: ...
    def SetHorizontalOffset(self, offset: float) -> None: ...
    def SetVerticalOffset(self, offset: float) -> None: ...


class RibbonTitlePanel(Panel):
    def __init__(self): ...
    @property
    def Ribbon(self) -> Ribbon: ...


class RibbonWindowSmallIconConverter(Object):
    def __init__(self): ...
    def Convert(self, value: Object, targetType: Type, parameter: Object, culture: CultureInfo) -> Object: ...
    def ConvertBack(self, value: Object, targetType: Type, parameter: Object, culture: CultureInfo) -> Object: ...


class StarLayoutInfo(DependencyObject):
    def __init__(self): ...
    @property
    def AllocatedStarWidth(self) -> float: ...
    @property
    def RequestedStarMaxWidth(self) -> float: ...
    @property
    def RequestedStarMinWidth(self) -> float: ...
    @property
    def RequestedStarWeight(self) -> float: ...
    @AllocatedStarWidth.setter
    def AllocatedStarWidth(self, value: float) -> None: ...
    @RequestedStarMaxWidth.setter
    def RequestedStarMaxWidth(self, value: float) -> None: ...
    @RequestedStarMinWidth.setter
    def RequestedStarMinWidth(self, value: float) -> None: ...
    @RequestedStarWeight.setter
    def RequestedStarWeight(self, value: float) -> None: ...
