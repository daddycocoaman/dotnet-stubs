__all__ = ['Primitives']
from typing import Tuple, Set, Iterable, List


class Ribbon(Selector):
    def __init__(self): ...
    def add_Collapsed(self, value: RoutedEventHandler) -> None: ...
    def add_Expanded(self, value: RoutedEventHandler) -> None: ...
    @property
    def ApplicationMenu(self) -> RibbonApplicationMenu: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def ContextualTabGroupHeaderTemplate(self) -> DataTemplate: ...
    @property
    def ContextualTabGroups(self) -> Collection: ...
    @property
    def ContextualTabGroupsSource(self) -> IEnumerable: ...
    @property
    def ContextualTabGroupStyle(self) -> Style: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def HelpPaneContent(self) -> Object: ...
    @property
    def HelpPaneContentTemplate(self) -> DataTemplate: ...
    @property
    def IsCollapsed(self) -> bool: ...
    @property
    def IsDropDownOpen(self) -> bool: ...
    @property
    def IsHostedInRibbonWindow(self) -> bool: ...
    @property
    def IsMinimized(self) -> bool: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBar(self) -> RibbonQuickAccessToolBar: ...
    @property
    def ShowQuickAccessToolBarOnTop(self) -> bool: ...
    @property
    def TabHeaderStyle(self) -> Style: ...
    @property
    def TabHeaderTemplate(self) -> DataTemplate: ...
    @property
    def Title(self) -> Object: ...
    @property
    def TitleTemplate(self) -> DataTemplate: ...
    @property
    def WindowIconVisibility(self) -> Visibility: ...
    def OnApplyTemplate(self) -> None: ...
    def remove_Collapsed(self, value: RoutedEventHandler) -> None: ...
    def remove_Expanded(self, value: RoutedEventHandler) -> None: ...
    @ApplicationMenu.setter
    def ApplicationMenu(self, value: RibbonApplicationMenu) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @ContextualTabGroupHeaderTemplate.setter
    def ContextualTabGroupHeaderTemplate(self, value: DataTemplate) -> None: ...
    @ContextualTabGroupsSource.setter
    def ContextualTabGroupsSource(self, value: IEnumerable) -> None: ...
    @ContextualTabGroupStyle.setter
    def ContextualTabGroupStyle(self, value: Style) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @HelpPaneContent.setter
    def HelpPaneContent(self, value: Object) -> None: ...
    @HelpPaneContentTemplate.setter
    def HelpPaneContentTemplate(self, value: DataTemplate) -> None: ...
    @IsCollapsed.setter
    def IsCollapsed(self, value: bool) -> None: ...
    @IsDropDownOpen.setter
    def IsDropDownOpen(self, value: bool) -> None: ...
    @IsMinimized.setter
    def IsMinimized(self, value: bool) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBar.setter
    def QuickAccessToolBar(self, value: RibbonQuickAccessToolBar) -> None: ...
    @ShowQuickAccessToolBarOnTop.setter
    def ShowQuickAccessToolBarOnTop(self, value: bool) -> None: ...
    @TabHeaderStyle.setter
    def TabHeaderStyle(self, value: Style) -> None: ...
    @TabHeaderTemplate.setter
    def TabHeaderTemplate(self, value: DataTemplate) -> None: ...
    @Title.setter
    def Title(self, value: Object) -> None: ...
    @TitleTemplate.setter
    def TitleTemplate(self, value: DataTemplate) -> None: ...
    @WindowIconVisibility.setter
    def WindowIconVisibility(self, value: Visibility) -> None: ...


class RibbonApplicationMenu(RibbonMenuButton):
    def __init__(self): ...
    @property
    def AuxiliaryPaneContent(self) -> Object: ...
    @property
    def AuxiliaryPaneContentTemplate(self) -> DataTemplate: ...
    @property
    def AuxiliaryPaneContentTemplateSelector(self) -> DataTemplateSelector: ...
    @property
    def FooterPaneContent(self) -> Object: ...
    @property
    def FooterPaneContentTemplate(self) -> DataTemplate: ...
    @property
    def FooterPaneContentTemplateSelector(self) -> DataTemplateSelector: ...
    def OnApplyTemplate(self) -> None: ...
    @AuxiliaryPaneContent.setter
    def AuxiliaryPaneContent(self, value: Object) -> None: ...
    @AuxiliaryPaneContentTemplate.setter
    def AuxiliaryPaneContentTemplate(self, value: DataTemplate) -> None: ...
    @AuxiliaryPaneContentTemplateSelector.setter
    def AuxiliaryPaneContentTemplateSelector(self, value: DataTemplateSelector) -> None: ...
    @FooterPaneContent.setter
    def FooterPaneContent(self, value: Object) -> None: ...
    @FooterPaneContentTemplate.setter
    def FooterPaneContentTemplate(self, value: DataTemplate) -> None: ...
    @FooterPaneContentTemplateSelector.setter
    def FooterPaneContentTemplateSelector(self, value: DataTemplateSelector) -> None: ...


class RibbonApplicationMenuItem(RibbonMenuItem):
    def __init__(self): ...
    @property
    def Level(self) -> RibbonApplicationMenuItemLevel: ...
    def OnApplyTemplate(self) -> None: ...


class RibbonApplicationMenuItemLevel:
    Top = 0
    Middle = 1
    Sub = 2


class RibbonApplicationSplitMenuItem(RibbonSplitMenuItem):
    def __init__(self): ...
    @property
    def Level(self) -> RibbonApplicationMenuItemLevel: ...
    def OnApplyTemplate(self) -> None: ...


class RibbonButton(Button):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def CornerRadius(self) -> CornerRadius: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @CornerRadius.setter
    def CornerRadius(self, value: CornerRadius) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonCheckBox(CheckBox):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonComboBox(RibbonMenuButton):
    def __init__(self): ...
    @property
    def IsEditable(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def SelectionBoxItem(self) -> Object: ...
    @property
    def SelectionBoxItemStringFormat(self) -> str: ...
    @property
    def SelectionBoxItemTemplate(self) -> DataTemplate: ...
    @property
    def SelectionBoxItemTemplateSelector(self) -> DataTemplateSelector: ...
    @property
    def SelectionBoxWidth(self) -> float: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def StaysOpenOnEdit(self) -> bool: ...
    @property
    def Text(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @IsEditable.setter
    def IsEditable(self, value: bool) -> None: ...
    @IsReadOnly.setter
    def IsReadOnly(self, value: bool) -> None: ...
    @SelectionBoxWidth.setter
    def SelectionBoxWidth(self, value: float) -> None: ...
    @StaysOpenOnEdit.setter
    def StaysOpenOnEdit(self, value: bool) -> None: ...
    @Text.setter
    def Text(self, value: str) -> None: ...


class RibbonCommands(Object):
    @property
    def AddToQuickAccessToolBarCommand() -> RoutedUICommand: ...
    @property
    def MaximizeRibbonCommand() -> RoutedUICommand: ...
    @property
    def MinimizeRibbonCommand() -> RoutedUICommand: ...
    @property
    def RemoveFromQuickAccessToolBarCommand() -> RoutedUICommand: ...
    @property
    def ShowQuickAccessToolBarAboveRibbonCommand() -> RoutedUICommand: ...
    @property
    def ShowQuickAccessToolBarBelowRibbonCommand() -> RoutedUICommand: ...


class RibbonContentPresenter(ContentPresenter):
    def __init__(self): ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    def OnApplyTemplate(self) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...


class RibbonContextMenu(ContextMenu):
    def __init__(self): ...
    @property
    def HasGallery(self) -> bool: ...


class RibbonContextualTabGroup(Control):
    def __init__(self): ...
    @property
    def Header(self) -> Object: ...
    @property
    def HeaderStringFormat(self) -> str: ...
    @property
    def HeaderTemplate(self) -> DataTemplate: ...
    @property
    def HeaderTemplateSelector(self) -> DataTemplateSelector: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @Header.setter
    def Header(self, value: Object) -> None: ...
    @HeaderStringFormat.setter
    def HeaderStringFormat(self, value: str) -> None: ...
    @HeaderTemplate.setter
    def HeaderTemplate(self, value: DataTemplate) -> None: ...
    @HeaderTemplateSelector.setter
    def HeaderTemplateSelector(self, value: DataTemplateSelector) -> None: ...


class RibbonContextualTabGroupItemsControl(ItemsControl):
    def __init__(self): ...
    @property
    def Ribbon(self) -> Ribbon: ...
    def OnApplyTemplate(self) -> None: ...


class RibbonControl(ContentControl):
    def __init__(self): ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    def OnApplyTemplate(self) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...


class RibbonControlGroup(ItemsControl):
    def __init__(self): ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    def OnApplyTemplate(self) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...


class RibbonControlLength(ValueType):
    @overload
    def __init__(self, pixels: float): ...
    @overload
    def __init__(self, value: float, type: RibbonControlLengthUnitType): ...
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    def Equals(self, other: RibbonControlLength) -> bool: ...
    @property
    def Auto() -> RibbonControlLength: ...
    @property
    def IsAbsolute(self) -> bool: ...
    @property
    def IsAuto(self) -> bool: ...
    @property
    def IsStar(self) -> bool: ...
    @property
    def RibbonControlLengthUnitType(self) -> RibbonControlLengthUnitType: ...
    @property
    def Value(self) -> float: ...
    def GetHashCode(self) -> int: ...
    def op_Equality(length1: RibbonControlLength, length2: RibbonControlLength) -> bool: ...
    def op_Inequality(length1: RibbonControlLength, length2: RibbonControlLength) -> bool: ...
    def ToString(self) -> str: ...


class RibbonControlLengthConverter(TypeConverter):
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ITypeDescriptorContext, sourceType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, context: ITypeDescriptorContext, destinationType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object) -> Object: ...
    @overload
    def ConvertTo(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object, destinationType: Type) -> Object: ...


class RibbonControlLengthUnitType:
    Auto = 0
    Pixel = 1
    Item = 2
    Star = 3


class RibbonControlService(Object):
    def AddDismissPopupHandler(element: DependencyObject, handler: RibbonDismissPopupEventHandler) -> None: ...
    def GetCanAddToQuickAccessToolBarDirectly(element: DependencyObject) -> bool: ...
    def GetCheckedBackground(element: DependencyObject) -> Brush: ...
    def GetCheckedBorderBrush(element: DependencyObject) -> Brush: ...
    def GetControlSizeDefinition(element: DependencyObject) -> RibbonControlSizeDefinition: ...
    def GetCornerRadius(element: DependencyObject) -> CornerRadius: ...
    def GetDefaultControlSizeDefinition(element: DependencyObject) -> RibbonControlSizeDefinition: ...
    def GetFocusedBackground(element: DependencyObject) -> Brush: ...
    def GetFocusedBorderBrush(element: DependencyObject) -> Brush: ...
    def GetIsInControlGroup(element: DependencyObject) -> bool: ...
    def GetIsInQuickAccessToolBar(element: DependencyObject) -> bool: ...
    def GetLabel(element: DependencyObject) -> str: ...
    def GetLargeImageSource(element: DependencyObject) -> ImageSource: ...
    def GetMouseOverBackground(element: DependencyObject) -> Brush: ...
    def GetMouseOverBorderBrush(element: DependencyObject) -> Brush: ...
    def GetPressedBackground(element: DependencyObject) -> Brush: ...
    def GetPressedBorderBrush(element: DependencyObject) -> Brush: ...
    def GetQuickAccessToolBarControlSizeDefinition(element: DependencyObject) -> RibbonControlSizeDefinition: ...
    def GetQuickAccessToolBarId(element: DependencyObject) -> Object: ...
    def GetRibbon(element: DependencyObject) -> Ribbon: ...
    def GetShowKeyboardCues(element: DependencyObject) -> bool: ...
    def GetSmallImageSource(element: DependencyObject) -> ImageSource: ...
    def GetToolTipDescription(element: DependencyObject) -> str: ...
    def GetToolTipFooterDescription(element: DependencyObject) -> str: ...
    def GetToolTipFooterImageSource(element: DependencyObject) -> ImageSource: ...
    def GetToolTipFooterTitle(element: DependencyObject) -> str: ...
    def GetToolTipImageSource(element: DependencyObject) -> ImageSource: ...
    def GetToolTipTitle(element: DependencyObject) -> str: ...
    def RemoveDismissPopupHandler(element: DependencyObject, handler: RibbonDismissPopupEventHandler) -> None: ...
    def SetCanAddToQuickAccessToolBarDirectly(element: DependencyObject, value: bool) -> None: ...
    def SetCheckedBackground(element: DependencyObject, value: Brush) -> None: ...
    def SetCheckedBorderBrush(element: DependencyObject, value: Brush) -> None: ...
    def SetControlSizeDefinition(element: DependencyObject, value: RibbonControlSizeDefinition) -> None: ...
    def SetCornerRadius(element: DependencyObject, value: CornerRadius) -> None: ...
    def SetDefaultControlSizeDefinition(element: DependencyObject, value: RibbonControlSizeDefinition) -> None: ...
    def SetFocusedBackground(element: DependencyObject, value: Brush) -> None: ...
    def SetFocusedBorderBrush(element: DependencyObject, value: Brush) -> None: ...
    def SetLabel(element: DependencyObject, value: str) -> None: ...
    def SetLargeImageSource(element: DependencyObject, value: ImageSource) -> None: ...
    def SetMouseOverBackground(element: DependencyObject, value: Brush) -> None: ...
    def SetMouseOverBorderBrush(element: DependencyObject, value: Brush) -> None: ...
    def SetPressedBackground(element: DependencyObject, value: Brush) -> None: ...
    def SetPressedBorderBrush(element: DependencyObject, value: Brush) -> None: ...
    def SetQuickAccessToolBarControlSizeDefinition(element: DependencyObject, value: RibbonControlSizeDefinition) -> None: ...
    def SetQuickAccessToolBarId(element: DependencyObject, value: Object) -> None: ...
    def SetSmallImageSource(element: DependencyObject, value: ImageSource) -> None: ...
    def SetToolTipDescription(element: DependencyObject, value: str) -> None: ...
    def SetToolTipFooterDescription(element: DependencyObject, value: str) -> None: ...
    def SetToolTipFooterImageSource(element: DependencyObject, value: ImageSource) -> None: ...
    def SetToolTipFooterTitle(element: DependencyObject, value: str) -> None: ...
    def SetToolTipImageSource(element: DependencyObject, value: ImageSource) -> None: ...
    def SetToolTipTitle(element: DependencyObject, value: str) -> None: ...


class RibbonControlSizeDefinition(Freezable):
    def __init__(self): ...
    @property
    def ImageSize(self) -> RibbonImageSize: ...
    @property
    def IsCollapsed(self) -> bool: ...
    @property
    def IsLabelVisible(self) -> bool: ...
    @property
    def MaxWidth(self) -> RibbonControlLength: ...
    @property
    def MinWidth(self) -> RibbonControlLength: ...
    @property
    def Width(self) -> RibbonControlLength: ...
    @ImageSize.setter
    def ImageSize(self, value: RibbonImageSize) -> None: ...
    @IsCollapsed.setter
    def IsCollapsed(self, value: bool) -> None: ...
    @IsLabelVisible.setter
    def IsLabelVisible(self, value: bool) -> None: ...
    @MaxWidth.setter
    def MaxWidth(self, value: RibbonControlLength) -> None: ...
    @MinWidth.setter
    def MinWidth(self, value: RibbonControlLength) -> None: ...
    @Width.setter
    def Width(self, value: RibbonControlLength) -> None: ...


class RibbonControlSizeDefinitionCollection:
    def __init__(self): ...


class RibbonDismissPopupEventArgs(RoutedEventArgs):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, dismissMode: RibbonDismissPopupMode): ...
    @property
    def DismissMode(self) -> RibbonDismissPopupMode: ...


class RibbonDismissPopupEventHandler(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: RibbonDismissPopupEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: RibbonDismissPopupEventArgs) -> None: ...


class RibbonDismissPopupMode:
    Always = 0
    MousePhysicallyNotOver = 1


class RibbonFilterMenuButton(RibbonMenuButton):
    def __init__(self): ...
    def OnApplyTemplate(self) -> None: ...


class RibbonGallery(ItemsControl):
    def __init__(self): ...
    def add_SelectionChanged(self, value: RoutedPropertyChangedEventHandler) -> None: ...
    @property
    def AllFilterItem() -> Object: ...
    @property
    def AllFilterItemContainerStyle(self) -> Style: ...
    @property
    def AllFilterItemTemplate(self) -> DataTemplate: ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CanUserFilter(self) -> bool: ...
    @property
    def CategoryStyle(self) -> Style: ...
    @property
    def CategoryTemplate(self) -> DataTemplate: ...
    @property
    def ColumnsStretchToFill(self) -> bool: ...
    @property
    def Command(self) -> ICommand: ...
    @property
    def CommandParameter(self) -> Object: ...
    @property
    def CommandTarget(self) -> IInputElement: ...
    @property
    def FilterCommand() -> RoutedCommand: ...
    @property
    def FilterItemContainerStyle(self) -> Style: ...
    @property
    def FilterItemContainerStyleSelector(self) -> StyleSelector: ...
    @property
    def FilterItemTemplate(self) -> DataTemplate: ...
    @property
    def FilterItemTemplateSelector(self) -> DataTemplateSelector: ...
    @property
    def FilterMenuButtonStyle(self) -> Style: ...
    @property
    def FilterPaneContent(self) -> Object: ...
    @property
    def FilterPaneContentTemplate(self) -> DataTemplate: ...
    @property
    def GalleryItemStyle(self) -> Style: ...
    @property
    def GalleryItemTemplate(self) -> DataTemplate: ...
    @property
    def HighlightedItem(self) -> Object: ...
    @property
    def IsSharedColumnSizeScope(self) -> bool: ...
    @property
    def IsSynchronizedWithCurrentItem(self) -> Nullable: ...
    @property
    def MaxColumnCount(self) -> int: ...
    @property
    def MinColumnCount(self) -> int: ...
    @property
    def PreviewCommandParameter(self) -> Object: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def SelectedItem(self) -> Object: ...
    @property
    def SelectedValue(self) -> Object: ...
    @property
    def SelectedValuePath(self) -> str: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    def remove_SelectionChanged(self, value: RoutedPropertyChangedEventHandler) -> None: ...
    def ScrollIntoView(self, item: Object) -> None: ...
    @AllFilterItemContainerStyle.setter
    def AllFilterItemContainerStyle(self, value: Style) -> None: ...
    @AllFilterItemTemplate.setter
    def AllFilterItemTemplate(self, value: DataTemplate) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CanUserFilter.setter
    def CanUserFilter(self, value: bool) -> None: ...
    @CategoryStyle.setter
    def CategoryStyle(self, value: Style) -> None: ...
    @CategoryTemplate.setter
    def CategoryTemplate(self, value: DataTemplate) -> None: ...
    @ColumnsStretchToFill.setter
    def ColumnsStretchToFill(self, value: bool) -> None: ...
    @Command.setter
    def Command(self, value: ICommand) -> None: ...
    @CommandParameter.setter
    def CommandParameter(self, value: Object) -> None: ...
    @CommandTarget.setter
    def CommandTarget(self, value: IInputElement) -> None: ...
    @FilterItemContainerStyle.setter
    def FilterItemContainerStyle(self, value: Style) -> None: ...
    @FilterItemContainerStyleSelector.setter
    def FilterItemContainerStyleSelector(self, value: StyleSelector) -> None: ...
    @FilterItemTemplate.setter
    def FilterItemTemplate(self, value: DataTemplate) -> None: ...
    @FilterItemTemplateSelector.setter
    def FilterItemTemplateSelector(self, value: DataTemplateSelector) -> None: ...
    @FilterMenuButtonStyle.setter
    def FilterMenuButtonStyle(self, value: Style) -> None: ...
    @FilterPaneContent.setter
    def FilterPaneContent(self, value: Object) -> None: ...
    @FilterPaneContentTemplate.setter
    def FilterPaneContentTemplate(self, value: DataTemplate) -> None: ...
    @GalleryItemStyle.setter
    def GalleryItemStyle(self, value: Style) -> None: ...
    @GalleryItemTemplate.setter
    def GalleryItemTemplate(self, value: DataTemplate) -> None: ...
    @IsSharedColumnSizeScope.setter
    def IsSharedColumnSizeScope(self, value: bool) -> None: ...
    @IsSynchronizedWithCurrentItem.setter
    def IsSynchronizedWithCurrentItem(self, value: Nullable) -> None: ...
    @MaxColumnCount.setter
    def MaxColumnCount(self, value: int) -> None: ...
    @MinColumnCount.setter
    def MinColumnCount(self, value: int) -> None: ...
    @PreviewCommandParameter.setter
    def PreviewCommandParameter(self, value: Object) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SelectedItem.setter
    def SelectedItem(self, value: Object) -> None: ...
    @SelectedValue.setter
    def SelectedValue(self, value: Object) -> None: ...
    @SelectedValuePath.setter
    def SelectedValuePath(self, value: str) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonGalleryCategory(HeaderedItemsControl):
    def __init__(self): ...
    @property
    def ColumnsStretchToFill(self) -> bool: ...
    @property
    def HeaderVisibility(self) -> Visibility: ...
    @property
    def IsSharedColumnSizeScope(self) -> bool: ...
    @property
    def MaxColumnCount(self) -> int: ...
    @property
    def MinColumnCount(self) -> int: ...
    def OnApplyTemplate(self) -> None: ...
    @ColumnsStretchToFill.setter
    def ColumnsStretchToFill(self, value: bool) -> None: ...
    @HeaderVisibility.setter
    def HeaderVisibility(self, value: Visibility) -> None: ...
    @IsSharedColumnSizeScope.setter
    def IsSharedColumnSizeScope(self, value: bool) -> None: ...
    @MaxColumnCount.setter
    def MaxColumnCount(self, value: int) -> None: ...
    @MinColumnCount.setter
    def MinColumnCount(self, value: int) -> None: ...


class RibbonGalleryItem(ContentControl):
    def __init__(self): ...
    def add_Selected(self, value: RoutedEventHandler) -> None: ...
    def add_Unselected(self, value: RoutedEventHandler) -> None: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def IsHighlighted(self) -> bool: ...
    @property
    def IsPressed(self) -> bool: ...
    @property
    def IsSelected(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def remove_Selected(self, value: RoutedEventHandler) -> None: ...
    def remove_Unselected(self, value: RoutedEventHandler) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @IsSelected.setter
    def IsSelected(self, value: bool) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonGroup(HeaderedItemsControl):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def GroupSizeDefinitions(self) -> RibbonGroupSizeDefinitionBaseCollection: ...
    @property
    def IsCollapsed(self) -> bool: ...
    @property
    def IsDropDownOpen(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @GroupSizeDefinitions.setter
    def GroupSizeDefinitions(self, value: RibbonGroupSizeDefinitionBaseCollection) -> None: ...
    @IsDropDownOpen.setter
    def IsDropDownOpen(self, value: bool) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonGroupSizeDefinition(RibbonGroupSizeDefinitionBase):
    def __init__(self): ...
    @property
    def ControlSizeDefinitions(self) -> RibbonControlSizeDefinitionCollection: ...
    @ControlSizeDefinitions.setter
    def ControlSizeDefinitions(self, value: RibbonControlSizeDefinitionCollection) -> None: ...


class RibbonGroupSizeDefinitionBase(Freezable):
    @property
    def IsCollapsed(self) -> bool: ...
    @IsCollapsed.setter
    def IsCollapsed(self, value: bool) -> None: ...


class RibbonGroupSizeDefinitionBaseCollection:
    def __init__(self): ...


class RibbonGroupTemplateSizeDefinition(RibbonGroupSizeDefinitionBase):
    def __init__(self): ...
    @property
    def ContentTemplate(self) -> DataTemplate: ...
    @ContentTemplate.setter
    def ContentTemplate(self, value: DataTemplate) -> None: ...


class RibbonImageSize:
    Collapsed = 0
    Small = 1
    Large = 2


class RibbonMenuButton(Menu):
    def __init__(self): ...
    def add_DropDownClosed(self, value: EventHandler) -> None: ...
    def add_DropDownOpened(self, value: EventHandler) -> None: ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CanUserResizeHorizontally(self) -> bool: ...
    @property
    def CanUserResizeVertically(self) -> bool: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def DropDownHeight(self) -> float: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def HasGallery(self) -> bool: ...
    @property
    def IsDropDownOpen(self) -> bool: ...
    @property
    def IsDropDownPositionedAbove(self) -> bool: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    def remove_DropDownClosed(self, value: EventHandler) -> None: ...
    def remove_DropDownOpened(self, value: EventHandler) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CanUserResizeHorizontally.setter
    def CanUserResizeHorizontally(self, value: bool) -> None: ...
    @CanUserResizeVertically.setter
    def CanUserResizeVertically(self, value: bool) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @DropDownHeight.setter
    def DropDownHeight(self, value: float) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @IsDropDownOpen.setter
    def IsDropDownOpen(self, value: bool) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonMenuItem(MenuItem):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CanUserResizeHorizontally(self) -> bool: ...
    @property
    def CanUserResizeVertically(self) -> bool: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def DropDownHeight(self) -> float: ...
    @property
    def HasGallery(self) -> bool: ...
    @property
    def ImageSource(self) -> ImageSource: ...
    @property
    def IsDropDownPositionedLeft(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def QuickAccessToolBarImageSource(self) -> ImageSource: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CanUserResizeHorizontally.setter
    def CanUserResizeHorizontally(self, value: bool) -> None: ...
    @CanUserResizeVertically.setter
    def CanUserResizeVertically(self, value: bool) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @DropDownHeight.setter
    def DropDownHeight(self, value: float) -> None: ...
    @ImageSource.setter
    def ImageSource(self, value: ImageSource) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @QuickAccessToolBarImageSource.setter
    def QuickAccessToolBarImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonQuickAccessToolBar(ItemsControl):
    def __init__(self): ...
    def AddCloneHandler(element: DependencyObject, handler: RibbonQuickAccessToolBarCloneEventHandler) -> None: ...
    @property
    def CustomizeMenuButton(self) -> RibbonMenuButton: ...
    @property
    def HasOverflowItems(self) -> bool: ...
    @property
    def IsOverflowOpen(self) -> bool: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    def GetIsOverflowItem(element: DependencyObject) -> bool: ...
    def OnApplyTemplate(self) -> None: ...
    def RemoveCloneHandler(element: DependencyObject, handler: RibbonQuickAccessToolBarCloneEventHandler) -> None: ...
    @CustomizeMenuButton.setter
    def CustomizeMenuButton(self, value: RibbonMenuButton) -> None: ...
    @IsOverflowOpen.setter
    def IsOverflowOpen(self, value: bool) -> None: ...


class RibbonQuickAccessToolBarCloneEventArgs(RoutedEventArgs):
    def __init__(self, targetElement: UIElement): ...
    @property
    def CloneInstance(self) -> UIElement: ...
    @property
    def InstanceToBeCloned(self) -> UIElement: ...
    @CloneInstance.setter
    def CloneInstance(self, value: UIElement) -> None: ...


class RibbonQuickAccessToolBarCloneEventHandler(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: RibbonQuickAccessToolBarCloneEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: RibbonQuickAccessToolBarCloneEventArgs) -> None: ...


class RibbonRadioButton(RadioButton):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def CornerRadius(self) -> CornerRadius: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @CornerRadius.setter
    def CornerRadius(self, value: CornerRadius) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonSeparator(Separator):
    def __init__(self): ...
    @property
    def Label(self) -> str: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @Label.setter
    def Label(self, value: str) -> None: ...


class RibbonSplitButton(RibbonMenuButton):
    def __init__(self): ...
    def add_Click(self, value: RoutedEventHandler) -> None: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def Command(self) -> ICommand: ...
    @property
    def CommandParameter(self) -> Object: ...
    @property
    def CommandTarget(self) -> IInputElement: ...
    @property
    def DropDownToolTipDescription(self) -> str: ...
    @property
    def DropDownToolTipFooterDescription(self) -> str: ...
    @property
    def DropDownToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def DropDownToolTipFooterTitle(self) -> str: ...
    @property
    def DropDownToolTipImageSource(self) -> ImageSource: ...
    @property
    def DropDownToolTipTitle(self) -> str: ...
    @property
    def HeaderKeyTip(self) -> str: ...
    @property
    def HeaderQuickAccessToolBarId(self) -> Object: ...
    @property
    def IsCheckable(self) -> bool: ...
    @property
    def IsChecked(self) -> bool: ...
    @property
    def LabelPosition(self) -> RibbonSplitButtonLabelPosition: ...
    def OnApplyTemplate(self) -> None: ...
    def remove_Click(self, value: RoutedEventHandler) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @Command.setter
    def Command(self, value: ICommand) -> None: ...
    @CommandParameter.setter
    def CommandParameter(self, value: Object) -> None: ...
    @CommandTarget.setter
    def CommandTarget(self, value: IInputElement) -> None: ...
    @DropDownToolTipDescription.setter
    def DropDownToolTipDescription(self, value: str) -> None: ...
    @DropDownToolTipFooterDescription.setter
    def DropDownToolTipFooterDescription(self, value: str) -> None: ...
    @DropDownToolTipFooterImageSource.setter
    def DropDownToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @DropDownToolTipFooterTitle.setter
    def DropDownToolTipFooterTitle(self, value: str) -> None: ...
    @DropDownToolTipImageSource.setter
    def DropDownToolTipImageSource(self, value: ImageSource) -> None: ...
    @DropDownToolTipTitle.setter
    def DropDownToolTipTitle(self, value: str) -> None: ...
    @HeaderKeyTip.setter
    def HeaderKeyTip(self, value: str) -> None: ...
    @HeaderQuickAccessToolBarId.setter
    def HeaderQuickAccessToolBarId(self, value: Object) -> None: ...
    @IsCheckable.setter
    def IsCheckable(self, value: bool) -> None: ...
    @IsChecked.setter
    def IsChecked(self, value: bool) -> None: ...
    @LabelPosition.setter
    def LabelPosition(self, value: RibbonSplitButtonLabelPosition) -> None: ...


class RibbonSplitButtonLabelPosition:
    Header = 0
    DropDown = 1


class RibbonSplitMenuItem(RibbonMenuItem):
    def __init__(self): ...
    @property
    def DropDownToolTipDescription(self) -> str: ...
    @property
    def DropDownToolTipFooterDescription(self) -> str: ...
    @property
    def DropDownToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def DropDownToolTipFooterTitle(self) -> str: ...
    @property
    def DropDownToolTipImageSource(self) -> ImageSource: ...
    @property
    def DropDownToolTipTitle(self) -> str: ...
    @property
    def HeaderKeyTip(self) -> str: ...
    @property
    def HeaderQuickAccessToolBarId(self) -> Object: ...
    def OnApplyTemplate(self) -> None: ...
    @DropDownToolTipDescription.setter
    def DropDownToolTipDescription(self, value: str) -> None: ...
    @DropDownToolTipFooterDescription.setter
    def DropDownToolTipFooterDescription(self, value: str) -> None: ...
    @DropDownToolTipFooterImageSource.setter
    def DropDownToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @DropDownToolTipFooterTitle.setter
    def DropDownToolTipFooterTitle(self, value: str) -> None: ...
    @DropDownToolTipImageSource.setter
    def DropDownToolTipImageSource(self, value: ImageSource) -> None: ...
    @DropDownToolTipTitle.setter
    def DropDownToolTipTitle(self, value: str) -> None: ...
    @HeaderKeyTip.setter
    def HeaderKeyTip(self, value: str) -> None: ...
    @HeaderQuickAccessToolBarId.setter
    def HeaderQuickAccessToolBarId(self, value: Object) -> None: ...


class RibbonTab(HeaderedItemsControl):
    def __init__(self): ...
    @property
    def ContextualTabGroup(self) -> RibbonContextualTabGroup: ...
    @property
    def ContextualTabGroupHeader(self) -> Object: ...
    @property
    def GroupSizeReductionOrder(self) -> StringCollection: ...
    @property
    def HeaderStyle(self) -> Style: ...
    @property
    def IsSelected(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def TabHeaderLeft(self) -> float: ...
    @property
    def TabHeaderRight(self) -> float: ...
    @ContextualTabGroupHeader.setter
    def ContextualTabGroupHeader(self, value: Object) -> None: ...
    @GroupSizeReductionOrder.setter
    def GroupSizeReductionOrder(self, value: StringCollection) -> None: ...
    @HeaderStyle.setter
    def HeaderStyle(self, value: Style) -> None: ...
    @IsSelected.setter
    def IsSelected(self, value: bool) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...


class RibbonTabHeader(ContentControl):
    def __init__(self): ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def ContextualTabGroup(self) -> RibbonContextualTabGroup: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsContextualTab(self) -> bool: ...
    @property
    def IsRibbonTabSelected(self) -> bool: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    def OnApplyTemplate(self) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...


class RibbonTabHeaderItemsControl(ItemsControl):
    def __init__(self): ...
    def OnApplyTemplate(self) -> None: ...


class RibbonTextBox(TextBox):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def Command(self) -> ICommand: ...
    @property
    def CommandParameter(self) -> Object: ...
    @property
    def CommandTarget(self) -> IInputElement: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def TextBoxWidth(self) -> float: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @Command.setter
    def Command(self, value: ICommand) -> None: ...
    @CommandParameter.setter
    def CommandParameter(self, value: Object) -> None: ...
    @CommandTarget.setter
    def CommandTarget(self, value: IInputElement) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @TextBoxWidth.setter
    def TextBoxWidth(self, value: float) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonToggleButton(ToggleButton):
    def __init__(self): ...
    @property
    def CanAddToQuickAccessToolBarDirectly(self) -> bool: ...
    @property
    def CheckedBackground(self) -> Brush: ...
    @property
    def CheckedBorderBrush(self) -> Brush: ...
    @property
    def ControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def CornerRadius(self) -> CornerRadius: ...
    @property
    def FocusedBackground(self) -> Brush: ...
    @property
    def FocusedBorderBrush(self) -> Brush: ...
    @property
    def IsInControlGroup(self) -> bool: ...
    @property
    def IsInQuickAccessToolBar(self) -> bool: ...
    @property
    def KeyTip(self) -> str: ...
    @property
    def Label(self) -> str: ...
    @property
    def LargeImageSource(self) -> ImageSource: ...
    @property
    def MouseOverBackground(self) -> Brush: ...
    @property
    def MouseOverBorderBrush(self) -> Brush: ...
    @property
    def PressedBackground(self) -> Brush: ...
    @property
    def PressedBorderBrush(self) -> Brush: ...
    @property
    def QuickAccessToolBarControlSizeDefinition(self) -> RibbonControlSizeDefinition: ...
    @property
    def QuickAccessToolBarId(self) -> Object: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def ShowKeyboardCues(self) -> bool: ...
    @property
    def SmallImageSource(self) -> ImageSource: ...
    @property
    def ToolTipDescription(self) -> str: ...
    @property
    def ToolTipFooterDescription(self) -> str: ...
    @property
    def ToolTipFooterImageSource(self) -> ImageSource: ...
    @property
    def ToolTipFooterTitle(self) -> str: ...
    @property
    def ToolTipImageSource(self) -> ImageSource: ...
    @property
    def ToolTipTitle(self) -> str: ...
    def OnApplyTemplate(self) -> None: ...
    @CanAddToQuickAccessToolBarDirectly.setter
    def CanAddToQuickAccessToolBarDirectly(self, value: bool) -> None: ...
    @CheckedBackground.setter
    def CheckedBackground(self, value: Brush) -> None: ...
    @CheckedBorderBrush.setter
    def CheckedBorderBrush(self, value: Brush) -> None: ...
    @ControlSizeDefinition.setter
    def ControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @CornerRadius.setter
    def CornerRadius(self, value: CornerRadius) -> None: ...
    @FocusedBackground.setter
    def FocusedBackground(self, value: Brush) -> None: ...
    @FocusedBorderBrush.setter
    def FocusedBorderBrush(self, value: Brush) -> None: ...
    @KeyTip.setter
    def KeyTip(self, value: str) -> None: ...
    @Label.setter
    def Label(self, value: str) -> None: ...
    @LargeImageSource.setter
    def LargeImageSource(self, value: ImageSource) -> None: ...
    @MouseOverBackground.setter
    def MouseOverBackground(self, value: Brush) -> None: ...
    @MouseOverBorderBrush.setter
    def MouseOverBorderBrush(self, value: Brush) -> None: ...
    @PressedBackground.setter
    def PressedBackground(self, value: Brush) -> None: ...
    @PressedBorderBrush.setter
    def PressedBorderBrush(self, value: Brush) -> None: ...
    @QuickAccessToolBarControlSizeDefinition.setter
    def QuickAccessToolBarControlSizeDefinition(self, value: RibbonControlSizeDefinition) -> None: ...
    @QuickAccessToolBarId.setter
    def QuickAccessToolBarId(self, value: Object) -> None: ...
    @SmallImageSource.setter
    def SmallImageSource(self, value: ImageSource) -> None: ...
    @ToolTipDescription.setter
    def ToolTipDescription(self, value: str) -> None: ...
    @ToolTipFooterDescription.setter
    def ToolTipFooterDescription(self, value: str) -> None: ...
    @ToolTipFooterImageSource.setter
    def ToolTipFooterImageSource(self, value: ImageSource) -> None: ...
    @ToolTipFooterTitle.setter
    def ToolTipFooterTitle(self, value: str) -> None: ...
    @ToolTipImageSource.setter
    def ToolTipImageSource(self, value: ImageSource) -> None: ...
    @ToolTipTitle.setter
    def ToolTipTitle(self, value: str) -> None: ...


class RibbonToolTip(ToolTip):
    def __init__(self): ...
    @property
    def Description(self) -> str: ...
    @property
    def FooterDescription(self) -> str: ...
    @property
    def FooterImageSource(self) -> ImageSource: ...
    @property
    def FooterTitle(self) -> str: ...
    @property
    def HasFooter(self) -> bool: ...
    @property
    def HasHeader(self) -> bool: ...
    @property
    def ImageSource(self) -> ImageSource: ...
    @property
    def IsPlacementTargetInRibbonGroup(self) -> bool: ...
    @property
    def Ribbon(self) -> Ribbon: ...
    @property
    def Title(self) -> str: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @FooterDescription.setter
    def FooterDescription(self, value: str) -> None: ...
    @FooterImageSource.setter
    def FooterImageSource(self, value: ImageSource) -> None: ...
    @FooterTitle.setter
    def FooterTitle(self, value: str) -> None: ...
    @ImageSource.setter
    def ImageSource(self, value: ImageSource) -> None: ...
    @Title.setter
    def Title(self, value: str) -> None: ...


class RibbonTwoLineText(Control):
    def __init__(self): ...
    @property
    def BaselineOffset(self) -> float: ...
    @property
    def LineHeight(self) -> float: ...
    @property
    def LineStackingStrategy(self) -> LineStackingStrategy: ...
    @property
    def Padding(self) -> Thickness: ...
    @property
    def PathFill(self) -> Brush: ...
    @property
    def PathStroke(self) -> Brush: ...
    @property
    def Text(self) -> str: ...
    @property
    def TextAlignment(self) -> TextAlignment: ...
    @property
    def TextDecorations(self) -> TextDecorationCollection: ...
    @property
    def TextEffects(self) -> TextEffectCollection: ...
    @property
    def TextTrimming(self) -> TextTrimming: ...
    def GetHasTwoLines(element: DependencyObject) -> bool: ...
    def GetPathData(element: DependencyObject) -> Geometry: ...
    def OnApplyTemplate(self) -> None: ...
    @BaselineOffset.setter
    def BaselineOffset(self, value: float) -> None: ...
    @LineHeight.setter
    def LineHeight(self, value: float) -> None: ...
    @LineStackingStrategy.setter
    def LineStackingStrategy(self, value: LineStackingStrategy) -> None: ...
    @Padding.setter
    def Padding(self, value: Thickness) -> None: ...
    @PathFill.setter
    def PathFill(self, value: Brush) -> None: ...
    @PathStroke.setter
    def PathStroke(self, value: Brush) -> None: ...
    @Text.setter
    def Text(self, value: str) -> None: ...
    @TextAlignment.setter
    def TextAlignment(self, value: TextAlignment) -> None: ...
    @TextDecorations.setter
    def TextDecorations(self, value: TextDecorationCollection) -> None: ...
    @TextEffects.setter
    def TextEffects(self, value: TextEffectCollection) -> None: ...
    @TextTrimming.setter
    def TextTrimming(self, value: TextTrimming) -> None: ...
    def SetHasTwoLines(element: DependencyObject, value: bool) -> None: ...
    def SetPathData(element: DependencyObject, value: Geometry) -> None: ...


class RibbonWindow(Window):
    def __init__(self): ...
    def OnApplyTemplate(self) -> None: ...


class StringCollectionConverter(TypeConverter):
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ITypeDescriptorContext, sourceType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, context: ITypeDescriptorContext, destinationType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object) -> Object: ...
    @overload
    def ConvertTo(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object, destinationType: Type) -> Object: ...
