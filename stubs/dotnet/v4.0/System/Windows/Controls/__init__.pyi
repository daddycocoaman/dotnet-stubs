__all__ = ['Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon','Ribbon']
from typing import Tuple, Set, Iterable, List


class KeyTipService(Object):
    def AddActivatingKeyTipHandler(element: DependencyObject, handler: ActivatingKeyTipEventHandler) -> None: ...
    def AddKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def AddPreviewKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def DismissKeyTips() -> None: ...
    def GetIsKeyTipScope(element: DependencyObject) -> bool: ...
    def GetKeyTip(element: DependencyObject) -> str: ...
    def GetKeyTipStyle(element: DependencyObject) -> Style: ...
    def RemoveActivatingKeyTipHandler(element: DependencyObject, handler: ActivatingKeyTipEventHandler) -> None: ...
    def RemoveKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def RemovePreviewKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def SetIsKeyTipScope(element: DependencyObject, value: bool) -> None: ...
    def SetKeyTip(element: DependencyObject, value: str) -> None: ...
    def SetKeyTipStyle(element: DependencyObject, value: Style) -> None: ...
