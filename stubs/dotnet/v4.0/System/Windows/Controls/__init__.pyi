__all__ = ['Ribbon']
from typing import Tuple, Set, Iterable, List


class ActivatingKeyTipEventArgs(RoutedEventArgs):
    def __init__(self): ...
    @property
    def KeyTipHorizontalOffset(self) -> float: ...
    @property
    def KeyTipHorizontalPlacement(self) -> KeyTipHorizontalPlacement: ...
    @property
    def KeyTipVerticalOffset(self) -> float: ...
    @property
    def KeyTipVerticalPlacement(self) -> KeyTipVerticalPlacement: ...
    @property
    def KeyTipVisibility(self) -> Visibility: ...
    @property
    def PlacementTarget(self) -> UIElement: ...
    @KeyTipHorizontalOffset.setter
    def KeyTipHorizontalOffset(self, value: float) -> None: ...
    @KeyTipHorizontalPlacement.setter
    def KeyTipHorizontalPlacement(self, value: KeyTipHorizontalPlacement) -> None: ...
    @KeyTipVerticalOffset.setter
    def KeyTipVerticalOffset(self, value: float) -> None: ...
    @KeyTipVerticalPlacement.setter
    def KeyTipVerticalPlacement(self, value: KeyTipVerticalPlacement) -> None: ...
    @KeyTipVisibility.setter
    def KeyTipVisibility(self, value: Visibility) -> None: ...
    @PlacementTarget.setter
    def PlacementTarget(self, value: UIElement) -> None: ...


class ActivatingKeyTipEventHandler(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: ActivatingKeyTipEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: ActivatingKeyTipEventArgs) -> None: ...


class KeyTipAccessedEventArgs(RoutedEventArgs):
    def __init__(self): ...
    @property
    def TargetKeyTipScope(self) -> DependencyObject: ...
    @TargetKeyTipScope.setter
    def TargetKeyTipScope(self, value: DependencyObject) -> None: ...


class KeyTipAccessedEventHandler(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: KeyTipAccessedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: KeyTipAccessedEventArgs) -> None: ...


class KeyTipControl(Control):
    def __init__(self): ...
    @property
    def Text(self) -> str: ...
    @Text.setter
    def Text(self, value: str) -> None: ...


class KeyTipHorizontalPlacement:
    KeyTipLeftAtTargetLeft = 0
    KeyTipLeftAtTargetCenter = 1
    KeyTipLeftAtTargetRight = 2
    KeyTipCenterAtTargetLeft = 3
    KeyTipCenterAtTargetCenter = 4
    KeyTipCenterAtTargetRight = 5
    KeyTipRightAtTargetLeft = 6
    KeyTipRightAtTargetCenter = 7
    KeyTipRightAtTargetRight = 8


class KeyTipService(Object):
    def AddActivatingKeyTipHandler(element: DependencyObject, handler: ActivatingKeyTipEventHandler) -> None: ...
    def AddKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def AddPreviewKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def DismissKeyTips() -> None: ...
    def GetIsKeyTipScope(element: DependencyObject) -> bool: ...
    def GetKeyTip(element: DependencyObject) -> str: ...
    def GetKeyTipStyle(element: DependencyObject) -> Style: ...
    def RemoveActivatingKeyTipHandler(element: DependencyObject, handler: ActivatingKeyTipEventHandler) -> None: ...
    def RemoveKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def RemovePreviewKeyTipAccessedHandler(element: DependencyObject, handler: KeyTipAccessedEventHandler) -> None: ...
    def SetIsKeyTipScope(element: DependencyObject, value: bool) -> None: ...
    def SetKeyTip(element: DependencyObject, value: str) -> None: ...
    def SetKeyTipStyle(element: DependencyObject, value: Style) -> None: ...


class KeyTipVerticalPlacement:
    KeyTipTopAtTargetTop = 0
    KeyTipTopAtTargetCenter = 1
    KeyTipTopAtTargetBottom = 2
    KeyTipCenterAtTargetTop = 3
    KeyTipCenterAtTargetCenter = 4
    KeyTipCenterAtTargetBottom = 5
    KeyTipBottomAtTargetTop = 6
    KeyTipBottomAtTargetCenter = 7
    KeyTipBottomAtTargetBottom = 8
