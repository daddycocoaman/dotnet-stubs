__all__ = ['Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Compiler','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Design','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization','Serialization']
from typing import Tuple, Set, Iterable, List


class SetValueOverride(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, d: DependencyObject, value: Object, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, d: DependencyObject, value: Object) -> None: ...
