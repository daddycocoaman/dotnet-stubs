from typing import Tuple, Set, Iterable, List


class GenerateScriptTypeAttribute(Attribute):
    def __init__(self, type: Type): ...
    @property
    def ScriptTypeId(self) -> str: ...
    @property
    def Type(self) -> Type: ...
    @ScriptTypeId.setter
    def ScriptTypeId(self, value: str) -> None: ...


class ProxyGenerator(Object):
    @overload
    def GetClientProxyScript(type: Type, path: str, debug: bool) -> str: ...
    @overload
    def GetClientProxyScript(type: Type, path: str, debug: bool, serviceEndpoint: ServiceEndpoint) -> str: ...


class ResponseFormat:
    Json = 0
    Xml = 1


class ScriptMethodAttribute(Attribute):
    def __init__(self): ...
    @property
    def ResponseFormat(self) -> ResponseFormat: ...
    @property
    def UseHttpGet(self) -> bool: ...
    @property
    def XmlSerializeString(self) -> bool: ...
    @ResponseFormat.setter
    def ResponseFormat(self, value: ResponseFormat) -> None: ...
    @UseHttpGet.setter
    def UseHttpGet(self, value: bool) -> None: ...
    @XmlSerializeString.setter
    def XmlSerializeString(self, value: bool) -> None: ...


class ScriptServiceAttribute(Attribute):
    def __init__(self): ...
