from typing import Tuple, Set, Iterable, List


class CatalogPartDesigner(PartDesigner):
    def __init__(self): ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class CatalogZoneDesigner(ToolZoneDesigner):
    def __init__(self): ...
    @property
    def AutoFormats(self) -> DesignerAutoFormatCollection: ...
    @property
    def TemplateGroups(self) -> TemplateGroupCollection: ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    @overload
    def GetDesignTimeHtml(self, regions: DesignerRegionCollection) -> str: ...
    def GetEditableDesignerRegionContent(self, region: EditableDesignerRegion) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...
    def SetEditableDesignerRegionContent(self, region: EditableDesignerRegion, content: str) -> None: ...


class ConnectionsZoneDesigner(ToolZoneDesigner):
    def __init__(self): ...
    @property
    def AutoFormats(self) -> DesignerAutoFormatCollection: ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class DeclarativeCatalogPartDesigner(CatalogPartDesigner):
    def __init__(self): ...
    @property
    def TemplateGroups(self) -> TemplateGroupCollection: ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class EditorPartDesigner(PartDesigner):
    def __init__(self): ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class EditorZoneDesigner(ToolZoneDesigner):
    def __init__(self): ...
    @property
    def AutoFormats(self) -> DesignerAutoFormatCollection: ...
    @property
    def TemplateGroups(self) -> TemplateGroupCollection: ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    @overload
    def GetDesignTimeHtml(self, regions: DesignerRegionCollection) -> str: ...
    def GetEditableDesignerRegionContent(self, region: EditableDesignerRegion) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...
    def SetEditableDesignerRegionContent(self, region: EditableDesignerRegion, content: str) -> None: ...


class PageCatalogPartDesigner(CatalogPartDesigner):
    def __init__(self): ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class PartDesigner(CompositeControlDesigner):
    def Initialize(self, component: IComponent) -> None: ...


class ProxyWebPartManagerDesigner(ControlDesigner):
    def __init__(self): ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class ToolZoneDesigner(WebZoneDesigner):
    def __init__(self): ...
    @property
    def ActionLists(self) -> DesignerActionListCollection: ...
    def Initialize(self, component: IComponent) -> None: ...


class WebPartDesigner(PartDesigner):
    def __init__(self): ...
    def Initialize(self, component: IComponent) -> None: ...


class WebPartManagerDesigner(ControlDesigner):
    def __init__(self): ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...


class WebPartZoneBaseDesigner(WebZoneDesigner):
    def __init__(self): ...
    def Initialize(self, component: IComponent) -> None: ...


class WebPartZoneDesigner(WebPartZoneBaseDesigner):
    def __init__(self): ...
    @property
    def AutoFormats(self) -> DesignerAutoFormatCollection: ...
    @property
    def TemplateGroups(self) -> TemplateGroupCollection: ...
    @overload
    def GetDesignTimeHtml(self) -> str: ...
    @overload
    def GetDesignTimeHtml(self, regions: DesignerRegionCollection) -> str: ...
    def GetEditableDesignerRegionContent(self, region: EditableDesignerRegion) -> str: ...
    def Initialize(self, component: IComponent) -> None: ...
    def SetEditableDesignerRegionContent(self, region: EditableDesignerRegion, content: str) -> None: ...


class WebZoneDesigner(ControlDesigner):
    def Initialize(self, component: IComponent) -> None: ...
