from typing import Tuple, Set, Iterable, List


class DirectiveAttribute(Attribute):
    def __init__(self): ...
    @property
    def AllowedOnMobilePages(self) -> bool: ...
    @property
    def BuilderType(self) -> str: ...
    @property
    def Culture(self) -> bool: ...
    @property
    def RenameType(self) -> str: ...
    @property
    def ServerLanguageExtensions(self) -> bool: ...
    @property
    def ServerLanguageNames(self) -> bool: ...
    @AllowedOnMobilePages.setter
    def AllowedOnMobilePages(self, value: bool) -> None: ...
    @BuilderType.setter
    def BuilderType(self, value: str) -> None: ...
    @Culture.setter
    def Culture(self, value: bool) -> None: ...
    @RenameType.setter
    def RenameType(self, value: str) -> None: ...
    @ServerLanguageExtensions.setter
    def ServerLanguageExtensions(self, value: bool) -> None: ...
    @ServerLanguageNames.setter
    def ServerLanguageNames(self, value: bool) -> None: ...


class DirectiveRegistry(Object):
    def GetDirectives(frameworkVersion: Version, extension: str) -> ReadOnlyCollection: ...


class SchemaElementNameAttribute(Attribute):
    def __init__(self, value: str): ...
    @property
    def Value(self) -> str: ...
