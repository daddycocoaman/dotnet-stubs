__all__ = ['WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls','WebControls']
from typing import Tuple, Set, Iterable, List


class UpdateProgress(Control):
    def __init__(self): ...
    def DataBind(self) -> None: ...
    @property
    def AssociatedUpdatePanelID(self) -> str: ...
    @property
    def Attributes(self) -> AttributeCollection: ...
    @property
    def Controls(self) -> ControlCollection: ...
    @property
    def DisplayAfter(self) -> int: ...
    @property
    def DynamicLayout(self) -> bool: ...
    @property
    def ProgressTemplate(self) -> ITemplate: ...
    @AssociatedUpdatePanelID.setter
    def AssociatedUpdatePanelID(self, value: str) -> None: ...
    @DisplayAfter.setter
    def DisplayAfter(self, value: int) -> None: ...
    @DynamicLayout.setter
    def DynamicLayout(self, value: bool) -> None: ...
    @ProgressTemplate.setter
    def ProgressTemplate(self, value: ITemplate) -> None: ...
