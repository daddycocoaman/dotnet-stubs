from typing import Tuple, Set, Iterable, List


class AssociationDirection:
    OneToOne = 0
    OneToMany = 1
    ManyToOne = 2
    ManyToMany = 3


class AssociationProvider(Object):
    @property
    def Direction(self) -> AssociationDirection: ...
    @property
    def ForeignKeyNames(self) -> ReadOnlyCollection: ...
    @property
    def FromColumn(self) -> ColumnProvider: ...
    @property
    def IsPrimaryKeyInThisTable(self) -> bool: ...
    @property
    def ToColumn(self) -> ColumnProvider: ...
    @property
    def ToTable(self) -> TableProvider: ...
    def GetSortExpression(self, sortColumn: ColumnProvider) -> str: ...


class ColumnProvider(Object):
    @property
    def Association(self) -> AssociationProvider: ...
    @property
    def Attributes(self) -> AttributeCollection: ...
    @property
    def ColumnType(self) -> Type: ...
    @property
    def EntityTypeProperty(self) -> PropertyInfo: ...
    @property
    def IsCustomProperty(self) -> bool: ...
    @property
    def IsForeignKeyComponent(self) -> bool: ...
    @property
    def IsGenerated(self) -> bool: ...
    @property
    def IsPrimaryKey(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsSortable(self) -> bool: ...
    @property
    def MaxLength(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def Nullable(self) -> bool: ...
    @property
    def Table(self) -> TableProvider: ...
    def ToString(self) -> str: ...


class DataModelProvider(Object):
    def CreateContext(self) -> Object: ...
    @property
    def ContextType(self) -> Type: ...
    @property
    def Tables(self) -> ReadOnlyCollection: ...


class TableProvider(Object):
    def CanDelete(self, principal: IPrincipal) -> bool: ...
    def CanInsert(self, principal: IPrincipal) -> bool: ...
    def CanRead(self, principal: IPrincipal) -> bool: ...
    def CanUpdate(self, principal: IPrincipal) -> bool: ...
    def EvaluateForeignKey(self, row: Object, foreignKeyName: str) -> Object: ...
    @property
    def Attributes(self) -> AttributeCollection: ...
    @property
    def Columns(self) -> ReadOnlyCollection: ...
    @property
    def DataContextPropertyName(self) -> str: ...
    @property
    def DataModel(self) -> DataModelProvider: ...
    @property
    def EntityType(self) -> Type: ...
    @property
    def Name(self) -> str: ...
    @property
    def ParentEntityType(self) -> Type: ...
    @property
    def RootEntityType(self) -> Type: ...
    def GetQuery(self, context: Object) -> IQueryable: ...
    def GetTypeDescriptor(self) -> ICustomTypeDescriptor: ...
    def ToString(self) -> str: ...
