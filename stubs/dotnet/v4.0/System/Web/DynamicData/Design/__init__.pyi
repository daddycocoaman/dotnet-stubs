from typing import Tuple, Set, Iterable, List


class DynamicFieldDesigner(DataControlFieldDesigner):
    def __init__(self): ...
    @overload
    def CreateField(self) -> DataControlField: ...
    @overload
    def CreateField(self, fieldSchema: IDataSourceFieldSchema) -> DataControlField: ...
    def CreateTemplateField(self, dataControlField: DataControlField, dataBoundControl: DataBoundControl) -> TemplateField: ...
    @property
    def DefaultNodeText(self) -> str: ...
    @property
    def UsesSchema(self) -> bool: ...
    def GetNodeText(self, dataControlField: DataControlField) -> str: ...
    def GetTemplateContent(self, dataControlField: DataControlField, mode: DataBoundControlMode) -> str: ...
    def IsEnabled(self, parent: DataBoundControl) -> bool: ...
