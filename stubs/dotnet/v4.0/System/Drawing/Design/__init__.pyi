from typing import Tuple, Set, Iterable, List


class BitmapEditor(ImageEditor):
    def __init__(self): ...


class ColorEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...
    @overload
    def GetPaintValueSupported(self, context: ITypeDescriptorContext) -> bool: ...
    @overload
    def PaintValue(self, e: PaintValueEventArgs) -> None: ...


class ContentAlignmentEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...


class CursorEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @property
    def IsDropDownResizable(self) -> bool: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...


class FontEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...


class FontNameEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def GetPaintValueSupported(self, context: ITypeDescriptorContext) -> bool: ...
    @overload
    def PaintValue(self, e: PaintValueEventArgs) -> None: ...


class IconEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...
    @overload
    def GetPaintValueSupported(self, context: ITypeDescriptorContext) -> bool: ...
    @overload
    def PaintValue(self, e: PaintValueEventArgs) -> None: ...


class ImageEditor(UITypeEditor):
    def __init__(self): ...
    @overload
    def EditValue(self, context: ITypeDescriptorContext, provider: IServiceProvider, value: Object) -> Object: ...
    @overload
    def GetEditStyle(self, context: ITypeDescriptorContext) -> UITypeEditorEditStyle: ...
    @overload
    def GetPaintValueSupported(self, context: ITypeDescriptorContext) -> bool: ...
    @overload
    def PaintValue(self, e: PaintValueEventArgs) -> None: ...


class MetafileEditor(ImageEditor):
    def __init__(self): ...


class ToolboxItemContainer(Object):
    @overload
    def __init__(self, item: ToolboxItem): ...
    @overload
    def __init__(self, data: IDataObject): ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def IsCreated(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def ToolboxData(self) -> IDataObject: ...
    def GetFilter(self, creators: ICollection) -> ICollection: ...
    def GetHashCode(self) -> int: ...
    def GetToolboxItem(self, creators: ICollection) -> ToolboxItem: ...
    def UpdateFilter(self, item: ToolboxItem) -> None: ...


class ToolboxItemCreator(Object):
    def Create(self, data: IDataObject) -> ToolboxItem: ...
    @property
    def Format(self) -> str: ...


class ToolboxService(Object):
    @overload
    def GetToolboxItem(toolType: Type) -> ToolboxItem: ...
    @overload
    def GetToolboxItem(toolType: Type, nonPublic: bool) -> ToolboxItem: ...
    @overload
    def GetToolboxItems(an: AssemblyName) -> ICollection: ...
    @overload
    def GetToolboxItems(a: Assembly, newCodeBase: str) -> ICollection: ...
    @overload
    def GetToolboxItems(an: AssemblyName, throwOnError: bool) -> ICollection: ...
    @overload
    def GetToolboxItems(a: Assembly, newCodeBase: str, throwOnError: bool) -> ICollection: ...
    def UnloadToolboxItems() -> None: ...
