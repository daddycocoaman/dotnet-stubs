from typing import Tuple, Set, Iterable, List


class AliasPropertyData(TypeMemberData):
    @overload
    def __init__(self, name: str, referencedMemberName: str): ...
    @overload
    def __init__(self, name: str, referencedMemberName: str, type: Type): ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def MemberType(self) -> Type: ...
    @property
    def ReferencedMemberName(self) -> str: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...
    @MemberType.setter
    def MemberType(self, value: Type) -> None: ...
    @ReferencedMemberName.setter
    def ReferencedMemberName(self, value: str) -> None: ...


class AssemblyConfigurationEntry(RunspaceConfigurationEntry):
    def __init__(self, name: str, fileName: str): ...
    @property
    def FileName(self) -> str: ...


class AuthenticationMechanism:
    Default = 0
    Basic = 1
    Negotiate = 2
    NegotiateWithImplicitCredential = 3
    Credssp = 4
    Digest = 5
    Kerberos = 6


class CmdletConfigurationEntry(RunspaceConfigurationEntry):
    def __init__(self, name: str, implementingType: Type, helpFileName: str): ...
    @property
    def HelpFileName(self) -> str: ...
    @property
    def ImplementingType(self) -> Type: ...


class CodeMethodData(TypeMemberData):
    def __init__(self, name: str, methodToCall: MethodInfo): ...
    @property
    def CodeReference(self) -> MethodInfo: ...
    @CodeReference.setter
    def CodeReference(self, value: MethodInfo) -> None: ...


class CodePropertyData(TypeMemberData):
    @overload
    def __init__(self, name: str, getMethod: MethodInfo): ...
    @overload
    def __init__(self, name: str, getMethod: MethodInfo, setMethod: MethodInfo): ...
    @property
    def GetCodeReference(self) -> MethodInfo: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def SetCodeReference(self) -> MethodInfo: ...
    @GetCodeReference.setter
    def GetCodeReference(self, value: MethodInfo) -> None: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...
    @SetCodeReference.setter
    def SetCodeReference(self, value: MethodInfo) -> None: ...


class Command(Object):
    @overload
    def __init__(self, command: str): ...
    @overload
    def __init__(self, command: str, isScript: bool): ...
    @overload
    def __init__(self, command: str, isScript: bool, useLocalScope: bool): ...
    @property
    def CommandOrigin(self) -> CommandOrigin: ...
    @property
    def CommandText(self) -> str: ...
    @property
    def IsEndOfStatement(self) -> bool: ...
    @property
    def IsScript(self) -> bool: ...
    @property
    def MergeUnclaimedPreviousCommandResults(self) -> PipelineResultTypes: ...
    @property
    def Parameters(self) -> CommandParameterCollection: ...
    @property
    def UseLocalScope(self) -> bool: ...
    def MergeMyResults(self, myResult: PipelineResultTypes, toResult: PipelineResultTypes) -> None: ...
    @CommandOrigin.setter
    def CommandOrigin(self, value: CommandOrigin) -> None: ...
    @MergeUnclaimedPreviousCommandResults.setter
    def MergeUnclaimedPreviousCommandResults(self, value: PipelineResultTypes) -> None: ...
    def ToString(self) -> str: ...


class CommandCollection:
    @overload
    def Add(self, command: str) -> None: ...
    @overload
    def AddScript(self, scriptContents: str) -> None: ...
    @overload
    def AddScript(self, scriptContents: str, useLocalScope: bool) -> None: ...


class CommandParameter(Object):
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, name: str, value: Object): ...
    @property
    def Name(self) -> str: ...
    @property
    def Value(self) -> Object: ...


class CommandParameterCollection:
    def __init__(self): ...
    @overload
    def Add(self, name: str) -> None: ...
    @overload
    def Add(self, name: str, value: Object) -> None: ...


class ConstrainedSessionStateEntry(InitialSessionStateEntry):
    @property
    def Visibility(self) -> SessionStateEntryVisibility: ...
    @Visibility.setter
    def Visibility(self, value: SessionStateEntryVisibility) -> None: ...


class ContainerConnectionInfo(RunspaceConnectionInfo):
    def CreateContainerConnectionInfo(containerId: str, runAsAdmin: bool, configurationName: str) -> ContainerConnectionInfo: ...
    def CreateContainerProcess(self) -> None: ...
    @property
    def AuthenticationMechanism(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @AuthenticationMechanism.setter
    def AuthenticationMechanism(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    def TerminateContainerProcess(self) -> bool: ...


class FormatConfigurationEntry(RunspaceConfigurationEntry):
    @overload
    def __init__(self, fileName: str): ...
    @overload
    def __init__(self, typeDefinition: ExtendedTypeDefinition): ...
    @overload
    def __init__(self, name: str, fileName: str): ...
    @property
    def FileName(self) -> str: ...
    @property
    def FormatData(self) -> ExtendedTypeDefinition: ...


class FormatTable(Object):
    def __init__(self, formatFiles: Iterable[str]): ...
    def AppendFormatData(self, formatData: Iterable[ExtendedTypeDefinition]) -> None: ...
    def LoadDefaultFormatFiles() -> FormatTable: ...
    def PrependFormatData(self, formatData: Iterable[ExtendedTypeDefinition]) -> None: ...


class FormatTableLoadException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def Errors(self) -> Collection: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class InitialSessionState(Object):
    def Clone(self) -> InitialSessionState: ...
    @overload
    def Create() -> InitialSessionState: ...
    @overload
    def Create(snapInName: str) -> InitialSessionState: ...
    @overload
    def Create(snapInNameCollection: Set(str)) -> Tuple[InitialSessionState, PSConsoleLoadException]: ...
    def CreateDefault() -> InitialSessionState: ...
    def CreateDefault2() -> InitialSessionState: ...
    @overload
    def CreateFrom(snapInPath: str) -> Tuple[InitialSessionState, PSConsoleLoadException]: ...
    @overload
    def CreateFrom(snapInPathCollection: Set(str)) -> Tuple[InitialSessionState, PSConsoleLoadException]: ...
    @overload
    def CreateFromSessionConfigurationFile(path: str) -> InitialSessionState: ...
    @overload
    def CreateFromSessionConfigurationFile(path: str, roleVerifier: Func) -> InitialSessionState: ...
    def CreateRestricted(sessionCapabilities: SessionCapabilities) -> InitialSessionState: ...
    @property
    def ApartmentState(self) -> ApartmentState: ...
    @property
    def Assemblies(self) -> InitialSessionStateEntryCollection: ...
    @property
    def AuthorizationManager(self) -> AuthorizationManager: ...
    @property
    def Commands(self) -> InitialSessionStateEntryCollection: ...
    @property
    def DisableFormatUpdates(self) -> bool: ...
    @property
    def EnvironmentVariables(self) -> InitialSessionStateEntryCollection: ...
    @property
    def ExecutionPolicy(self) -> ExecutionPolicy: ...
    @property
    def Formats(self) -> InitialSessionStateEntryCollection: ...
    @property
    def LanguageMode(self) -> PSLanguageMode: ...
    @property
    def Modules(self) -> ReadOnlyCollection: ...
    @property
    def Providers(self) -> InitialSessionStateEntryCollection: ...
    @property
    def StartupScripts(self) -> HashSet: ...
    @property
    def ThreadOptions(self) -> PSThreadOptions: ...
    @property
    def ThrowOnRunspaceOpenError(self) -> bool: ...
    @property
    def TranscriptDirectory(self) -> str: ...
    @property
    def Types(self) -> InitialSessionStateEntryCollection: ...
    @property
    def UseFullLanguageModeInDebugger(self) -> bool: ...
    @property
    def Variables(self) -> InitialSessionStateEntryCollection: ...
    @overload
    def ImportPSModule(self, name: Set(str)) -> None: ...
    @overload
    def ImportPSModule(self, modules: Iterable[ModuleSpecification]) -> None: ...
    def ImportPSModulesFromPath(self, path: str) -> None: ...
    def ImportPSSnapIn(self, name: str) -> Tuple[PSSnapInInfo, PSSnapInException]: ...
    @ApartmentState.setter
    def ApartmentState(self, value: ApartmentState) -> None: ...
    @AuthorizationManager.setter
    def AuthorizationManager(self, value: AuthorizationManager) -> None: ...
    @DisableFormatUpdates.setter
    def DisableFormatUpdates(self, value: bool) -> None: ...
    @ExecutionPolicy.setter
    def ExecutionPolicy(self, value: ExecutionPolicy) -> None: ...
    @LanguageMode.setter
    def LanguageMode(self, value: PSLanguageMode) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: PSThreadOptions) -> None: ...
    @ThrowOnRunspaceOpenError.setter
    def ThrowOnRunspaceOpenError(self, value: bool) -> None: ...
    @TranscriptDirectory.setter
    def TranscriptDirectory(self, value: str) -> None: ...
    @UseFullLanguageModeInDebugger.setter
    def UseFullLanguageModeInDebugger(self, value: bool) -> None: ...


class InitialSessionStateEntry(Object):
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Module(self) -> PSModuleInfo: ...
    @property
    def Name(self) -> str: ...
    @property
    def PSSnapIn(self) -> PSSnapInInfo: ...




class InvalidPipelineStateException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def CurrentState(self) -> PipelineState: ...
    @property
    def ExpectedState(self) -> PipelineState: ...


class InvalidRunspacePoolStateException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def CurrentState(self) -> RunspacePoolState: ...
    @property
    def ExpectedState(self) -> RunspacePoolState: ...


class InvalidRunspaceStateException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def CurrentState(self) -> RunspaceState: ...
    @property
    def ExpectedState(self) -> RunspaceState: ...


class MemberSetData(TypeMemberData):
    def __init__(self, name: str, members: Collection): ...
    @property
    def InheritMembers(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def Members(self) -> Collection: ...
    @InheritMembers.setter
    def InheritMembers(self, value: bool) -> None: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...


class NamedPipeConnectionInfo(RunspaceConnectionInfo):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, processId: int): ...
    @overload
    def __init__(self, processId: int, appDomainName: str): ...
    @overload
    def __init__(self, processId: int, appDomainName: str, openTimeout: int): ...
    @property
    def AppDomainName(self) -> str: ...
    @property
    def AuthenticationMechanism(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def ProcessId(self) -> int: ...
    @AppDomainName.setter
    def AppDomainName(self, value: str) -> None: ...
    @AuthenticationMechanism.setter
    def AuthenticationMechanism(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @ProcessId.setter
    def ProcessId(self, value: int) -> None: ...


class NotePropertyData(TypeMemberData):
    def __init__(self, name: str, value: Object): ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def Value(self) -> Object: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...
    @Value.setter
    def Value(self, value: Object) -> None: ...


class OutputBufferingMode:
    #None = 0
    Drop = 1
    Block = 2


class Pipeline(Object):
    def add_StateChanged(self, value: EventHandler) -> None: ...
    def Connect(self) -> Collection: ...
    def ConnectAsync(self) -> None: ...
    def Copy(self) -> Pipeline: ...
    def Dispose(self) -> None: ...
    @property
    def Commands(self) -> CommandCollection: ...
    @property
    def Error(self) -> PipelineReader: ...
    @property
    def HadErrors(self) -> bool: ...
    @property
    def Input(self) -> PipelineWriter: ...
    @property
    def InstanceId(self) -> Int64: ...
    @property
    def IsNested(self) -> bool: ...
    @property
    def Output(self) -> PipelineReader: ...
    @property
    def PipelineStateInfo(self) -> PipelineStateInfo: ...
    @property
    def Runspace(self) -> Runspace: ...
    @property
    def SetPipelineSessionState(self) -> bool: ...
    @overload
    def Invoke(self) -> Collection: ...
    @overload
    def Invoke(self, input: IEnumerable) -> Collection: ...
    def InvokeAsync(self) -> None: ...
    def remove_StateChanged(self, value: EventHandler) -> None: ...
    @SetPipelineSessionState.setter
    def SetPipelineSessionState(self, value: bool) -> None: ...
    def Stop(self) -> None: ...
    def StopAsync(self) -> None: ...




class PipelineResultTypes:
    #None = 0
    Output = 1
    Error = 2
    Warning = 3
    Verbose = 4
    Debug = 5
    Information = 6
    All = 7
    Null = 8


class PipelineState:
    NotStarted = 0
    Running = 1
    Stopping = 2
    Stopped = 3
    Completed = 4
    Failed = 5
    Disconnected = 6


class PipelineStateEventArgs(EventArgs):
    @property
    def PipelineStateInfo(self) -> PipelineStateInfo: ...


class PipelineStateInfo(Object):
    @property
    def Reason(self) -> Exception: ...
    @property
    def State(self) -> PipelineState: ...


class PipelineWriter(Object):
    def Close(self) -> None: ...
    def Flush(self) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsOpen(self) -> bool: ...
    @property
    def MaxCapacity(self) -> int: ...
    @property
    def WaitHandle(self) -> WaitHandle: ...
    @overload
    def Write(self, obj: Object) -> int: ...
    @overload
    def Write(self, obj: Object, enumerateCollection: bool) -> int: ...


class PowerShellProcessInstance(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, powerShellVersion: Version, credential: PSCredential, initializationScript: ScriptBlock, useWow64: bool): ...
    def Dispose(self) -> None: ...
    @property
    def HasExited(self) -> bool: ...
    @property
    def Process(self) -> Process: ...


class PropertySetData(TypeMemberData):
    def __init__(self, referencedProperties: Iterable[str]): ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def ReferencedProperties(self) -> Collection: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...


class ProviderConfigurationEntry(RunspaceConfigurationEntry):
    def __init__(self, name: str, implementingType: Type, helpFileName: str): ...
    @property
    def HelpFileName(self) -> str: ...
    @property
    def ImplementingType(self) -> Type: ...


class PSConsoleLoadException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def Message(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class PSSession(Object):
    @property
    def ApplicationPrivateData(self) -> PSPrimitiveDictionary: ...
    @property
    def Availability(self) -> RunspaceAvailability: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def ComputerType(self) -> TargetMachineType: ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ContainerId(self) -> str: ...
    @property
    def Id(self) -> int: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def Name(self) -> str: ...
    @property
    def Runspace(self) -> Runspace: ...
    @property
    def VMId(self) -> Nullable: ...
    @property
    def VMName(self) -> str: ...
    @ComputerType.setter
    def ComputerType(self, value: TargetMachineType) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    def ToString(self) -> str: ...


class PSSessionConfigurationAccessMode:
    Disabled = 0
    Local = 1
    Remote = 2


class PSSessionType:
    DefaultRemoteShell = 0
    Workflow = 1


class PSSnapInException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def Message(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class PSThreadOptions:
    Default = 0
    UseNewThread = 1
    ReuseThread = 2
    UseCurrentThread = 3


class RemotingDebugRecord(DebugRecord):
    def __init__(self, message: str, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...


class RemotingErrorRecord(ErrorRecord):
    def __init__(self, errorRecord: ErrorRecord, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class RemotingInformationRecord(InformationRecord):
    def __init__(self, record: InformationRecord, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...


class RemotingProgressRecord(ProgressRecord):
    def __init__(self, progressRecord: ProgressRecord, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...


class RemotingVerboseRecord(VerboseRecord):
    def __init__(self, message: str, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...


class RemotingWarningRecord(WarningRecord):
    def __init__(self, message: str, originInfo: OriginInfo): ...
    @property
    def OriginInfo(self) -> OriginInfo: ...


class Runspace(Object):
    def add_AvailabilityChanged(self, value: EventHandler) -> None: ...
    def add_StateChanged(self, value: EventHandler) -> None: ...
    def ClearBaseTransaction(self) -> None: ...
    def Close(self) -> None: ...
    def CloseAsync(self) -> None: ...
    def Connect(self) -> None: ...
    def ConnectAsync(self) -> None: ...
    def CreateDisconnectedPipeline(self) -> Pipeline: ...
    def CreateDisconnectedPowerShell(self) -> PowerShell: ...
    @overload
    def CreateNestedPipeline(self) -> Pipeline: ...
    @overload
    def CreateNestedPipeline(self, command: str, addToHistory: bool) -> Pipeline: ...
    @overload
    def CreatePipeline(self) -> Pipeline: ...
    @overload
    def CreatePipeline(self, command: str) -> Pipeline: ...
    @overload
    def CreatePipeline(self, command: str, addToHistory: bool) -> Pipeline: ...
    def Disconnect(self) -> None: ...
    def DisconnectAsync(self) -> None: ...
    def Dispose(self) -> None: ...
    @property
    def ApartmentState(self) -> ApartmentState: ...
    @property
    def CanUseDefaultRunspace() -> bool: ...
    @property
    def ConnectionInfo(self) -> RunspaceConnectionInfo: ...
    @property
    def Debugger(self) -> Debugger: ...
    @property
    def DefaultRunspace() -> Runspace: ...
    @property
    def DisconnectedOn(self) -> Nullable: ...
    @property
    def Events(self) -> PSEventManager: ...
    @property
    def ExpiresOn(self) -> Nullable: ...
    @property
    def Id(self) -> int: ...
    @property
    def InitialSessionState(self) -> InitialSessionState: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def JobManager(self) -> JobManager: ...
    @property
    def Name(self) -> str: ...
    @property
    def OriginalConnectionInfo(self) -> RunspaceConnectionInfo: ...
    @property
    def RunspaceAvailability(self) -> RunspaceAvailability: ...
    @property
    def RunspaceConfiguration(self) -> RunspaceConfiguration: ...
    @property
    def RunspaceIsRemote(self) -> bool: ...
    @property
    def RunspaceStateInfo(self) -> RunspaceStateInfo: ...
    @property
    def SessionStateProxy(self) -> SessionStateProxy: ...
    @property
    def ThreadOptions(self) -> PSThreadOptions: ...
    @property
    def Version(self) -> Version: ...
    def GetApplicationPrivateData(self) -> PSPrimitiveDictionary: ...
    def GetCapabilities(self) -> RunspaceCapability: ...
    def GetRunspace(connectionInfo: RunspaceConnectionInfo, sessionId: Guid, commandId: Nullable, host: PSHost, typeTable: TypeTable) -> Runspace: ...
    @overload
    def GetRunspaces(connectionInfo: RunspaceConnectionInfo) -> Set(Runspace): ...
    @overload
    def GetRunspaces(connectionInfo: RunspaceConnectionInfo, host: PSHost) -> Set(Runspace): ...
    @overload
    def GetRunspaces(connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable) -> Set(Runspace): ...
    def Open(self) -> None: ...
    def OpenAsync(self) -> None: ...
    def remove_AvailabilityChanged(self, value: EventHandler) -> None: ...
    def remove_StateChanged(self, value: EventHandler) -> None: ...
    def ResetRunspaceState(self) -> None: ...
    @ApartmentState.setter
    def ApartmentState(self, value: ApartmentState) -> None: ...
    @DefaultRunspace.setter
    def DefaultRunspace(value: Runspace) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: PSThreadOptions) -> None: ...
    @overload
    def SetBaseTransaction(self, transaction: CommittableTransaction) -> None: ...
    @overload
    def SetBaseTransaction(self, transaction: CommittableTransaction, severity: RollbackSeverity) -> None: ...


class RunspaceAvailability:
    #None = 0
    Available = 1
    AvailableForNestedCommand = 2
    Busy = 3
    RemoteDebug = 4


class RunspaceAvailabilityEventArgs(EventArgs):
    @property
    def RunspaceAvailability(self) -> RunspaceAvailability: ...


class RunspaceCapability:
    Default = 0
    SupportsDisconnect = 1
    NamedPipeTransport = 2
    VMSocketTransport = 4


class RunspaceConfiguration(Object):
    def AddPSSnapIn(self, name: str) -> Tuple[PSSnapInInfo, PSSnapInException]: ...
    @overload
    def Create() -> RunspaceConfiguration: ...
    @overload
    def Create(assemblyName: str) -> RunspaceConfiguration: ...
    @overload
    def Create(consoleFilePath: str) -> Tuple[RunspaceConfiguration, PSConsoleLoadException]: ...
    @property
    def Assemblies(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def AuthorizationManager(self) -> AuthorizationManager: ...
    @property
    def Cmdlets(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def Formats(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def InitializationScripts(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def Providers(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def Scripts(self) -> RunspaceConfigurationEntryCollection: ...
    @property
    def ShellId(self) -> str: ...
    @property
    def Types(self) -> RunspaceConfigurationEntryCollection: ...
    def RemovePSSnapIn(self, name: str) -> Tuple[PSSnapInInfo, PSSnapInException]: ...


class RunspaceConfigurationAttributeException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def Error(self) -> str: ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def Message(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class RunspaceConfigurationEntry(Object):
    @property
    def BuiltIn(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def PSSnapIn(self) -> PSSnapInInfo: ...




class RunspaceConfigurationTypeAttribute(Attribute):
    def __init__(self, runspaceConfigurationType: str): ...
    @property
    def RunspaceConfigurationType(self) -> str: ...


class RunspaceConfigurationTypeException(SystemException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def Message(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class RunspaceConnectionInfo(Object):
    @property
    def AuthenticationMechanism(self) -> AuthenticationMechanism: ...
    @property
    def CancelTimeout(self) -> int: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def Culture(self) -> CultureInfo: ...
    @property
    def IdleTimeout(self) -> int: ...
    @property
    def MaxIdleTimeout(self) -> int: ...
    @property
    def OpenTimeout(self) -> int: ...
    @property
    def OperationTimeout(self) -> int: ...
    @property
    def UICulture(self) -> CultureInfo: ...
    @AuthenticationMechanism.setter
    def AuthenticationMechanism(self, value: AuthenticationMechanism) -> None: ...
    @CancelTimeout.setter
    def CancelTimeout(self, value: int) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @Culture.setter
    def Culture(self, value: CultureInfo) -> None: ...
    @IdleTimeout.setter
    def IdleTimeout(self, value: int) -> None: ...
    @OpenTimeout.setter
    def OpenTimeout(self, value: int) -> None: ...
    @OperationTimeout.setter
    def OperationTimeout(self, value: int) -> None: ...
    @UICulture.setter
    def UICulture(self, value: CultureInfo) -> None: ...
    def SetSessionOptions(self, options: PSSessionOption) -> None: ...


class RunspaceFactory(Object):
    @overload
    def CreateOutOfProcessRunspace(typeTable: TypeTable) -> Runspace: ...
    @overload
    def CreateOutOfProcessRunspace(typeTable: TypeTable, processInstance: PowerShellProcessInstance) -> Runspace: ...
    @overload
    def CreateRunspace() -> Runspace: ...
    @overload
    def CreateRunspace(host: PSHost) -> Runspace: ...
    @overload
    def CreateRunspace(runspaceConfiguration: RunspaceConfiguration) -> Runspace: ...
    @overload
    def CreateRunspace(initialSessionState: InitialSessionState) -> Runspace: ...
    @overload
    def CreateRunspace(connectionInfo: RunspaceConnectionInfo) -> Runspace: ...
    @overload
    def CreateRunspace(host: PSHost, runspaceConfiguration: RunspaceConfiguration) -> Runspace: ...
    @overload
    def CreateRunspace(host: PSHost, initialSessionState: InitialSessionState) -> Runspace: ...
    @overload
    def CreateRunspace(host: PSHost, connectionInfo: RunspaceConnectionInfo) -> Runspace: ...
    @overload
    def CreateRunspace(connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable) -> Runspace: ...
    @overload
    def CreateRunspace(connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable, applicationArguments: PSPrimitiveDictionary) -> Runspace: ...
    @overload
    def CreateRunspace(connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable, applicationArguments: PSPrimitiveDictionary, name: str) -> Runspace: ...
    @overload
    def CreateRunspacePool() -> RunspacePool: ...
    @overload
    def CreateRunspacePool(initialSessionState: InitialSessionState) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, host: PSHost) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, connectionInfo: RunspaceConnectionInfo) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, connectionInfo: RunspaceConnectionInfo, host: PSHost) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, initialSessionState: InitialSessionState, host: PSHost) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable) -> RunspacePool: ...
    @overload
    def CreateRunspacePool(minRunspaces: int, maxRunspaces: int, connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable, applicationArguments: PSPrimitiveDictionary) -> RunspacePool: ...


class RunspaceOpenModuleLoadException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def ErrorRecords(self) -> PSDataCollection: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class RunspacePool(Object):
    def add_StateChanged(self, value: EventHandler) -> None: ...
    def BeginClose(self, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def BeginConnect(self, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def BeginDisconnect(self, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def BeginOpen(self, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def Close(self) -> None: ...
    def Connect(self) -> None: ...
    def CreateDisconnectedPowerShells(self) -> Collection: ...
    def Disconnect(self) -> None: ...
    def Dispose(self) -> None: ...
    def EndClose(self, asyncResult: IAsyncResult) -> None: ...
    def EndConnect(self, asyncResult: IAsyncResult) -> None: ...
    def EndDisconnect(self, asyncResult: IAsyncResult) -> None: ...
    def EndOpen(self, asyncResult: IAsyncResult) -> None: ...
    @property
    def ApartmentState(self) -> ApartmentState: ...
    @property
    def CleanupInterval(self) -> TimeSpan: ...
    @property
    def ConnectionInfo(self) -> RunspaceConnectionInfo: ...
    @property
    def InitialSessionState(self) -> InitialSessionState: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def IsDisposed(self) -> bool: ...
    @property
    def RunspacePoolAvailability(self) -> RunspacePoolAvailability: ...
    @property
    def RunspacePoolStateInfo(self) -> RunspacePoolStateInfo: ...
    @property
    def ThreadOptions(self) -> PSThreadOptions: ...
    def GetApplicationPrivateData(self) -> PSPrimitiveDictionary: ...
    def GetAvailableRunspaces(self) -> int: ...
    def GetCapabilities(self) -> RunspacePoolCapability: ...
    def GetMaxRunspaces(self) -> int: ...
    def GetMinRunspaces(self) -> int: ...
    @overload
    def GetRunspacePools(connectionInfo: RunspaceConnectionInfo) -> Set(RunspacePool): ...
    @overload
    def GetRunspacePools(connectionInfo: RunspaceConnectionInfo, host: PSHost) -> Set(RunspacePool): ...
    @overload
    def GetRunspacePools(connectionInfo: RunspaceConnectionInfo, host: PSHost, typeTable: TypeTable) -> Set(RunspacePool): ...
    def Open(self) -> None: ...
    def remove_StateChanged(self, value: EventHandler) -> None: ...
    @ApartmentState.setter
    def ApartmentState(self, value: ApartmentState) -> None: ...
    @CleanupInterval.setter
    def CleanupInterval(self, value: TimeSpan) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: PSThreadOptions) -> None: ...
    def SetMaxRunspaces(self, maxRunspaces: int) -> bool: ...
    def SetMinRunspaces(self, minRunspaces: int) -> bool: ...


class RunspacePoolAvailability:
    #None = 0
    Available = 1
    Busy = 2


class RunspacePoolCapability:
    Default = 0
    SupportsDisconnect = 1


class RunspacePoolState:
    BeforeOpen = 0
    Opening = 1
    Opened = 2
    Closed = 3
    Closing = 4
    Broken = 5
    Disconnecting = 6
    Disconnected = 7
    Connecting = 8


class RunspacePoolStateChangedEventArgs(EventArgs):
    @property
    def RunspacePoolStateInfo(self) -> RunspacePoolStateInfo: ...


class RunspaceState:
    BeforeOpen = 0
    Opening = 1
    Opened = 2
    Closed = 3
    Closing = 4
    Broken = 5
    Disconnecting = 6
    Disconnected = 7
    Connecting = 8


class RunspaceStateEventArgs(EventArgs):
    @property
    def RunspaceStateInfo(self) -> RunspaceStateInfo: ...


class RunspaceStateInfo(Object):
    @property
    def Reason(self) -> Exception: ...
    @property
    def State(self) -> RunspaceState: ...
    def ToString(self) -> str: ...


class ScriptConfigurationEntry(RunspaceConfigurationEntry):
    def __init__(self, name: str, definition: str): ...
    @property
    def Definition(self) -> str: ...


class ScriptMethodData(TypeMemberData):
    def __init__(self, name: str, scriptToInvoke: ScriptBlock): ...
    @property
    def Script(self) -> ScriptBlock: ...
    @Script.setter
    def Script(self, value: ScriptBlock) -> None: ...


class ScriptPropertyData(TypeMemberData):
    @overload
    def __init__(self, name: str, getScriptBlock: ScriptBlock): ...
    @overload
    def __init__(self, name: str, getScriptBlock: ScriptBlock, setScriptBlock: ScriptBlock): ...
    @property
    def GetScriptBlock(self) -> ScriptBlock: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def SetScriptBlock(self) -> ScriptBlock: ...
    @GetScriptBlock.setter
    def GetScriptBlock(self, value: ScriptBlock) -> None: ...
    @IsHidden.setter
    def IsHidden(self, value: bool) -> None: ...
    @SetScriptBlock.setter
    def SetScriptBlock(self, value: ScriptBlock) -> None: ...


class SessionStateAliasEntry(SessionStateCommandEntry):
    @overload
    def __init__(self, name: str, definition: str): ...
    @overload
    def __init__(self, name: str, definition: str, description: str): ...
    @overload
    def __init__(self, name: str, definition: str, description: str, options: ScopedItemOptions): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Definition(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def Options(self) -> ScopedItemOptions: ...


class SessionStateApplicationEntry(SessionStateCommandEntry):
    def __init__(self, path: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Path(self) -> str: ...


class SessionStateAssemblyEntry(InitialSessionStateEntry):
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, name: str, fileName: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def FileName(self) -> str: ...


class SessionStateCmdletEntry(SessionStateCommandEntry):
    def __init__(self, name: str, implementingType: Type, helpFileName: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def HelpFileName(self) -> str: ...
    @property
    def ImplementingType(self) -> Type: ...


class SessionStateCommandEntry(ConstrainedSessionStateEntry):
    @property
    def CommandType(self) -> CommandTypes: ...


class SessionStateFormatEntry(InitialSessionStateEntry):
    @overload
    def __init__(self, fileName: str): ...
    @overload
    def __init__(self, formattable: FormatTable): ...
    @overload
    def __init__(self, typeDefinition: ExtendedTypeDefinition): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def FileName(self) -> str: ...
    @property
    def FormatData(self) -> ExtendedTypeDefinition: ...
    @property
    def Formattable(self) -> FormatTable: ...


class SessionStateFunctionEntry(SessionStateCommandEntry):
    @overload
    def __init__(self, name: str, definition: str): ...
    @overload
    def __init__(self, name: str, definition: str, helpFile: str): ...
    @overload
    def __init__(self, name: str, definition: str, options: ScopedItemOptions, helpFile: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Definition(self) -> str: ...
    @property
    def HelpFile(self) -> str: ...
    @property
    def Options(self) -> ScopedItemOptions: ...


class SessionStateProviderEntry(ConstrainedSessionStateEntry):
    def __init__(self, name: str, implementingType: Type, helpFileName: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def HelpFileName(self) -> str: ...
    @property
    def ImplementingType(self) -> Type: ...


class SessionStateProxy(Object):
    @property
    def Applications(self) -> List: ...
    @property
    def Drive(self) -> DriveManagementIntrinsics: ...
    @property
    def InvokeCommand(self) -> CommandInvocationIntrinsics: ...
    @property
    def InvokeProvider(self) -> ProviderIntrinsics: ...
    @property
    def LanguageMode(self) -> PSLanguageMode: ...
    @property
    def Module(self) -> PSModuleInfo: ...
    @property
    def Path(self) -> PathIntrinsics: ...
    @property
    def Provider(self) -> CmdletProviderManagementIntrinsics: ...
    @property
    def PSVariable(self) -> PSVariableIntrinsics: ...
    @property
    def Scripts(self) -> List: ...
    def GetVariable(self, name: str) -> Object: ...
    @LanguageMode.setter
    def LanguageMode(self, value: PSLanguageMode) -> None: ...
    def SetVariable(self, name: str, value: Object) -> None: ...


class SessionStateScriptEntry(SessionStateCommandEntry):
    def __init__(self, path: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Path(self) -> str: ...


class SessionStateTypeEntry(InitialSessionStateEntry):
    @overload
    def __init__(self, fileName: str): ...
    @overload
    def __init__(self, typeTable: TypeTable): ...
    @overload
    def __init__(self, typeData: TypeData, isRemove: bool): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def FileName(self) -> str: ...
    @property
    def IsRemove(self) -> bool: ...
    @property
    def TypeData(self) -> TypeData: ...
    @property
    def TypeTable(self) -> TypeTable: ...


class SessionStateVariableEntry(ConstrainedSessionStateEntry):
    @overload
    def __init__(self, name: str, value: Object, description: str): ...
    @overload
    def __init__(self, name: str, value: Object, description: str, options: ScopedItemOptions): ...
    @overload
    def __init__(self, name: str, value: Object, description: str, options: ScopedItemOptions, attributes: Collection): ...
    @overload
    def __init__(self, name: str, value: Object, description: str, options: ScopedItemOptions, attribute: Attribute): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Attributes(self) -> Collection: ...
    @property
    def Description(self) -> str: ...
    @property
    def Options(self) -> ScopedItemOptions: ...
    @property
    def Value(self) -> Object: ...


class SessionStateWorkflowEntry(SessionStateCommandEntry):
    @overload
    def __init__(self, name: str, definition: str): ...
    @overload
    def __init__(self, name: str, definition: str, helpFile: str): ...
    @overload
    def __init__(self, name: str, definition: str, options: ScopedItemOptions, helpFile: str): ...
    def Clone(self) -> InitialSessionStateEntry: ...
    @property
    def Definition(self) -> str: ...
    @property
    def HelpFile(self) -> str: ...
    @property
    def Options(self) -> ScopedItemOptions: ...


class TargetMachineType:
    RemoteMachine = 0
    VirtualMachine = 1
    Container = 2


class TypeConfigurationEntry(RunspaceConfigurationEntry):
    @overload
    def __init__(self, fileName: str): ...
    @overload
    def __init__(self, typeData: TypeData, isRemove: bool): ...
    @overload
    def __init__(self, name: str, fileName: str): ...
    @property
    def FileName(self) -> str: ...
    @property
    def IsRemove(self) -> bool: ...
    @property
    def TypeData(self) -> TypeData: ...


class TypeData(Object):
    @overload
    def __init__(self, typeName: str): ...
    @overload
    def __init__(self, type: Type): ...
    def Copy(self) -> TypeData: ...
    @property
    def DefaultDisplayProperty(self) -> str: ...
    @property
    def DefaultDisplayPropertySet(self) -> PropertySetData: ...
    @property
    def DefaultKeyPropertySet(self) -> PropertySetData: ...
    @property
    def InheritPropertySerializationSet(self) -> bool: ...
    @property
    def IsOverride(self) -> bool: ...
    @property
    def Members(self) -> Dictionary: ...
    @property
    def PropertySerializationSet(self) -> PropertySetData: ...
    @property
    def SerializationDepth(self) -> UInt32: ...
    @property
    def SerializationMethod(self) -> str: ...
    @property
    def StringSerializationSource(self) -> str: ...
    @property
    def StringSerializationSourceProperty(self) -> TypeMemberData: ...
    @property
    def TargetTypeForDeserialization(self) -> Type: ...
    @property
    def TypeAdapter(self) -> Type: ...
    @property
    def TypeConverter(self) -> Type: ...
    @property
    def TypeName(self) -> str: ...
    @DefaultDisplayProperty.setter
    def DefaultDisplayProperty(self, value: str) -> None: ...
    @DefaultDisplayPropertySet.setter
    def DefaultDisplayPropertySet(self, value: PropertySetData) -> None: ...
    @DefaultKeyPropertySet.setter
    def DefaultKeyPropertySet(self, value: PropertySetData) -> None: ...
    @InheritPropertySerializationSet.setter
    def InheritPropertySerializationSet(self, value: bool) -> None: ...
    @IsOverride.setter
    def IsOverride(self, value: bool) -> None: ...
    @PropertySerializationSet.setter
    def PropertySerializationSet(self, value: PropertySetData) -> None: ...
    @SerializationDepth.setter
    def SerializationDepth(self, value: UInt32) -> None: ...
    @SerializationMethod.setter
    def SerializationMethod(self, value: str) -> None: ...
    @StringSerializationSource.setter
    def StringSerializationSource(self, value: str) -> None: ...
    @StringSerializationSourceProperty.setter
    def StringSerializationSourceProperty(self, value: TypeMemberData) -> None: ...
    @TargetTypeForDeserialization.setter
    def TargetTypeForDeserialization(self, value: Type) -> None: ...
    @TypeAdapter.setter
    def TypeAdapter(self, value: Type) -> None: ...
    @TypeConverter.setter
    def TypeConverter(self, value: Type) -> None: ...


class TypeMemberData(Object):
    @property
    def Name(self) -> str: ...


class TypeTable(Object):
    def __init__(self, typeFiles: Iterable[str]): ...
    def AddType(self, typeData: TypeData) -> None: ...
    def Clone(self, unshared: bool) -> TypeTable: ...
    def GetDefaultTypeFiles() -> List: ...
    def LoadDefaultTypeFiles() -> TypeTable: ...
    def RemoveType(self, typeName: str) -> None: ...


class TypeTableLoadException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def Errors(self) -> Collection: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class VMConnectionInfo(RunspaceConnectionInfo):
    @property
    def AuthenticationMechanism(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def VMGuid(self) -> Guid: ...
    @AuthenticationMechanism.setter
    def AuthenticationMechanism(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @VMGuid.setter
    def VMGuid(self, value: Guid) -> None: ...


class WSManConnectionInfo(RunspaceConnectionInfo):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, uri: Uri): ...
    @overload
    def __init__(self, configurationType: PSSessionType): ...
    @overload
    def __init__(self, uri: Uri, shellUri: str, credential: PSCredential): ...
    @overload
    def __init__(self, uri: Uri, shellUri: str, certificateThumbprint: str): ...
    @overload
    def __init__(self, scheme: str, computerName: str, port: int, appName: str, shellUri: str, credential: PSCredential): ...
    @overload
    def __init__(self, useSsl: bool, computerName: str, port: int, appName: str, shellUri: str, credential: PSCredential): ...
    @overload
    def __init__(self, scheme: str, computerName: str, port: int, appName: str, shellUri: str, credential: PSCredential, openTimeout: int): ...
    @overload
    def __init__(self, useSsl: bool, computerName: str, port: int, appName: str, shellUri: str, credential: PSCredential, openTimeout: int): ...
    def Copy(self) -> WSManConnectionInfo: ...
    @property
    def AppName(self) -> str: ...
    @property
    def AuthenticationMechanism(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Uri: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def EnableNetworkAccess(self) -> bool: ...
    @property
    def IncludePortInSPN(self) -> bool: ...
    @property
    def MaxConnectionRetryCount(self) -> int: ...
    @property
    def MaximumConnectionRedirectionCount(self) -> int: ...
    @property
    def MaximumReceivedDataSizePerCommand(self) -> Nullable: ...
    @property
    def MaximumReceivedObjectSize(self) -> Nullable: ...
    @property
    def NoEncryption(self) -> bool: ...
    @property
    def NoMachineProfile(self) -> bool: ...
    @property
    def OutputBufferingMode(self) -> OutputBufferingMode: ...
    @property
    def Port(self) -> int: ...
    @property
    def ProxyAccessType(self) -> ProxyAccessType: ...
    @property
    def ProxyAuthentication(self) -> AuthenticationMechanism: ...
    @property
    def ProxyCredential(self) -> PSCredential: ...
    @property
    def Scheme(self) -> str: ...
    @property
    def ShellUri(self) -> str: ...
    @property
    def SkipCACheck(self) -> bool: ...
    @property
    def SkipCNCheck(self) -> bool: ...
    @property
    def SkipRevocationCheck(self) -> bool: ...
    @property
    def UseCompression(self) -> bool: ...
    @property
    def UseUTF16(self) -> bool: ...
    @AppName.setter
    def AppName(self, value: str) -> None: ...
    @AuthenticationMechanism.setter
    def AuthenticationMechanism(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Uri) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @EnableNetworkAccess.setter
    def EnableNetworkAccess(self, value: bool) -> None: ...
    @IncludePortInSPN.setter
    def IncludePortInSPN(self, value: bool) -> None: ...
    @MaxConnectionRetryCount.setter
    def MaxConnectionRetryCount(self, value: int) -> None: ...
    @MaximumConnectionRedirectionCount.setter
    def MaximumConnectionRedirectionCount(self, value: int) -> None: ...
    @MaximumReceivedDataSizePerCommand.setter
    def MaximumReceivedDataSizePerCommand(self, value: Nullable) -> None: ...
    @MaximumReceivedObjectSize.setter
    def MaximumReceivedObjectSize(self, value: Nullable) -> None: ...
    @NoEncryption.setter
    def NoEncryption(self, value: bool) -> None: ...
    @NoMachineProfile.setter
    def NoMachineProfile(self, value: bool) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: OutputBufferingMode) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @ProxyAccessType.setter
    def ProxyAccessType(self, value: ProxyAccessType) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: AuthenticationMechanism) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: PSCredential) -> None: ...
    @Scheme.setter
    def Scheme(self, value: str) -> None: ...
    @ShellUri.setter
    def ShellUri(self, value: str) -> None: ...
    @SkipCACheck.setter
    def SkipCACheck(self, value: bool) -> None: ...
    @SkipCNCheck.setter
    def SkipCNCheck(self, value: bool) -> None: ...
    @SkipRevocationCheck.setter
    def SkipRevocationCheck(self, value: bool) -> None: ...
    @UseCompression.setter
    def UseCompression(self, value: bool) -> None: ...
    @UseUTF16.setter
    def UseUTF16(self, value: bool) -> None: ...
    def SetSessionOptions(self, options: PSSessionOption) -> None: ...
