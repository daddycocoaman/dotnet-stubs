__all__ = ['Internal','WSMan']
from typing import Tuple, Set, Iterable, List




class OriginInfo(Object):
    @overload
    def __init__(self, computerName: str, runspaceID: Guid): ...
    @overload
    def __init__(self, computerName: str, runspaceID: Guid, instanceID: Guid): ...
    @property
    def InstanceID(self) -> Guid: ...
    @property
    def PSComputerName(self) -> str: ...
    @property
    def RunspaceID(self) -> Guid: ...
    @InstanceID.setter
    def InstanceID(self, value: Guid) -> None: ...
    def ToString(self) -> str: ...


class ProxyAccessType:
    #None = 0
    IEConfig = 1
    WinHttpConfig = 2
    AutoDetect = 4
    NoProxyServer = 8


class PSCertificateDetails(Object):
    def __init__(self, subject: str, issuerName: str, issuerThumbprint: str): ...
    @property
    def IssuerName(self) -> str: ...
    @property
    def IssuerThumbprint(self) -> str: ...
    @property
    def Subject(self) -> str: ...


class PSDirectException(RuntimeException):
    def __init__(self, message: str): ...


class PSIdentity(Object):
    def __init__(self, authType: str, isAuthenticated: bool, userName: str, cert: PSCertificateDetails): ...
    @property
    def AuthenticationType(self) -> str: ...
    @property
    def CertificateDetails(self) -> PSCertificateDetails: ...
    @property
    def IsAuthenticated(self) -> bool: ...
    @property
    def Name(self) -> str: ...


class PSPrincipal(Object):
    def __init__(self, identity: PSIdentity, windowsIdentity: WindowsIdentity): ...
    @property
    def Identity(self) -> PSIdentity: ...
    @property
    def WindowsIdentity(self) -> WindowsIdentity: ...
    def IsInRole(self, role: str) -> bool: ...


class PSRemotingDataStructureException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...


class PSRemotingTransportException(RuntimeException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def ErrorCode(self) -> int: ...
    @property
    def TransportMessage(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @ErrorCode.setter
    def ErrorCode(self, value: int) -> None: ...
    @TransportMessage.setter
    def TransportMessage(self, value: str) -> None: ...


class PSRemotingTransportRedirectException(PSRemotingTransportException):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @property
    def RedirectLocation(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class PSSenderInfo(Object):
    def __init__(self, userPrincipal: PSPrincipal, httpUrl: str): ...
    @property
    def ApplicationArguments(self) -> PSPrimitiveDictionary: ...
    @property
    def ClientTimeZone(self) -> TimeZone: ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionString(self) -> str: ...
    @property
    def UserInfo(self) -> PSPrincipal: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class PSSessionConfiguration(Object):
    def Dispose(self) -> None: ...
    def GetApplicationPrivateData(self, senderInfo: PSSenderInfo) -> PSPrimitiveDictionary: ...
    @overload
    def GetInitialSessionState(self, senderInfo: PSSenderInfo) -> InitialSessionState: ...
    @overload
    def GetInitialSessionState(self, sessionConfigurationData: PSSessionConfigurationData, senderInfo: PSSenderInfo, configProviderId: str) -> InitialSessionState: ...
    def GetMaximumReceivedDataSizePerCommand(self, senderInfo: PSSenderInfo) -> Nullable: ...
    def GetMaximumReceivedObjectSize(self, senderInfo: PSSenderInfo) -> Nullable: ...


class PSSessionConfigurationData(Object):
    @property
    def ModulesToImport(self) -> List: ...
    @property
    def PrivateData(self) -> str: ...


class PSSessionOption(Object):
    def __init__(self): ...
    @property
    def ApplicationArguments(self) -> PSPrimitiveDictionary: ...
    @property
    def CancelTimeout(self) -> TimeSpan: ...
    @property
    def Culture(self) -> CultureInfo: ...
    @property
    def IdleTimeout(self) -> TimeSpan: ...
    @property
    def IncludePortInSPN(self) -> bool: ...
    @property
    def MaxConnectionRetryCount(self) -> int: ...
    @property
    def MaximumConnectionRedirectionCount(self) -> int: ...
    @property
    def MaximumReceivedDataSizePerCommand(self) -> Nullable: ...
    @property
    def MaximumReceivedObjectSize(self) -> Nullable: ...
    @property
    def NoCompression(self) -> bool: ...
    @property
    def NoEncryption(self) -> bool: ...
    @property
    def NoMachineProfile(self) -> bool: ...
    @property
    def OpenTimeout(self) -> TimeSpan: ...
    @property
    def OperationTimeout(self) -> TimeSpan: ...
    @property
    def OutputBufferingMode(self) -> OutputBufferingMode: ...
    @property
    def ProxyAccessType(self) -> ProxyAccessType: ...
    @property
    def ProxyAuthentication(self) -> AuthenticationMechanism: ...
    @property
    def ProxyCredential(self) -> PSCredential: ...
    @property
    def SkipCACheck(self) -> bool: ...
    @property
    def SkipCNCheck(self) -> bool: ...
    @property
    def SkipRevocationCheck(self) -> bool: ...
    @property
    def UICulture(self) -> CultureInfo: ...
    @property
    def UseUTF16(self) -> bool: ...
    @ApplicationArguments.setter
    def ApplicationArguments(self, value: PSPrimitiveDictionary) -> None: ...
    @CancelTimeout.setter
    def CancelTimeout(self, value: TimeSpan) -> None: ...
    @Culture.setter
    def Culture(self, value: CultureInfo) -> None: ...
    @IdleTimeout.setter
    def IdleTimeout(self, value: TimeSpan) -> None: ...
    @IncludePortInSPN.setter
    def IncludePortInSPN(self, value: bool) -> None: ...
    @MaxConnectionRetryCount.setter
    def MaxConnectionRetryCount(self, value: int) -> None: ...
    @MaximumConnectionRedirectionCount.setter
    def MaximumConnectionRedirectionCount(self, value: int) -> None: ...
    @MaximumReceivedDataSizePerCommand.setter
    def MaximumReceivedDataSizePerCommand(self, value: Nullable) -> None: ...
    @MaximumReceivedObjectSize.setter
    def MaximumReceivedObjectSize(self, value: Nullable) -> None: ...
    @NoCompression.setter
    def NoCompression(self, value: bool) -> None: ...
    @NoEncryption.setter
    def NoEncryption(self, value: bool) -> None: ...
    @NoMachineProfile.setter
    def NoMachineProfile(self, value: bool) -> None: ...
    @OpenTimeout.setter
    def OpenTimeout(self, value: TimeSpan) -> None: ...
    @OperationTimeout.setter
    def OperationTimeout(self, value: TimeSpan) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: OutputBufferingMode) -> None: ...
    @ProxyAccessType.setter
    def ProxyAccessType(self, value: ProxyAccessType) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: AuthenticationMechanism) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: PSCredential) -> None: ...
    @SkipCACheck.setter
    def SkipCACheck(self, value: bool) -> None: ...
    @SkipCNCheck.setter
    def SkipCNCheck(self, value: bool) -> None: ...
    @SkipRevocationCheck.setter
    def SkipRevocationCheck(self, value: bool) -> None: ...
    @UICulture.setter
    def UICulture(self, value: CultureInfo) -> None: ...
    @UseUTF16.setter
    def UseUTF16(self, value: bool) -> None: ...


class SessionType:
    Empty = 0
    RestrictedRemoteServer = 1
    Default = 2


class WSManPluginManagedEntryInstanceWrapper(Object):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    def GetEntryDelegate(self) -> IntPtr: ...


class WSManPluginManagedEntryWrapper(Object):
    def InitPlugin(wkrPtrs: IntPtr) -> int: ...
    def PSPluginOperationShutdownCallback(operationContext: Object, timedOut: bool) -> None: ...
    def ShutdownPlugin(pluginContext: IntPtr) -> None: ...
    def WSManPluginCommand(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, shellContext: IntPtr, commandLine: str, arguments: IntPtr) -> None: ...
    def WSManPluginConnect(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, shellContext: IntPtr, commandContext: IntPtr, inboundConnectInformation: IntPtr) -> None: ...
    def WSManPluginReceive(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, shellContext: IntPtr, commandContext: IntPtr, streamSet: IntPtr) -> None: ...
    def WSManPluginReleaseCommandContext(pluginContext: IntPtr, shellContext: IntPtr, commandContext: IntPtr) -> None: ...
    def WSManPluginReleaseShellContext(pluginContext: IntPtr, shellContext: IntPtr) -> None: ...
    def WSManPluginSend(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, shellContext: IntPtr, commandContext: IntPtr, stream: str, inboundData: IntPtr) -> None: ...
    def WSManPluginShell(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, extraInfo: str, startupInfo: IntPtr, inboundShellInformation: IntPtr) -> None: ...
    def WSManPluginSignal(pluginContext: IntPtr, requestDetails: IntPtr, flags: int, shellContext: IntPtr, commandContext: IntPtr, code: str) -> None: ...
