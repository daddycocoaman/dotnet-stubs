from typing import Tuple, Set, Iterable, List


class BaseChannelWriter(Object):
    def Dispose(self) -> None: ...
    @property
    def Keywords(self) -> PowerShellTraceKeywords: ...
    @Keywords.setter
    def Keywords(self, value: PowerShellTraceKeywords) -> None: ...
    def TraceCritical(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceDebug(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceError(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceInformational(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceLogAlways(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceVerbose(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceWarning(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...


class CallbackNoParameter(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self) -> None: ...


class CallbackWithState(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, state: Object, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, state: Object) -> None: ...


class CallbackWithStateAndArgs(MulticastDelegate):
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, state: Object, args: ElapsedEventArgs, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Invoke(self, state: Object, args: ElapsedEventArgs) -> None: ...


class EtwActivity(Object):
    def add_EventWritten(value: EventHandler) -> None: ...
    @overload
    def Correlate(self) -> None: ...
    @overload
    def Correlate(self, callback: CallbackNoParameter) -> CallbackNoParameter: ...
    @overload
    def Correlate(self, callback: CallbackWithState) -> CallbackWithState: ...
    @overload
    def Correlate(self, callback: AsyncCallback) -> AsyncCallback: ...
    @overload
    def Correlate(self, callback: CallbackWithStateAndArgs) -> CallbackWithStateAndArgs: ...
    def CorrelateWithActivity(self, parentActivityId: Guid) -> None: ...
    def CreateActivityId() -> Guid: ...
    @property
    def IsEnabled(self) -> bool: ...
    def GetActivityId() -> Guid: ...
    def IsProviderEnabled(self, levels: Byte, keywords: Int64) -> bool: ...
    def remove_EventWritten(value: EventHandler) -> None: ...
    def SetActivityId(activityId: Guid) -> bool: ...


class EtwEvent(Attribute):
    def __init__(self, eventId: Int64): ...
    @property
    def EventId(self) -> Int64: ...


class EtwEventArgs(EventArgs):
    def __init__(self, descriptor: EventDescriptor, success: bool, payload: Set(Object)): ...
    @property
    def Descriptor(self) -> EventDescriptor: ...
    @property
    def Payload(self) -> Set(Object): ...
    @property
    def Success(self) -> bool: ...


class EtwEventCorrelator(Object):
    def __init__(self, transferProvider: EventProvider, transferEvent: EventDescriptor): ...
    @property
    def CurrentActivityId(self) -> Guid: ...
    @CurrentActivityId.setter
    def CurrentActivityId(self, value: Guid) -> None: ...
    @overload
    def StartActivity(self) -> IEtwActivityReverter: ...
    @overload
    def StartActivity(self, relatedActivityId: Guid) -> IEtwActivityReverter: ...


class IEtwActivityReverter:
    def RevertCurrentActivityId(self) -> None: ...


class IEtwEventCorrelator:
    @property
    def CurrentActivityId(self) -> Guid: ...
    @CurrentActivityId.setter
    def CurrentActivityId(self, value: Guid) -> None: ...
    @overload
    def StartActivity(self) -> IEtwActivityReverter: ...
    @overload
    def StartActivity(self, relatedActivityId: Guid) -> IEtwActivityReverter: ...


class NullWriter(BaseChannelWriter):
    @property
    def Instance() -> BaseChannelWriter: ...


class PowerShellChannelWriter(BaseChannelWriter):
    def Dispose(self) -> None: ...
    @property
    def Keywords(self) -> PowerShellTraceKeywords: ...
    @Keywords.setter
    def Keywords(self, value: PowerShellTraceKeywords) -> None: ...
    def TraceCritical(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceDebug(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceError(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceInformational(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceLogAlways(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceVerbose(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...
    def TraceWarning(self, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, args: Set(Object)) -> bool: ...


class PowerShellTraceChannel:
    #None = 0
    Operational = 16
    Analytic = 17
    Debug = 18


class PowerShellTraceEvent:
    #None = 0
    HostNameResolve = 4097
    SchemeResolve = 4098
    ShellResolve = 4099
    RunspaceConstructor = 8193
    RunspacePoolConstructor = 8194
    RunspacePoolOpen = 8195
    OperationalTransferEventRunspacePool = 8196
    RunspacePort = 12033
    AppName = 12034
    ComputerName = 12035
    Scheme = 12036
    TestAnalytic = 12037
    WSManConnectionInfoDump = 12038
    AnalyticTransferEventRunspacePool = 12039
    SerializerWorkflowLoadSuccess = 28673
    SerializerWorkflowLoadFailure = 28674
    SerializerDepthOverride = 28675
    SerializerModeOverride = 28676
    SerializerScriptPropertyWithoutRunspace = 28677
    SerializerPropertyGetterFailed = 28678
    SerializerEnumerationFailed = 28679
    SerializerToStringFailed = 28680
    SerializerMaxDepthWhenSerializing = 28682
    SerializerXmlExceptionWhenDeserializing = 28683
    SerializerSpecificPropertyMissing = 28684
    TransportReceivedObject = 32769
    AppDomainUnhandledExceptionAnalytic = 32775
    TransportErrorAnalytic = 32776
    AppDomainUnhandledException = 32777
    TransportError = 32784
    WSManCreateShell = 32785
    WSManCreateShellCallbackReceived = 32786
    WSManCloseShell = 32787
    WSManCloseShellCallbackReceived = 32788
    WSManSendShellInputExtended = 32789
    WSManSendShellInputExtendedCallbackReceived = 32790
    WSManReceiveShellOutputExtended = 32791
    WSManReceiveShellOutputExtendedCallbackReceived = 32792
    WSManCreateCommand = 32793
    WSManCreateCommandCallbackReceived = 32800
    WSManCloseCommand = 32801
    WSManCloseCommandCallbackReceived = 32802
    WSManSignal = 32803
    WSManSignalCallbackReceived = 32804
    UriRedirection = 32805
    ServerSendData = 32849
    ServerCreateRemoteSession = 32850
    ReportContext = 32851
    ReportOperationComplete = 32852
    ServerCreateCommandSession = 32853
    ServerStopCommand = 32854
    ServerReceivedData = 32855
    ServerClientReceiveRequest = 32856
    ServerCloseOperation = 32857
    LoadingPSCustomShellAssembly = 32865
    LoadingPSCustomShellType = 32866
    ReceivedRemotingFragment = 32867
    SentRemotingFragment = 32868
    WSManPluginShutdown = 32869
    PerformanceTrackConsoleStartupStart = 40961
    PerformanceTrackConsoleStartupStop = 40962
    ErrorRecord = 45057
    Exception = 45058
    PowerShellObject = 45059
    Job = 45060
    TraceMessage = 45061
    TraceWSManConnectionInfo = 45062
    TraceMessage2 = 49153
    TraceMessageGuid = 49154


class PowerShellTraceKeywords:
    #None = 0
    Runspace = 1
    Pipeline = 2
    Protocol = 4
    Transport = 8
    Host = 16
    Cmdlets = 32
    Serializer = 64
    Session = 128
    ManagedPlugIn = 256
    UseAlwaysDebug = 2305843009213693952
    UseAlwaysAnalytic = 4611686018427387904
    UseAlwaysOperational = 9223372036854775808


class PowerShellTraceLevel:
    LogAlways = 0
    Critical = 1
    Error = 2
    Warning = 3
    Informational = 4
    Verbose = 5
    Debug = 20


class PowerShellTraceOperationCode:
    #None = 0
    Open = 10
    Close = 11
    Connect = 12
    Disconnect = 13
    Negotiate = 14
    Create = 15
    Constructor = 16
    Dispose = 17
    EventHandler = 18
    Exception = 19
    Method = 20
    Send = 21
    Receive = 22
    WorkflowLoad = 23
    SerializationSettings = 24
    WinInfo = 25
    WinStart = 26
    WinStop = 27
    WinDCStart = 28
    WinDCStop = 29
    WinExtension = 30
    WinReply = 31
    WinResume = 32
    WinSuspend = 33


class PowerShellTraceSource(Object):
    def Dispose(self) -> None: ...
    @property
    def AnalyticChannel(self) -> BaseChannelWriter: ...
    @property
    def DebugChannel(self) -> BaseChannelWriter: ...
    @property
    def Keywords(self) -> PowerShellTraceKeywords: ...
    @property
    def OperationalChannel(self) -> BaseChannelWriter: ...
    @property
    def Task(self) -> PowerShellTraceTask: ...
    @Task.setter
    def Task(self, value: PowerShellTraceTask) -> None: ...
    def TraceErrorRecord(self, errorRecord: ErrorRecord) -> bool: ...
    def TraceException(self, exception: Exception) -> bool: ...
    def TraceJob(self, job: Job) -> bool: ...
    def TracePowerShellObject(self, powerShellObject: PSObject) -> bool: ...
    def TraceWSManConnectionInfo(self, connectionInfo: WSManConnectionInfo) -> bool: ...
    def WriteISEDebuggerStepIntoEvent(self, args: Set(Object)) -> None: ...
    def WriteISEDebuggerStepOutEvent(self, args: Set(Object)) -> None: ...
    def WriteISEDebuggerStepOverEvent(self, args: Set(Object)) -> None: ...
    def WriteISEDisableAllBreakpointsEvent(self, args: Set(Object)) -> None: ...
    def WriteISEDisableBreakpointEvent(self, args: Set(Object)) -> None: ...
    def WriteISEEnableAllBreakpointsEvent(self, args: Set(Object)) -> None: ...
    def WriteISEEnableBreakpointEvent(self, args: Set(Object)) -> None: ...
    def WriteISEExecuteScriptEvent(self, args: Set(Object)) -> None: ...
    def WriteISEExecuteSelectionEvent(self, args: Set(Object)) -> None: ...
    def WriteISEHitBreakpointEvent(self, args: Set(Object)) -> None: ...
    def WriteISERemoveAllBreakpointsEvent(self, args: Set(Object)) -> None: ...
    def WriteISERemoveBreakpointEvent(self, args: Set(Object)) -> None: ...
    def WriteISEResumeDebuggerEvent(self, args: Set(Object)) -> None: ...
    def WriteISESetBreakpointEvent(self, args: Set(Object)) -> None: ...
    def WriteISEStopCommandEvent(self, args: Set(Object)) -> None: ...
    def WriteISEStopDebuggerEvent(self, args: Set(Object)) -> None: ...
    @overload
    def WriteMessage(self, message: str) -> bool: ...
    @overload
    def WriteMessage(self, message1: str, message2: str) -> bool: ...
    @overload
    def WriteMessage(self, message: str, instanceId: Guid) -> bool: ...
    @overload
    def WriteMessage(self, className: str, methodName: str, workflowId: Guid, message: str, parameters: Set(str)) -> None: ...
    @overload
    def WriteMessage(self, className: str, methodName: str, workflowId: Guid, job: Job, message: str, parameters: Set(str)) -> None: ...
    @overload
    def WriteMessage(self, className: str, methodName: str, workflowId: Guid, activityName: str, activityId: Guid, message: str, parameters: Set(str)) -> None: ...
    def WriteScheduledJobCompleteEvent(self, args: Set(Object)) -> None: ...
    def WriteScheduledJobErrorEvent(self, args: Set(Object)) -> None: ...
    def WriteScheduledJobStartEvent(self, args: Set(Object)) -> None: ...


class PowerShellTraceSourceFactory(Object):
    @overload
    def GetTraceSource() -> PowerShellTraceSource: ...
    @overload
    def GetTraceSource(task: PowerShellTraceTask) -> PowerShellTraceSource: ...
    @overload
    def GetTraceSource(task: PowerShellTraceTask, keywords: PowerShellTraceKeywords) -> PowerShellTraceSource: ...


class PowerShellTraceTask:
    #None = 0
    CreateRunspace = 1
    ExecuteCommand = 2
    Serialization = 3
    PowerShellConsoleStartup = 4


class Tracer(EtwActivity):
    def __init__(self): ...
    def AbortingWorkflowExecution(self, workflowId: Guid, reason: str) -> None: ...
    def ActivityExecutionFinished(self, activityName: str) -> None: ...
    def ActivityExecutionQueued(self, workflowId: Guid, activityName: str) -> None: ...
    def ActivityExecutionStarted(self, activityName: str, activityTypeName: str) -> None: ...
    def BeginContainerParentJobExecution(self, containerParentJobInstanceId: Guid) -> None: ...
    def BeginCreateNewJob(self, trackingId: Guid) -> None: ...
    def BeginJobLogic(self, workflowJobJobInstanceId: Guid) -> None: ...
    def BeginProxyChildJobEventHandler(self, proxyChildJobInstanceId: Guid) -> None: ...
    def BeginProxyJobEventHandler(self, proxyJobInstanceId: Guid) -> None: ...
    def BeginProxyJobExecution(self, proxyJobInstanceId: Guid) -> None: ...
    def BeginRunGarbageCollection(self) -> None: ...
    def BeginStartWorkflowApplication(self, trackingId: Guid) -> None: ...
    def BeginWorkflowExecution(self, workflowJobJobInstanceId: Guid) -> None: ...
    def CancellingWorkflowExecution(self, workflowId: Guid) -> None: ...
    def ChildWorkflowJobAddition(self, workflowJobInstanceId: Guid, containerParentJobInstanceId: Guid) -> None: ...
    @overload
    def DebugMessage(self, message: str) -> None: ...
    @overload
    def DebugMessage(self, exception: Exception) -> None: ...
    def EndContainerParentJobExecution(self, containerParentJobInstanceId: Guid) -> None: ...
    def EndCreateNewJob(self, trackingId: Guid) -> None: ...
    def EndJobLogic(self, workflowJobJobInstanceId: Guid) -> None: ...
    def EndpointDisabled(self, endpointName: str, disabledBy: str) -> None: ...
    def EndpointEnabled(self, endpointName: str, enabledBy: str) -> None: ...
    def EndpointModified(self, endpointName: str, modifiedBy: str) -> None: ...
    def EndpointRegistered(self, endpointName: str, endpointType: str, registeredBy: str) -> None: ...
    def EndpointUnregistered(self, endpointName: str, unregisteredBy: str) -> None: ...
    def EndProxyChildJobEventHandler(self, proxyChildJobInstanceId: Guid) -> None: ...
    def EndProxyJobEventHandler(self, proxyJobInstanceId: Guid) -> None: ...
    def EndProxyJobExecution(self, proxyJobInstanceId: Guid) -> None: ...
    def EndRunGarbageCollection(self) -> None: ...
    def EndStartWorkflowApplication(self, trackingId: Guid) -> None: ...
    def EndWorkflowExecution(self, workflowJobJobInstanceId: Guid) -> None: ...
    def ErrorImportingWorkflowFromXaml(self, workflowId: Guid, errorDescription: str) -> None: ...
    def ForcedWorkflowShutdownError(self, workflowId: Guid, errorDescription: str) -> None: ...
    def ForcedWorkflowShutdownFinished(self, workflowId: Guid) -> None: ...
    def ForcedWorkflowShutdownStarted(self, workflowId: Guid) -> None: ...
    def GetExceptionString(exception: Exception) -> str: ...
    def ImportedWorkflowFromXaml(self, workflowId: Guid, xamlFile: str) -> None: ...
    def ImportingWorkflowFromXaml(self, workflowId: Guid, xamlFile: str) -> None: ...
    def JobCreationComplete(self, jobId: Guid, workflowId: Guid) -> None: ...
    def JobError(self, jobId: int, workflowId: Guid, errorDescription: str) -> None: ...
    def JobRemoved(self, parentJobId: Guid, childJobId: Guid, workflowId: Guid) -> None: ...
    def JobRemoveError(self, parentJobId: Guid, childJobId: Guid, workflowId: Guid, error: str) -> None: ...
    def JobStateChanged(self, jobId: int, workflowId: Guid, newState: str, oldState: str) -> None: ...
    def LoadingWorkflowForExecution(self, workflowId: Guid) -> None: ...
    def OutOfProcessRunspaceStarted(self, command: str) -> None: ...
    def ParameterSplattingWasPerformed(self, parameters: str, computers: str) -> None: ...
    def ParentJobCreated(self, jobId: Guid) -> None: ...
    def PersistenceStoreMaxSizeReached(self) -> None: ...
    def PersistingWorkflow(self, workflowId: Guid, persistPath: str) -> None: ...
    def ProxyJobRemoteJobAssociation(self, proxyJobInstanceId: Guid, containerParentJobInstanceId: Guid) -> None: ...
    def RemoveJobStarted(self, jobId: Guid) -> None: ...
    def RunspaceAvailabilityChanged(self, runspaceId: str, availability: str) -> None: ...
    def RunspaceStateChanged(self, runspaceId: str, newState: str, oldState: str) -> None: ...
    def TrackingGuidContainerParentJobCorrelation(self, trackingId: Guid, containerParentJobInstanceId: Guid) -> None: ...
    def UnloadingWorkflow(self, workflowId: Guid) -> None: ...
    def WorkflowActivityExecutionFailed(self, workflowId: Guid, activityName: str, failureDescription: str) -> None: ...
    def WorkflowActivityValidated(self, workflowId: Guid, activityDisplayName: str, activityType: str) -> None: ...
    def WorkflowActivityValidationFailed(self, workflowId: Guid, activityDisplayName: str, activityType: str) -> None: ...
    def WorkflowCleanupPerformed(self, workflowId: Guid) -> None: ...
    def WorkflowDeletedFromDisk(self, workflowId: Guid, path: str) -> None: ...
    def WorkflowEngineStarted(self, endpointName: str) -> None: ...
    def WorkflowExecutionAborted(self, workflowId: Guid) -> None: ...
    def WorkflowExecutionCancelled(self, workflowId: Guid) -> None: ...
    def WorkflowExecutionError(self, workflowId: Guid, errorDescription: str) -> None: ...
    def WorkflowExecutionFinished(self, workflowId: Guid) -> None: ...
    def WorkflowExecutionStarted(self, workflowId: Guid, managedNodes: str) -> None: ...
    def WorkflowJobCreated(self, parentJobId: Guid, childJobId: Guid, childWorkflowId: Guid) -> None: ...
    def WorkflowLoadedForExecution(self, workflowId: Guid) -> None: ...
    def WorkflowLoadedFromDisk(self, workflowId: Guid, path: str) -> None: ...
    def WorkflowManagerCheckpoint(self, checkpointPath: str, configProviderId: str, userName: str, path: str) -> None: ...
    def WorkflowPersisted(self, workflowId: Guid) -> None: ...
    def WorkflowPluginRequestedToShutdown(self, endpointName: str) -> None: ...
    def WorkflowPluginRestarted(self, endpointName: str) -> None: ...
    def WorkflowPluginStarted(self, endpointName: str, user: str, hostingMode: str, protocol: str, configuration: str) -> None: ...
    def WorkflowQuotaViolated(self, endpointName: str, configName: str, allowedValue: str, valueInQuestion: str) -> None: ...
    def WorkflowResumed(self, workflowId: Guid) -> None: ...
    def WorkflowResuming(self, workflowId: Guid) -> None: ...
    def WorkflowRunspacePoolCreated(self, workflowId: Guid, managedNode: str) -> None: ...
    def WorkflowStateChanged(self, workflowId: Guid, newState: str, oldState: str) -> None: ...
    def WorkflowUnloaded(self, workflowId: Guid) -> None: ...
    def WorkflowValidationError(self, workflowId: Guid) -> None: ...
    def WorkflowValidationFinished(self, workflowId: Guid) -> None: ...
    def WorkflowValidationStarted(self, workflowId: Guid) -> None: ...
    def WriteTransferEvent(self, currentActivityId: Guid, parentActivityId: Guid) -> None: ...
