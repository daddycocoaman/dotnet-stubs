__all__ = ['Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Host','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Internal','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','Language','PerformanceData','PerformanceData','PerformanceData','PerformanceData','PerformanceData','PerformanceData','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Provider','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Remoting','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Runspaces','Security','Security','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing','Tracing']
from typing import Tuple, Set, Iterable, List


class RegisterArgumentCompleterCommand(PSCmdlet):
    def __init__(self): ...
    @property
    def CommandName(self) -> Set(str): ...
    @property
    def Native(self) -> SwitchParameter: ...
    @property
    def ParameterName(self) -> str: ...
    @property
    def ScriptBlock(self) -> ScriptBlock: ...
    @CommandName.setter
    def CommandName(self, value: Set(str)) -> None: ...
    @Native.setter
    def Native(self, value: SwitchParameter) -> None: ...
    @ParameterName.setter
    def ParameterName(self, value: str) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: ScriptBlock) -> None: ...
