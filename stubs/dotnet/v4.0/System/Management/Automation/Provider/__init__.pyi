from typing import Tuple, Set, Iterable, List


class CmdletProvider(Object):
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def CurrentPSTransaction(self) -> PSTransactionContext: ...
    @property
    def Exclude(self) -> Collection: ...
    @property
    def Filter(self) -> str: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Host(self) -> PSHost: ...
    @property
    def Include(self) -> Collection: ...
    @property
    def InvokeCommand(self) -> CommandInvocationIntrinsics: ...
    @property
    def InvokeProvider(self) -> ProviderIntrinsics: ...
    @property
    def SessionState(self) -> SessionState: ...
    @property
    def Stopping(self) -> bool: ...
    def GetResourceString(self, baseName: str, resourceId: str) -> str: ...
    @overload
    def ShouldContinue(self, query: str, caption: str) -> bool: ...
    @overload
    def ShouldContinue(self, query: str, caption: str, yesToAll: bool, noToAll: bool) -> Tuple[bool, bool, bool]: ...
    @overload
    def ShouldProcess(self, target: str) -> bool: ...
    @overload
    def ShouldProcess(self, target: str, action: str) -> bool: ...
    @overload
    def ShouldProcess(self, verboseDescription: str, verboseWarning: str, caption: str) -> bool: ...
    @overload
    def ShouldProcess(self, verboseDescription: str, verboseWarning: str, caption: str) -> Tuple[bool, ShouldProcessReason]: ...
    def ThrowTerminatingError(self, errorRecord: ErrorRecord) -> None: ...
    def TransactionAvailable(self) -> bool: ...
    def WriteDebug(self, text: str) -> None: ...
    def WriteError(self, errorRecord: ErrorRecord) -> None: ...
    @overload
    def WriteInformation(self, record: InformationRecord) -> None: ...
    @overload
    def WriteInformation(self, messageData: Object, tags: Set(str)) -> None: ...
    def WriteItemObject(self, item: Object, path: str, isContainer: bool) -> None: ...
    def WriteProgress(self, progressRecord: ProgressRecord) -> None: ...
    def WritePropertyObject(self, propertyValue: Object, path: str) -> None: ...
    def WriteSecurityDescriptorObject(self, securityDescriptor: ObjectSecurity, path: str) -> None: ...
    def WriteVerbose(self, text: str) -> None: ...
    def WriteWarning(self, text: str) -> None: ...


class CmdletProviderAttribute(Attribute):
    def __init__(self, providerName: str, providerCapabilities: ProviderCapabilities): ...
    @property
    def ProviderCapabilities(self) -> ProviderCapabilities: ...
    @property
    def ProviderName(self) -> str: ...


class ContainerCmdletProvider(ItemCmdletProvider):
    pass


class DriveCmdletProvider(CmdletProvider):
    pass


class ICmdletProviderSupportsHelp:
    def GetHelpMaml(self, helpItemName: str, path: str) -> str: ...


class IContentCmdletProvider:
    def ClearContent(self, path: str) -> None: ...
    def ClearContentDynamicParameters(self, path: str) -> Object: ...
    def GetContentReader(self, path: str) -> IContentReader: ...
    def GetContentReaderDynamicParameters(self, path: str) -> Object: ...
    def GetContentWriter(self, path: str) -> IContentWriter: ...
    def GetContentWriterDynamicParameters(self, path: str) -> Object: ...


class IContentReader:
    def Close(self) -> None: ...
    def Read(self, readCount: Int64) -> IList: ...
    def Seek(self, offset: Int64, origin: SeekOrigin) -> None: ...


class IContentWriter:
    def Close(self) -> None: ...
    def Seek(self, offset: Int64, origin: SeekOrigin) -> None: ...
    def Write(self, content: IList) -> IList: ...


class IDynamicPropertyCmdletProvider:
    def CopyProperty(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> None: ...
    def CopyPropertyDynamicParameters(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> Object: ...
    def MoveProperty(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> None: ...
    def MovePropertyDynamicParameters(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> Object: ...
    def NewProperty(self, path: str, propertyName: str, propertyTypeName: str, value: Object) -> None: ...
    def NewPropertyDynamicParameters(self, path: str, propertyName: str, propertyTypeName: str, value: Object) -> Object: ...
    def RemoveProperty(self, path: str, propertyName: str) -> None: ...
    def RemovePropertyDynamicParameters(self, path: str, propertyName: str) -> Object: ...
    def RenameProperty(self, path: str, sourceProperty: str, destinationProperty: str) -> None: ...
    def RenamePropertyDynamicParameters(self, path: str, sourceProperty: str, destinationProperty: str) -> Object: ...


class IPropertyCmdletProvider:
    def ClearProperty(self, path: str, propertyToClear: Collection) -> None: ...
    def ClearPropertyDynamicParameters(self, path: str, propertyToClear: Collection) -> Object: ...
    def GetProperty(self, path: str, providerSpecificPickList: Collection) -> None: ...
    def GetPropertyDynamicParameters(self, path: str, providerSpecificPickList: Collection) -> Object: ...
    def SetProperty(self, path: str, propertyValue: PSObject) -> None: ...
    def SetPropertyDynamicParameters(self, path: str, propertyValue: PSObject) -> Object: ...


class ISecurityDescriptorCmdletProvider:
    def GetSecurityDescriptor(self, path: str, includeSections: AccessControlSections) -> None: ...
    def NewSecurityDescriptorFromPath(self, path: str, includeSections: AccessControlSections) -> ObjectSecurity: ...
    def NewSecurityDescriptorOfType(self, type: str, includeSections: AccessControlSections) -> ObjectSecurity: ...
    def SetSecurityDescriptor(self, path: str, securityDescriptor: ObjectSecurity) -> None: ...


class ItemCmdletProvider(DriveCmdletProvider):
    pass


class NavigationCmdletProvider(ContainerCmdletProvider):
    pass


class ProviderCapabilities:
    #None = 0
    Include = 1
    Exclude = 2
    Filter = 4
    ExpandWildcards = 8
    ShouldProcess = 16
    Credentials = 32
    Transactions = 64
