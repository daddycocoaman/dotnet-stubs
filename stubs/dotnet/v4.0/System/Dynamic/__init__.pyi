from typing import Tuple, Set, Iterable, List


class BinaryOperationBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackBinaryOperation(self, target: DynamicMetaObject, arg: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackBinaryOperation(self, target: DynamicMetaObject, arg: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Operation(self) -> ExpressionType: ...
    @property
    def ReturnType(self) -> Type: ...


class BindingRestrictions(Object):
    def Combine(contributingObjects: List[DynamicMetaObject]) -> BindingRestrictions: ...
    def GetExpressionRestriction(expression: Expression) -> BindingRestrictions: ...
    def GetInstanceRestriction(expression: Expression, instance: Object) -> BindingRestrictions: ...
    def GetTypeRestriction(expression: Expression, type: Type) -> BindingRestrictions: ...
    def Merge(self, restrictions: BindingRestrictions) -> BindingRestrictions: ...
    def ToExpression(self) -> Expression: ...


class CallInfo(Object):
    @overload
    def __init__(self, argCount: int, argNames: Set(str)): ...
    @overload
    def __init__(self, argCount: int, argNames: Iterable[str]): ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def ArgumentCount(self) -> int: ...
    @property
    def ArgumentNames(self) -> ReadOnlyCollection: ...
    def GetHashCode(self) -> int: ...


class ConvertBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackConvert(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackConvert(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Explicit(self) -> bool: ...
    @property
    def ReturnType(self) -> Type: ...
    @property
    def Type(self) -> Type: ...


class CreateInstanceBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackCreateInstance(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackCreateInstance(self, target: DynamicMetaObject, args: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> Type: ...


class DeleteIndexBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> Type: ...


class DeleteMemberBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteMember(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteMember(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> Type: ...


class DynamicMetaObject(Object):
    @overload
    def __init__(self, expression: Expression, restrictions: BindingRestrictions): ...
    @overload
    def __init__(self, expression: Expression, restrictions: BindingRestrictions, value: Object): ...
    def BindBinaryOperation(self, binder: BinaryOperationBinder, arg: DynamicMetaObject) -> DynamicMetaObject: ...
    def BindConvert(self, binder: ConvertBinder) -> DynamicMetaObject: ...
    def BindCreateInstance(self, binder: CreateInstanceBinder, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def BindDeleteIndex(self, binder: DeleteIndexBinder, indexes: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def BindDeleteMember(self, binder: DeleteMemberBinder) -> DynamicMetaObject: ...
    def BindGetIndex(self, binder: GetIndexBinder, indexes: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def BindGetMember(self, binder: GetMemberBinder) -> DynamicMetaObject: ...
    def BindInvoke(self, binder: InvokeBinder, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def BindInvokeMember(self, binder: InvokeMemberBinder, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def BindSetIndex(self, binder: SetIndexBinder, indexes: Set(DynamicMetaObject), value: DynamicMetaObject) -> DynamicMetaObject: ...
    def BindSetMember(self, binder: SetMemberBinder, value: DynamicMetaObject) -> DynamicMetaObject: ...
    def BindUnaryOperation(self, binder: UnaryOperationBinder) -> DynamicMetaObject: ...
    def Create(value: Object, expression: Expression) -> DynamicMetaObject: ...
    @property
    def Expression(self) -> Expression: ...
    @property
    def HasValue(self) -> bool: ...
    @property
    def LimitType(self) -> Type: ...
    @property
    def Restrictions(self) -> BindingRestrictions: ...
    @property
    def RuntimeType(self) -> Type: ...
    @property
    def Value(self) -> Object: ...
    def GetDynamicMemberNames(self) -> Iterable[str]: ...


class DynamicMetaObjectBinder(CallSiteBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def Bind(self, args: Set(Object), parameters: ReadOnlyCollection, returnLabel: LabelTarget) -> Expression: ...
    @overload
    def Defer(self, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def Defer(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @property
    def ReturnType(self) -> Type: ...
    def GetUpdateExpression(self, type: Type) -> Expression: ...


class DynamicObject(Object):
    def GetDynamicMemberNames(self) -> Iterable[str]: ...
    def GetMetaObject(self, parameter: Expression) -> DynamicMetaObject: ...
    def TryBinaryOperation(self, binder: BinaryOperationBinder, arg: Object) -> Tuple[bool, Object]: ...
    def TryConvert(self, binder: ConvertBinder) -> Tuple[bool, Object]: ...
    def TryCreateInstance(self, binder: CreateInstanceBinder, args: Set(Object)) -> Tuple[bool, Object]: ...
    def TryDeleteIndex(self, binder: DeleteIndexBinder, indexes: Set(Object)) -> bool: ...
    def TryDeleteMember(self, binder: DeleteMemberBinder) -> bool: ...
    def TryGetIndex(self, binder: GetIndexBinder, indexes: Set(Object)) -> Tuple[bool, Object]: ...
    def TryGetMember(self, binder: GetMemberBinder) -> Tuple[bool, Object]: ...
    def TryInvoke(self, binder: InvokeBinder, args: Set(Object)) -> Tuple[bool, Object]: ...
    def TryInvokeMember(self, binder: InvokeMemberBinder, args: Set(Object)) -> Tuple[bool, Object]: ...
    def TrySetIndex(self, binder: SetIndexBinder, indexes: Set(Object), value: Object) -> bool: ...
    def TrySetMember(self, binder: SetMemberBinder, value: Object) -> bool: ...
    def TryUnaryOperation(self, binder: UnaryOperationBinder) -> Tuple[bool, Object]: ...


class ExpandoObject(Object):
    def __init__(self): ...


class GetIndexBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackGetIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackGetIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> Type: ...


class GetMemberBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackGetMember(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackGetMember(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> Type: ...


class IDynamicMetaObjectProvider:
    def GetMetaObject(self, parameter: Expression) -> DynamicMetaObject: ...


class IInvokeOnGetBinder:
    @property
    def InvokeOnGet(self) -> bool: ...


class InvokeBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackInvoke(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackInvoke(self, target: DynamicMetaObject, args: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> Type: ...


class InvokeMemberBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    def FallbackInvoke(self, target: DynamicMetaObject, args: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackInvokeMember(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackInvokeMember(self, target: DynamicMetaObject, args: Set(DynamicMetaObject), errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> Type: ...


class SetIndexBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackSetIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject), value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackSetIndex(self, target: DynamicMetaObject, indexes: Set(DynamicMetaObject), value: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> Type: ...


class SetMemberBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackSetMember(self, target: DynamicMetaObject, value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackSetMember(self, target: DynamicMetaObject, value: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> Type: ...


class UnaryOperationBinder(DynamicMetaObjectBinder):
    @overload
    def Bind(self, target: DynamicMetaObject, args: Set(DynamicMetaObject)) -> DynamicMetaObject: ...
    @overload
    def FallbackUnaryOperation(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackUnaryOperation(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Operation(self) -> ExpressionType: ...
    @property
    def ReturnType(self) -> Type: ...
