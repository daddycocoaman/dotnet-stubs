from typing import Tuple, Set, Iterable, List


class LogConverter(TypeConverter):
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ITypeDescriptorContext, sourceType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object) -> Object: ...
    @overload
    def GetStandardValues(self, context: ITypeDescriptorContext) -> StandardValuesCollection: ...
    @overload
    def GetStandardValuesSupported(self, context: ITypeDescriptorContext) -> bool: ...


class ProcessDesigner(ComponentDesigner):
    def __init__(self): ...


class ProcessModuleDesigner(ComponentDesigner):
    def __init__(self): ...


class ProcessThreadDesigner(ComponentDesigner):
    def __init__(self): ...
