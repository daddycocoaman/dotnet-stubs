from typing import Tuple, Set, Iterable, List


class AlgorithmIdentifier(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, oid: Oid): ...
    @overload
    def __init__(self, oid: Oid, keyLength: int): ...
    @property
    def KeyLength(self) -> int: ...
    @property
    def Oid(self) -> Oid: ...
    @property
    def Parameters(self) -> Set(Byte): ...
    @KeyLength.setter
    def KeyLength(self, value: int) -> None: ...
    @Oid.setter
    def Oid(self, value: Oid) -> None: ...
    @Parameters.setter
    def Parameters(self, value: Set(Byte)) -> None: ...


class CmsRecipient(Object):
    @overload
    def __init__(self, certificate: X509Certificate2): ...
    @overload
    def __init__(self, recipientIdentifierType: SubjectIdentifierType, certificate: X509Certificate2): ...
    @property
    def Certificate(self) -> X509Certificate2: ...
    @property
    def RecipientIdentifierType(self) -> SubjectIdentifierType: ...


class CmsRecipientCollection(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, recipient: CmsRecipient): ...
    @overload
    def __init__(self, recipientIdentifierType: SubjectIdentifierType, certificates: X509Certificate2Collection): ...
    def Add(self, recipient: CmsRecipient) -> int: ...
    @overload
    def CopyTo(self, array: Array, index: int) -> None: ...
    @overload
    def CopyTo(self, array: Set(CmsRecipient), index: int) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsSynchronized(self) -> bool: ...
    @property
    def Item(self, index: int) -> CmsRecipient: ...
    @property
    def SyncRoot(self) -> Object: ...
    def GetEnumerator(self) -> CmsRecipientEnumerator: ...
    def Remove(self, recipient: CmsRecipient) -> None: ...


class CmsRecipientEnumerator(Object):
    @property
    def Current(self) -> CmsRecipient: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class CmsSigner(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, signerIdentifierType: SubjectIdentifierType): ...
    @overload
    def __init__(self, certificate: X509Certificate2): ...
    @overload
    def __init__(self, parameters: CspParameters): ...
    @overload
    def __init__(self, signerIdentifierType: SubjectIdentifierType, certificate: X509Certificate2): ...
    @property
    def Certificate(self) -> X509Certificate2: ...
    @property
    def Certificates(self) -> X509Certificate2Collection: ...
    @property
    def DigestAlgorithm(self) -> Oid: ...
    @property
    def IncludeOption(self) -> X509IncludeOption: ...
    @property
    def SignedAttributes(self) -> CryptographicAttributeObjectCollection: ...
    @property
    def SignerIdentifierType(self) -> SubjectIdentifierType: ...
    @property
    def UnsignedAttributes(self) -> CryptographicAttributeObjectCollection: ...
    @Certificate.setter
    def Certificate(self, value: X509Certificate2) -> None: ...
    @DigestAlgorithm.setter
    def DigestAlgorithm(self, value: Oid) -> None: ...
    @IncludeOption.setter
    def IncludeOption(self, value: X509IncludeOption) -> None: ...
    @SignerIdentifierType.setter
    def SignerIdentifierType(self, value: SubjectIdentifierType) -> None: ...


class ContentInfo(Object):
    @overload
    def __init__(self, content: Set(Byte)): ...
    @overload
    def __init__(self, contentType: Oid, content: Set(Byte)): ...
    @property
    def Content(self) -> Set(Byte): ...
    @property
    def ContentType(self) -> Oid: ...
    def GetContentType(encodedMessage: Set(Byte)) -> Oid: ...


class EnvelopedCms(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, contentInfo: ContentInfo): ...
    @overload
    def __init__(self, recipientIdentifierType: SubjectIdentifierType, contentInfo: ContentInfo): ...
    @overload
    def __init__(self, contentInfo: ContentInfo, encryptionAlgorithm: AlgorithmIdentifier): ...
    @overload
    def __init__(self, recipientIdentifierType: SubjectIdentifierType, contentInfo: ContentInfo, encryptionAlgorithm: AlgorithmIdentifier): ...
    def Decode(self, encodedMessage: Set(Byte)) -> None: ...
    @overload
    def Decrypt(self) -> None: ...
    @overload
    def Decrypt(self, recipientInfo: RecipientInfo) -> None: ...
    @overload
    def Decrypt(self, extraStore: X509Certificate2Collection) -> None: ...
    @overload
    def Decrypt(self, recipientInfo: RecipientInfo, extraStore: X509Certificate2Collection) -> None: ...
    def Encode(self) -> Set(Byte): ...
    @overload
    def Encrypt(self) -> None: ...
    @overload
    def Encrypt(self, recipient: CmsRecipient) -> None: ...
    @overload
    def Encrypt(self, recipients: CmsRecipientCollection) -> None: ...
    @property
    def Certificates(self) -> X509Certificate2Collection: ...
    @property
    def ContentEncryptionAlgorithm(self) -> AlgorithmIdentifier: ...
    @property
    def ContentInfo(self) -> ContentInfo: ...
    @property
    def RecipientInfos(self) -> RecipientInfoCollection: ...
    @property
    def UnprotectedAttributes(self) -> CryptographicAttributeObjectCollection: ...
    @property
    def Version(self) -> int: ...


class KeyAgreeKeyChoice:
    Unknown = 0
    EphemeralKey = 1
    StaticKey = 2


class KeyAgreeRecipientInfo(RecipientInfo):
    @property
    def Date(self) -> DateTime: ...
    @property
    def EncryptedKey(self) -> Set(Byte): ...
    @property
    def KeyEncryptionAlgorithm(self) -> AlgorithmIdentifier: ...
    @property
    def OriginatorIdentifierOrKey(self) -> SubjectIdentifierOrKey: ...
    @property
    def OtherKeyAttribute(self) -> CryptographicAttributeObject: ...
    @property
    def RecipientIdentifier(self) -> SubjectIdentifier: ...
    @property
    def Version(self) -> int: ...


class KeyTransRecipientInfo(RecipientInfo):
    @property
    def EncryptedKey(self) -> Set(Byte): ...
    @property
    def KeyEncryptionAlgorithm(self) -> AlgorithmIdentifier: ...
    @property
    def RecipientIdentifier(self) -> SubjectIdentifier: ...
    @property
    def Version(self) -> int: ...


class Pkcs9AttributeObject(AsnEncodedData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, asnEncodedData: AsnEncodedData): ...
    @overload
    def __init__(self, oid: str, encodedData: Set(Byte)): ...
    @overload
    def __init__(self, oid: Oid, encodedData: Set(Byte)): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def Oid(self) -> Oid: ...


class Pkcs9ContentType(Pkcs9AttributeObject):
    def __init__(self): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def ContentType(self) -> Oid: ...


class Pkcs9DocumentDescription(Pkcs9AttributeObject):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, documentDescription: str): ...
    @overload
    def __init__(self, encodedDocumentDescription: Set(Byte)): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def DocumentDescription(self) -> str: ...


class Pkcs9DocumentName(Pkcs9AttributeObject):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, documentName: str): ...
    @overload
    def __init__(self, encodedDocumentName: Set(Byte)): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def DocumentName(self) -> str: ...


class Pkcs9MessageDigest(Pkcs9AttributeObject):
    def __init__(self): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def MessageDigest(self) -> Set(Byte): ...


class Pkcs9SigningTime(Pkcs9AttributeObject):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, signingTime: DateTime): ...
    @overload
    def __init__(self, encodedSigningTime: Set(Byte)): ...
    def CopyFrom(self, asnEncodedData: AsnEncodedData) -> None: ...
    @property
    def SigningTime(self) -> DateTime: ...


class PublicKeyInfo(Object):
    @property
    def Algorithm(self) -> AlgorithmIdentifier: ...
    @property
    def KeyValue(self) -> Set(Byte): ...


class RecipientInfo(Object):
    @property
    def EncryptedKey(self) -> Set(Byte): ...
    @property
    def KeyEncryptionAlgorithm(self) -> AlgorithmIdentifier: ...
    @property
    def RecipientIdentifier(self) -> SubjectIdentifier: ...
    @property
    def Type(self) -> RecipientInfoType: ...
    @property
    def Version(self) -> int: ...


class RecipientInfoCollection(Object):
    @overload
    def CopyTo(self, array: Array, index: int) -> None: ...
    @overload
    def CopyTo(self, array: Set(RecipientInfo), index: int) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsSynchronized(self) -> bool: ...
    @property
    def Item(self, index: int) -> RecipientInfo: ...
    @property
    def SyncRoot(self) -> Object: ...
    def GetEnumerator(self) -> RecipientInfoEnumerator: ...


class RecipientInfoEnumerator(Object):
    @property
    def Current(self) -> RecipientInfo: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class RecipientInfoType:
    Unknown = 0
    KeyTransport = 1
    KeyAgreement = 2


class SignedCms(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, signerIdentifierType: SubjectIdentifierType): ...
    @overload
    def __init__(self, contentInfo: ContentInfo): ...
    @overload
    def __init__(self, signerIdentifierType: SubjectIdentifierType, contentInfo: ContentInfo): ...
    @overload
    def __init__(self, contentInfo: ContentInfo, detached: bool): ...
    @overload
    def __init__(self, signerIdentifierType: SubjectIdentifierType, contentInfo: ContentInfo, detached: bool): ...
    def CheckHash(self) -> None: ...
    @overload
    def CheckSignature(self, verifySignatureOnly: bool) -> None: ...
    @overload
    def CheckSignature(self, extraStore: X509Certificate2Collection, verifySignatureOnly: bool) -> None: ...
    @overload
    def ComputeSignature(self) -> None: ...
    @overload
    def ComputeSignature(self, signer: CmsSigner) -> None: ...
    @overload
    def ComputeSignature(self, signer: CmsSigner, silent: bool) -> None: ...
    def Decode(self, encodedMessage: Set(Byte)) -> None: ...
    def Encode(self) -> Set(Byte): ...
    @property
    def Certificates(self) -> X509Certificate2Collection: ...
    @property
    def ContentInfo(self) -> ContentInfo: ...
    @property
    def Detached(self) -> bool: ...
    @property
    def SignerInfos(self) -> SignerInfoCollection: ...
    @property
    def Version(self) -> int: ...
    @overload
    def RemoveSignature(self, index: int) -> None: ...
    @overload
    def RemoveSignature(self, signerInfo: SignerInfo) -> None: ...


class SignerInfo(Object):
    def CheckHash(self) -> None: ...
    @overload
    def CheckSignature(self, verifySignatureOnly: bool) -> None: ...
    @overload
    def CheckSignature(self, extraStore: X509Certificate2Collection, verifySignatureOnly: bool) -> None: ...
    @overload
    def ComputeCounterSignature(self) -> None: ...
    @overload
    def ComputeCounterSignature(self, signer: CmsSigner) -> None: ...
    @property
    def Certificate(self) -> X509Certificate2: ...
    @property
    def CounterSignerInfos(self) -> SignerInfoCollection: ...
    @property
    def DigestAlgorithm(self) -> Oid: ...
    @property
    def SignatureAlgorithm(self) -> Oid: ...
    @property
    def SignedAttributes(self) -> CryptographicAttributeObjectCollection: ...
    @property
    def SignerIdentifier(self) -> SubjectIdentifier: ...
    @property
    def UnsignedAttributes(self) -> CryptographicAttributeObjectCollection: ...
    @property
    def Version(self) -> int: ...
    def GetSignature(self) -> Set(Byte): ...
    @overload
    def RemoveCounterSignature(self, counterSignerInfo: SignerInfo) -> None: ...
    @overload
    def RemoveCounterSignature(self, index: int) -> None: ...


class SignerInfoCollection(Object):
    @overload
    def CopyTo(self, array: Array, index: int) -> None: ...
    @overload
    def CopyTo(self, array: Set(SignerInfo), index: int) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsSynchronized(self) -> bool: ...
    @property
    def Item(self, index: int) -> SignerInfo: ...
    @property
    def SyncRoot(self) -> Object: ...
    def GetEnumerator(self) -> SignerInfoEnumerator: ...


class SignerInfoEnumerator(Object):
    @property
    def Current(self) -> SignerInfo: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class SubjectIdentifier(Object):
    @property
    def Type(self) -> SubjectIdentifierType: ...
    @property
    def Value(self) -> Object: ...


class SubjectIdentifierOrKey(Object):
    @property
    def Type(self) -> SubjectIdentifierOrKeyType: ...
    @property
    def Value(self) -> Object: ...


class SubjectIdentifierOrKeyType:
    Unknown = 0
    IssuerAndSerialNumber = 1
    SubjectKeyIdentifier = 2
    PublicKeyInfo = 3


class SubjectIdentifierType:
    Unknown = 0
    IssuerAndSerialNumber = 1
    SubjectKeyIdentifier = 2
    NoSignature = 3
