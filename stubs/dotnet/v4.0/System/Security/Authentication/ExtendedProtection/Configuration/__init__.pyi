from typing import Tuple, Set, Iterable, List


class ExtendedProtectionPolicyElement(ConfigurationElement):
    def __init__(self): ...
    def BuildPolicy(self) -> ExtendedProtectionPolicy: ...
    @property
    def CustomServiceNames(self) -> ServiceNameElementCollection: ...
    @property
    def PolicyEnforcement(self) -> PolicyEnforcement: ...
    @property
    def ProtectionScenario(self) -> ProtectionScenario: ...
    @PolicyEnforcement.setter
    def PolicyEnforcement(self, value: PolicyEnforcement) -> None: ...
    @ProtectionScenario.setter
    def ProtectionScenario(self, value: ProtectionScenario) -> None: ...


class ServiceNameElement(ConfigurationElement):
    def __init__(self): ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class ServiceNameElementCollection(ConfigurationElementCollection):
    def __init__(self): ...
    def Add(self, element: ServiceNameElement) -> None: ...
    def Clear(self) -> None: ...
    @property
    def Item(self, index: int) -> ServiceNameElement: ...
    @property
    def Item(self, name: str) -> ServiceNameElement: ...
    def IndexOf(self, element: ServiceNameElement) -> int: ...
    @overload
    def Remove(self, name: str) -> None: ...
    @overload
    def Remove(self, element: ServiceNameElement) -> None: ...
    def RemoveAt(self, index: int) -> None: ...
    @Item.setter
    def Item(self, index: int, value: ServiceNameElement) -> None: ...
    @Item.setter
    def Item(self, name: str, value: ServiceNameElement) -> None: ...
