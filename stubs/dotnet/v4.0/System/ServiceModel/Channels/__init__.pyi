from typing import Tuple, Set, Iterable, List


class JavascriptCallbackResponseMessageProperty(Object):
    def __init__(self): ...
    @property
    def CallbackFunctionName(self) -> str: ...
    @property
    def Name() -> str: ...
    @property
    def StatusCode(self) -> Nullable: ...
    @CallbackFunctionName.setter
    def CallbackFunctionName(self, value: str) -> None: ...
    @StatusCode.setter
    def StatusCode(self, value: Nullable) -> None: ...


class StreamBodyWriter(BodyWriter):
    pass


class WebBodyFormatMessageProperty(Object):
    def __init__(self, format: WebContentFormat): ...
    def CreateCopy(self) -> IMessageProperty: ...
    @property
    def Format(self) -> WebContentFormat: ...
    def ToString(self) -> str: ...


class WebContentFormat:
    Default = 0
    Xml = 1
    Json = 2
    Raw = 3


class WebContentTypeMapper(Object):
    def GetMessageFormatForContentType(self, contentType: str) -> WebContentFormat: ...


class WebMessageEncodingBindingElement(MessageEncodingBindingElement):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, writeEncoding: Encoding): ...
    def BuildChannelFactory(self, context: BindingContext) -> IChannelFactory: ...
    def BuildChannelListener(self, context: BindingContext) -> IChannelListener: ...
    def CanBuildChannelListener(self, context: BindingContext) -> bool: ...
    def Clone(self) -> BindingElement: ...
    def CreateMessageEncoderFactory(self) -> MessageEncoderFactory: ...
    @property
    def ContentTypeMapper(self) -> WebContentTypeMapper: ...
    @property
    def CrossDomainScriptAccessEnabled(self) -> bool: ...
    @property
    def MaxReadPoolSize(self) -> int: ...
    @property
    def MaxWritePoolSize(self) -> int: ...
    @property
    def MessageVersion(self) -> MessageVersion: ...
    @property
    def ReaderQuotas(self) -> XmlDictionaryReaderQuotas: ...
    @property
    def WriteEncoding(self) -> Encoding: ...
    def GetProperty(self, context: BindingContext) -> T: ...
    @ContentTypeMapper.setter
    def ContentTypeMapper(self, value: WebContentTypeMapper) -> None: ...
    @CrossDomainScriptAccessEnabled.setter
    def CrossDomainScriptAccessEnabled(self, value: bool) -> None: ...
    @MaxReadPoolSize.setter
    def MaxReadPoolSize(self, value: int) -> None: ...
    @MaxWritePoolSize.setter
    def MaxWritePoolSize(self, value: int) -> None: ...
    @MessageVersion.setter
    def MessageVersion(self, value: MessageVersion) -> None: ...
    @WriteEncoding.setter
    def WriteEncoding(self, value: Encoding) -> None: ...
