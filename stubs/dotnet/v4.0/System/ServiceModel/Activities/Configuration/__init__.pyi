from typing import Tuple, Set, Iterable, List


class BufferedReceiveElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def BehaviorType(self) -> Type: ...
    @property
    def MaxPendingMessagesPerChannel(self) -> int: ...
    @MaxPendingMessagesPerChannel.setter
    def MaxPendingMessagesPerChannel(self, value: int) -> None: ...


class ChannelSettingsElement(ConfigurationElement):
    def __init__(self): ...
    @property
    def IdleTimeout(self) -> TimeSpan: ...
    @property
    def LeaseTimeout(self) -> TimeSpan: ...
    @property
    def MaxItemsInCache(self) -> int: ...
    @IdleTimeout.setter
    def IdleTimeout(self, value: TimeSpan) -> None: ...
    @LeaseTimeout.setter
    def LeaseTimeout(self, value: TimeSpan) -> None: ...
    @MaxItemsInCache.setter
    def MaxItemsInCache(self, value: int) -> None: ...


class EtwTrackingBehaviorElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def BehaviorType(self) -> Type: ...
    @property
    def ProfileName(self) -> str: ...
    @ProfileName.setter
    def ProfileName(self, value: str) -> None: ...


class FactorySettingsElement(ConfigurationElement):
    def __init__(self): ...
    @property
    def IdleTimeout(self) -> TimeSpan: ...
    @property
    def LeaseTimeout(self) -> TimeSpan: ...
    @property
    def MaxItemsInCache(self) -> int: ...
    @IdleTimeout.setter
    def IdleTimeout(self, value: TimeSpan) -> None: ...
    @LeaseTimeout.setter
    def LeaseTimeout(self, value: TimeSpan) -> None: ...
    @MaxItemsInCache.setter
    def MaxItemsInCache(self, value: int) -> None: ...


class SendMessageChannelCacheElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def AllowUnsafeCaching(self) -> bool: ...
    @property
    def BehaviorType(self) -> Type: ...
    @property
    def ChannelSettings(self) -> ChannelSettingsElement: ...
    @property
    def FactorySettings(self) -> FactorySettingsElement: ...
    @AllowUnsafeCaching.setter
    def AllowUnsafeCaching(self, value: bool) -> None: ...


class ServiceModelActivitiesSectionGroup(ConfigurationSectionGroup):
    def __init__(self): ...
    @property
    def WorkflowHostingOptionsSection(self) -> WorkflowHostingOptionsSection: ...
    def GetSectionGroup(config: Configuration) -> ServiceModelActivitiesSectionGroup: ...


class SqlWorkflowInstanceStoreElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def BehaviorType(self) -> Type: ...
    @property
    def ConnectionString(self) -> str: ...
    @property
    def ConnectionStringName(self) -> str: ...
    @property
    def HostLockRenewalPeriod(self) -> TimeSpan: ...
    @property
    def InstanceCompletionAction(self) -> InstanceCompletionAction: ...
    @property
    def InstanceEncodingOption(self) -> InstanceEncodingOption: ...
    @property
    def InstanceLockedExceptionAction(self) -> InstanceLockedExceptionAction: ...
    @property
    def MaxConnectionRetries(self) -> int: ...
    @property
    def RunnableInstancesDetectionPeriod(self) -> TimeSpan: ...
    @ConnectionString.setter
    def ConnectionString(self, value: str) -> None: ...
    @ConnectionStringName.setter
    def ConnectionStringName(self, value: str) -> None: ...
    @HostLockRenewalPeriod.setter
    def HostLockRenewalPeriod(self, value: TimeSpan) -> None: ...
    @InstanceCompletionAction.setter
    def InstanceCompletionAction(self, value: InstanceCompletionAction) -> None: ...
    @InstanceEncodingOption.setter
    def InstanceEncodingOption(self, value: InstanceEncodingOption) -> None: ...
    @InstanceLockedExceptionAction.setter
    def InstanceLockedExceptionAction(self, value: InstanceLockedExceptionAction) -> None: ...
    @MaxConnectionRetries.setter
    def MaxConnectionRetries(self, value: int) -> None: ...
    @RunnableInstancesDetectionPeriod.setter
    def RunnableInstancesDetectionPeriod(self, value: TimeSpan) -> None: ...


class WorkflowControlEndpointCollectionElement:
    def __init__(self): ...


class WorkflowControlEndpointElement(StandardEndpointElement):
    def __init__(self): ...
    @property
    def Address(self) -> Uri: ...
    @property
    def Binding(self) -> str: ...
    @property
    def BindingConfiguration(self) -> str: ...
    @Address.setter
    def Address(self, value: Uri) -> None: ...
    @Binding.setter
    def Binding(self, value: str) -> None: ...
    @BindingConfiguration.setter
    def BindingConfiguration(self, value: str) -> None: ...


class WorkflowHostingOptionsSection(ConfigurationSection):
    def __init__(self): ...
    @property
    def OverrideSiteName(self) -> bool: ...
    @OverrideSiteName.setter
    def OverrideSiteName(self, value: bool) -> None: ...


class WorkflowIdleElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def BehaviorType(self) -> Type: ...
    @property
    def TimeToPersist(self) -> TimeSpan: ...
    @property
    def TimeToUnload(self) -> TimeSpan: ...
    @TimeToPersist.setter
    def TimeToPersist(self, value: TimeSpan) -> None: ...
    @TimeToUnload.setter
    def TimeToUnload(self, value: TimeSpan) -> None: ...


class WorkflowInstanceManagementElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def AuthorizedWindowsGroup(self) -> str: ...
    @property
    def BehaviorType(self) -> Type: ...
    @AuthorizedWindowsGroup.setter
    def AuthorizedWindowsGroup(self, value: str) -> None: ...


class WorkflowUnhandledExceptionElement(BehaviorExtensionElement):
    def __init__(self): ...
    @property
    def Action(self) -> WorkflowUnhandledExceptionAction: ...
    @property
    def BehaviorType(self) -> Type: ...
    @Action.setter
    def Action(self, value: WorkflowUnhandledExceptionAction) -> None: ...
