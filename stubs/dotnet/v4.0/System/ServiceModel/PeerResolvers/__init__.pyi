from typing import Tuple, Set, Iterable, List


class IPeerResolverContract:
    def GetServiceSettings(self) -> ServiceSettingsResponseInfo: ...
    def Refresh(self, refreshInfo: RefreshInfo) -> RefreshResponseInfo: ...
    def Register(self, registerInfo: RegisterInfo) -> RegisterResponseInfo: ...
    def Resolve(self, resolveInfo: ResolveInfo) -> ResolveResponseInfo: ...
    def Unregister(self, unregisterInfo: UnregisterInfo) -> None: ...
    def Update(self, updateInfo: UpdateInfo) -> RegisterResponseInfo: ...


class PeerCustomResolverSettings(Object):
    def __init__(self): ...
    @property
    def Address(self) -> EndpointAddress: ...
    @property
    def Binding(self) -> Binding: ...
    @property
    def IsBindingSpecified(self) -> bool: ...
    @property
    def Resolver(self) -> PeerResolver: ...
    @Address.setter
    def Address(self, value: EndpointAddress) -> None: ...
    @Binding.setter
    def Binding(self, value: Binding) -> None: ...
    @Resolver.setter
    def Resolver(self, value: PeerResolver) -> None: ...


class PeerReferralPolicy:
    Service = 0
    Share = 1
    DoNotShare = 2


class PeerResolverMode:
    Auto = 0
    Pnrp = 1
    Custom = 2


class PeerResolverSettings(Object):
    def __init__(self): ...
    @property
    def Custom(self) -> PeerCustomResolverSettings: ...
    @property
    def Mode(self) -> PeerResolverMode: ...
    @property
    def ReferralPolicy(self) -> PeerReferralPolicy: ...
    @Mode.setter
    def Mode(self, value: PeerResolverMode) -> None: ...
    @ReferralPolicy.setter
    def ReferralPolicy(self, value: PeerReferralPolicy) -> None: ...


class RefreshInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, meshId: str, regId: Guid): ...
    @property
    def MeshId(self) -> str: ...
    @property
    def RegistrationId(self) -> Guid: ...
    def HasBody(self) -> bool: ...


class RefreshResponseInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, registrationLifetime: TimeSpan, result: RefreshResult): ...
    @property
    def RegistrationLifetime(self) -> TimeSpan: ...
    @property
    def Result(self) -> RefreshResult: ...
    def HasBody(self) -> bool: ...
    @RegistrationLifetime.setter
    def RegistrationLifetime(self, value: TimeSpan) -> None: ...
    @Result.setter
    def Result(self, value: RefreshResult) -> None: ...


class RefreshResult:
    Success = 0
    RegistrationNotFound = 1


class RegisterInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, client: Guid, meshId: str, address: PeerNodeAddress): ...
    @property
    def ClientId(self) -> Guid: ...
    @property
    def MeshId(self) -> str: ...
    @property
    def NodeAddress(self) -> PeerNodeAddress: ...
    def HasBody(self) -> bool: ...


class RegisterResponseInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, registrationId: Guid, registrationLifetime: TimeSpan): ...
    @property
    def RegistrationId(self) -> Guid: ...
    @property
    def RegistrationLifetime(self) -> TimeSpan: ...
    def HasBody(self) -> bool: ...
    @RegistrationId.setter
    def RegistrationId(self, value: Guid) -> None: ...
    @RegistrationLifetime.setter
    def RegistrationLifetime(self, value: TimeSpan) -> None: ...


class ResolveInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, clientId: Guid, meshId: str, maxAddresses: int): ...
    @property
    def ClientId(self) -> Guid: ...
    @property
    def MaxAddresses(self) -> int: ...
    @property
    def MeshId(self) -> str: ...
    def HasBody(self) -> bool: ...


class ResolveResponseInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, addresses: Set(PeerNodeAddress)): ...
    @property
    def Addresses(self) -> List[PeerNodeAddress]: ...
    def HasBody(self) -> bool: ...
    @Addresses.setter
    def Addresses(self, value: List[PeerNodeAddress]) -> None: ...


class ServiceSettingsResponseInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, control: bool): ...
    @property
    def ControlMeshShape(self) -> bool: ...
    def HasBody(self) -> bool: ...
    @ControlMeshShape.setter
    def ControlMeshShape(self, value: bool) -> None: ...


class UnregisterInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, meshId: str, registrationId: Guid): ...
    @property
    def MeshId(self) -> str: ...
    @property
    def RegistrationId(self) -> Guid: ...
    def HasBody(self) -> bool: ...


class UpdateInfo(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, registrationId: Guid, client: Guid, meshId: str, address: PeerNodeAddress): ...
    @property
    def ClientId(self) -> Guid: ...
    @property
    def MeshId(self) -> str: ...
    @property
    def NodeAddress(self) -> PeerNodeAddress: ...
    @property
    def RegistrationId(self) -> Guid: ...
    def HasBody(self) -> bool: ...
