__all__ = ['Configuration']
from typing import Tuple, Set, Iterable, List


class IDuplexSessionRouter:
    def BeginProcessMessage(self, message: Message, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def EndProcessMessage(self, result: IAsyncResult) -> None: ...


class IRequestReplyRouter:
    def BeginProcessRequest(self, message: Message, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def EndProcessRequest(self, result: IAsyncResult) -> Message: ...


class ISimplexDatagramRouter:
    def BeginProcessMessage(self, message: Message, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def EndProcessMessage(self, result: IAsyncResult) -> None: ...


class ISimplexSessionRouter:
    def BeginProcessMessage(self, message: Message, callback: AsyncCallback, state: Object) -> IAsyncResult: ...
    def EndProcessMessage(self, result: IAsyncResult) -> None: ...


class RoutingBehavior(Object):
    def __init__(self, routingConfiguration: RoutingConfiguration): ...
    def GetContractForDescription(description: ContractDescription) -> Type: ...


class RoutingConfiguration(Object):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, filterTable: MessageFilterTable, routeOnHeadersOnly: bool): ...
    @property
    def EnsureOrderedDispatch(self) -> bool: ...
    @property
    def FilterTable(self) -> MessageFilterTable: ...
    @property
    def RouteOnHeadersOnly(self) -> bool: ...
    @property
    def SoapProcessingEnabled(self) -> bool: ...
    @EnsureOrderedDispatch.setter
    def EnsureOrderedDispatch(self, value: bool) -> None: ...
    @RouteOnHeadersOnly.setter
    def RouteOnHeadersOnly(self, value: bool) -> None: ...
    @SoapProcessingEnabled.setter
    def SoapProcessingEnabled(self, value: bool) -> None: ...


class RoutingExtension(Object):
    def ApplyConfiguration(self, routingConfiguration: RoutingConfiguration) -> None: ...


class RoutingService(Object):
    pass


class SoapProcessingBehavior(Object):
    def __init__(self): ...
    def AddBindingParameters(self, endpoint: ServiceEndpoint, bindingParameters: BindingParameterCollection) -> None: ...
    def ApplyClientBehavior(self, endpoint: ServiceEndpoint, clientRuntime: ClientRuntime) -> None: ...
    def ApplyDispatchBehavior(self, endpoint: ServiceEndpoint, endpointDispatcher: EndpointDispatcher) -> None: ...
    @property
    def ProcessMessages(self) -> bool: ...
    @ProcessMessages.setter
    def ProcessMessages(self, value: bool) -> None: ...
    def Validate(self, endpoint: ServiceEndpoint) -> None: ...
