from typing import Tuple, Set, Iterable, List


class AuthorizationContext(Object):
    def CreateDefaultAuthorizationContext(authorizationPolicies: List[IAuthorizationPolicy]) -> AuthorizationContext: ...
    @property
    def ClaimSets(self) -> ReadOnlyCollection: ...
    @property
    def ExpirationTime(self) -> DateTime: ...
    @property
    def Id(self) -> str: ...
    @property
    def Properties(self) -> IDictionary: ...


class EvaluationContext(Object):
    def AddClaimSet(self, policy: IAuthorizationPolicy, claimSet: ClaimSet) -> None: ...
    @property
    def ClaimSets(self) -> ReadOnlyCollection: ...
    @property
    def Generation(self) -> int: ...
    @property
    def Properties(self) -> IDictionary: ...
    def RecordExpirationTime(self, expirationTime: DateTime) -> None: ...


class IAuthorizationComponent:
    @property
    def Id(self) -> str: ...


class IAuthorizationPolicy:
    def Evaluate(self, evaluationContext: EvaluationContext, state: Object) -> Tuple[bool, Object]: ...
    @property
    def Issuer(self) -> ClaimSet: ...
