__all__ = ['Http','Http','Http','Http','Http','Ipc','Ipc','Ipc','Tcp','Tcp','Tcp']
from typing import Tuple, Set, Iterable, List


class SoapServerFormatterSink(Object):
    def __init__(self, protocol: Protocol, nextSink: IServerChannelSink, receiver: IChannelReceiver): ...
    def AsyncProcessResponse(self, sinkStack: IServerResponseChannelSinkStack, state: Object, msg: IMessage, headers: ITransportHeaders, stream: Stream) -> None: ...
    @property
    def NextChannelSink(self) -> IServerChannelSink: ...
    @property
    def Properties(self) -> IDictionary: ...
    @property
    def TypeFilterLevel(self) -> TypeFilterLevel: ...
    def GetResponseStream(self, sinkStack: IServerResponseChannelSinkStack, state: Object, msg: IMessage, headers: ITransportHeaders) -> Stream: ...
    def ProcessMessage(self, sinkStack: IServerChannelSinkStack, requestMsg: IMessage, requestHeaders: ITransportHeaders, requestStream: Stream) -> Tuple[ServerProcessing, IMessage, ITransportHeaders, Stream]: ...
    @TypeFilterLevel.setter
    def TypeFilterLevel(self, value: TypeFilterLevel) -> None: ...
