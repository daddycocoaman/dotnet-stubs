__all__ = ['DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','DataClasses','SqlClient','SqlClient']
from typing import Tuple, Set, Iterable, List


class ObjectStateManager(Object):
    def __init__(self, metadataWorkspace: MetadataWorkspace): ...
    def add_ObjectStateManagerChanged(self, value: CollectionChangeEventHandler) -> None: ...
    def ChangeObjectState(self, entity: Object, entityState: EntityState) -> ObjectStateEntry: ...
    @overload
    def ChangeRelationshipState(self, sourceEntity: Object, targetEntity: Object, navigationProperty: str, relationshipState: EntityState) -> ObjectStateEntry: ...
    @overload
    def ChangeRelationshipState(self, sourceEntity: TEntity, targetEntity: Object, navigationPropertySelector: Expression, relationshipState: EntityState) -> ObjectStateEntry: ...
    @overload
    def ChangeRelationshipState(self, sourceEntity: Object, targetEntity: Object, relationshipName: str, targetRoleName: str, relationshipState: EntityState) -> ObjectStateEntry: ...
    @property
    def MetadataWorkspace(self) -> MetadataWorkspace: ...
    def GetObjectStateEntries(self, state: EntityState) -> Iterable[ObjectStateEntry]: ...
    @overload
    def GetObjectStateEntry(self, key: EntityKey) -> ObjectStateEntry: ...
    @overload
    def GetObjectStateEntry(self, entity: Object) -> ObjectStateEntry: ...
    def GetRelationshipManager(self, entity: Object) -> RelationshipManager: ...
    def remove_ObjectStateManagerChanged(self, value: CollectionChangeEventHandler) -> None: ...
    @overload
    def TryGetObjectStateEntry(self, entity: Object) -> Tuple[bool, ObjectStateEntry]: ...
    @overload
    def TryGetObjectStateEntry(self, key: EntityKey) -> Tuple[bool, ObjectStateEntry]: ...
    def TryGetRelationshipManager(self, entity: Object) -> Tuple[bool, RelationshipManager]: ...
