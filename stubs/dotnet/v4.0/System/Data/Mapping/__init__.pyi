from typing import Tuple, Set, Iterable, List


class EntityViewContainer(Object):
    @property
    def EdmEntityContainerName(self) -> str: ...
    @property
    def HashOverAllExtentViews(self) -> str: ...
    @property
    def HashOverMappingClosure(self) -> str: ...
    @property
    def StoreEntityContainerName(self) -> str: ...
    @property
    def ViewCount(self) -> int: ...
    @EdmEntityContainerName.setter
    def EdmEntityContainerName(self, value: str) -> None: ...
    @HashOverAllExtentViews.setter
    def HashOverAllExtentViews(self, value: str) -> None: ...
    @HashOverMappingClosure.setter
    def HashOverMappingClosure(self, value: str) -> None: ...
    @StoreEntityContainerName.setter
    def StoreEntityContainerName(self, value: str) -> None: ...


class EntityViewGenerationAttribute(Attribute):
    def __init__(self, viewGenerationType: Type): ...
    @property
    def ViewGenerationType(self) -> Type: ...


class MappingItemCollection(ItemCollection):
    pass


class StorageMappingItemCollection(MappingItemCollection):
    @overload
    def __init__(self, edmCollection: EdmItemCollection, storeCollection: StoreItemCollection, filePaths: Set(str)): ...
    @overload
    def __init__(self, edmCollection: EdmItemCollection, storeCollection: StoreItemCollection, xmlReaders: Iterable[XmlReader]): ...
    @property
    def MappingVersion(self) -> float: ...
