from typing import Tuple, Set, Iterable, List


class AssociationAttribute(DataAttribute):
    def __init__(self): ...
    @property
    def DeleteOnNull(self) -> bool: ...
    @property
    def DeleteRule(self) -> str: ...
    @property
    def IsForeignKey(self) -> bool: ...
    @property
    def IsUnique(self) -> bool: ...
    @property
    def OtherKey(self) -> str: ...
    @property
    def ThisKey(self) -> str: ...
    @DeleteOnNull.setter
    def DeleteOnNull(self, value: bool) -> None: ...
    @DeleteRule.setter
    def DeleteRule(self, value: str) -> None: ...
    @IsForeignKey.setter
    def IsForeignKey(self, value: bool) -> None: ...
    @IsUnique.setter
    def IsUnique(self, value: bool) -> None: ...
    @OtherKey.setter
    def OtherKey(self, value: str) -> None: ...
    @ThisKey.setter
    def ThisKey(self, value: str) -> None: ...


class AttributeMappingSource(MappingSource):
    def __init__(self): ...


class AutoSync:
    Default = 0
    Always = 1
    Never = 2
    OnInsert = 3
    OnUpdate = 4


class ColumnAttribute(DataAttribute):
    def __init__(self): ...
    @property
    def AutoSync(self) -> AutoSync: ...
    @property
    def CanBeNull(self) -> bool: ...
    @property
    def DbType(self) -> str: ...
    @property
    def Expression(self) -> str: ...
    @property
    def IsDbGenerated(self) -> bool: ...
    @property
    def IsDiscriminator(self) -> bool: ...
    @property
    def IsPrimaryKey(self) -> bool: ...
    @property
    def IsVersion(self) -> bool: ...
    @property
    def UpdateCheck(self) -> UpdateCheck: ...
    @AutoSync.setter
    def AutoSync(self, value: AutoSync) -> None: ...
    @CanBeNull.setter
    def CanBeNull(self, value: bool) -> None: ...
    @DbType.setter
    def DbType(self, value: str) -> None: ...
    @Expression.setter
    def Expression(self, value: str) -> None: ...
    @IsDbGenerated.setter
    def IsDbGenerated(self, value: bool) -> None: ...
    @IsDiscriminator.setter
    def IsDiscriminator(self, value: bool) -> None: ...
    @IsPrimaryKey.setter
    def IsPrimaryKey(self, value: bool) -> None: ...
    @IsVersion.setter
    def IsVersion(self, value: bool) -> None: ...
    @UpdateCheck.setter
    def UpdateCheck(self, value: UpdateCheck) -> None: ...


class DataAttribute(Attribute):
    @property
    def Name(self) -> str: ...
    @property
    def Storage(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Storage.setter
    def Storage(self, value: str) -> None: ...


class DatabaseAttribute(Attribute):
    def __init__(self): ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class FunctionAttribute(Attribute):
    def __init__(self): ...
    @property
    def IsComposable(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @IsComposable.setter
    def IsComposable(self, value: bool) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class InheritanceMappingAttribute(Attribute):
    def __init__(self): ...
    @property
    def Code(self) -> Object: ...
    @property
    def IsDefault(self) -> bool: ...
    @property
    def Type(self) -> Type: ...
    @Code.setter
    def Code(self, value: Object) -> None: ...
    @IsDefault.setter
    def IsDefault(self, value: bool) -> None: ...
    @Type.setter
    def Type(self, value: Type) -> None: ...


class MappingSource(Object):
    def GetModel(self, dataContextType: Type) -> MetaModel: ...


class MetaAccessor(Object):
    @property
    def Type(self) -> Type: ...
    def GetBoxedValue(self, instance: Object) -> Object: ...
    def HasAssignedValue(self, instance: Object) -> bool: ...
    def HasLoadedValue(self, instance: Object) -> bool: ...
    def HasValue(self, instance: Object) -> bool: ...
    def SetBoxedValue(self, instance: Object, value: Object) -> Tuple[Object]: ...




class MetaAssociation(Object):
    @property
    def DeleteOnNull(self) -> bool: ...
    @property
    def DeleteRule(self) -> str: ...
    @property
    def IsForeignKey(self) -> bool: ...
    @property
    def IsMany(self) -> bool: ...
    @property
    def IsNullable(self) -> bool: ...
    @property
    def IsUnique(self) -> bool: ...
    @property
    def OtherKey(self) -> ReadOnlyCollection: ...
    @property
    def OtherKeyIsPrimaryKey(self) -> bool: ...
    @property
    def OtherMember(self) -> MetaDataMember: ...
    @property
    def OtherType(self) -> MetaType: ...
    @property
    def ThisKey(self) -> ReadOnlyCollection: ...
    @property
    def ThisKeyIsPrimaryKey(self) -> bool: ...
    @property
    def ThisMember(self) -> MetaDataMember: ...


class MetaDataMember(Object):
    @property
    def Association(self) -> MetaAssociation: ...
    @property
    def AutoSync(self) -> AutoSync: ...
    @property
    def CanBeNull(self) -> bool: ...
    @property
    def DbType(self) -> str: ...
    @property
    def DeclaringType(self) -> MetaType: ...
    @property
    def DeferredSourceAccessor(self) -> MetaAccessor: ...
    @property
    def DeferredValueAccessor(self) -> MetaAccessor: ...
    @property
    def Expression(self) -> str: ...
    @property
    def IsAssociation(self) -> bool: ...
    @property
    def IsDbGenerated(self) -> bool: ...
    @property
    def IsDeferred(self) -> bool: ...
    @property
    def IsDiscriminator(self) -> bool: ...
    @property
    def IsPersistent(self) -> bool: ...
    @property
    def IsPrimaryKey(self) -> bool: ...
    @property
    def IsVersion(self) -> bool: ...
    @property
    def LoadMethod(self) -> MethodInfo: ...
    @property
    def MappedName(self) -> str: ...
    @property
    def Member(self) -> MemberInfo: ...
    @property
    def MemberAccessor(self) -> MetaAccessor: ...
    @property
    def Name(self) -> str: ...
    @property
    def Ordinal(self) -> int: ...
    @property
    def StorageAccessor(self) -> MetaAccessor: ...
    @property
    def StorageMember(self) -> MemberInfo: ...
    @property
    def Type(self) -> Type: ...
    @property
    def UpdateCheck(self) -> UpdateCheck: ...
    def IsDeclaredBy(self, type: MetaType) -> bool: ...


class MetaFunction(Object):
    @property
    def HasMultipleResults(self) -> bool: ...
    @property
    def IsComposable(self) -> bool: ...
    @property
    def MappedName(self) -> str: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Model(self) -> MetaModel: ...
    @property
    def Name(self) -> str: ...
    @property
    def Parameters(self) -> ReadOnlyCollection: ...
    @property
    def ResultRowTypes(self) -> ReadOnlyCollection: ...
    @property
    def ReturnParameter(self) -> MetaParameter: ...


class MetaModel(Object):
    @property
    def ContextType(self) -> Type: ...
    @property
    def DatabaseName(self) -> str: ...
    @property
    def MappingSource(self) -> MappingSource: ...
    @property
    def ProviderType(self) -> Type: ...
    def GetFunction(self, method: MethodInfo) -> MetaFunction: ...
    def GetFunctions(self) -> Iterable[MetaFunction]: ...
    def GetMetaType(self, type: Type) -> MetaType: ...
    def GetTable(self, rowType: Type) -> MetaTable: ...
    def GetTables(self) -> Iterable[MetaTable]: ...


class MetaParameter(Object):
    @property
    def DbType(self) -> str: ...
    @property
    def MappedName(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Parameter(self) -> ParameterInfo: ...
    @property
    def ParameterType(self) -> Type: ...


class MetaTable(Object):
    @property
    def DeleteMethod(self) -> MethodInfo: ...
    @property
    def InsertMethod(self) -> MethodInfo: ...
    @property
    def Model(self) -> MetaModel: ...
    @property
    def RowType(self) -> MetaType: ...
    @property
    def TableName(self) -> str: ...
    @property
    def UpdateMethod(self) -> MethodInfo: ...


class MetaType(Object):
    @property
    def Associations(self) -> ReadOnlyCollection: ...
    @property
    def CanInstantiate(self) -> bool: ...
    @property
    def DataMembers(self) -> ReadOnlyCollection: ...
    @property
    def DBGeneratedIdentityMember(self) -> MetaDataMember: ...
    @property
    def DerivedTypes(self) -> ReadOnlyCollection: ...
    @property
    def Discriminator(self) -> MetaDataMember: ...
    @property
    def HasAnyLoadMethod(self) -> bool: ...
    @property
    def HasAnyValidateMethod(self) -> bool: ...
    @property
    def HasInheritance(self) -> bool: ...
    @property
    def HasInheritanceCode(self) -> bool: ...
    @property
    def HasUpdateCheck(self) -> bool: ...
    @property
    def IdentityMembers(self) -> ReadOnlyCollection: ...
    @property
    def InheritanceBase(self) -> MetaType: ...
    @property
    def InheritanceCode(self) -> Object: ...
    @property
    def InheritanceDefault(self) -> MetaType: ...
    @property
    def InheritanceRoot(self) -> MetaType: ...
    @property
    def InheritanceTypes(self) -> ReadOnlyCollection: ...
    @property
    def IsEntity(self) -> bool: ...
    @property
    def IsInheritanceDefault(self) -> bool: ...
    @property
    def Model(self) -> MetaModel: ...
    @property
    def Name(self) -> str: ...
    @property
    def OnLoadedMethod(self) -> MethodInfo: ...
    @property
    def OnValidateMethod(self) -> MethodInfo: ...
    @property
    def PersistentDataMembers(self) -> ReadOnlyCollection: ...
    @property
    def Table(self) -> MetaTable: ...
    @property
    def Type(self) -> Type: ...
    @property
    def VersionMember(self) -> MetaDataMember: ...
    def GetDataMember(self, member: MemberInfo) -> MetaDataMember: ...
    def GetInheritanceType(self, type: Type) -> MetaType: ...
    def GetTypeForInheritanceCode(self, code: Object) -> MetaType: ...


class ParameterAttribute(Attribute):
    def __init__(self): ...
    @property
    def DbType(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @DbType.setter
    def DbType(self, value: str) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class ProviderAttribute(Attribute):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, type: Type): ...
    @property
    def Type(self) -> Type: ...


class ResultTypeAttribute(Attribute):
    def __init__(self, type: Type): ...
    @property
    def Type(self) -> Type: ...


class TableAttribute(Attribute):
    def __init__(self): ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class UpdateCheck:
    Always = 0
    Never = 1
    WhenChanged = 2


class XmlMappingSource(MappingSource):
    def FromReader(reader: XmlReader) -> XmlMappingSource: ...
    def FromStream(stream: Stream) -> XmlMappingSource: ...
    def FromUrl(url: str) -> XmlMappingSource: ...
    def FromXml(xml: str) -> XmlMappingSource: ...
