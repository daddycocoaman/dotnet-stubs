from typing import Tuple, Set, Iterable, List


class TypeGeneratedEventArgs(EventArgs):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, typeSource: GlobalItem, baseType: CodeTypeReference): ...
    @property
    def AdditionalAttributes(self) -> List: ...
    @property
    def AdditionalInterfaces(self) -> List: ...
    @property
    def AdditionalMembers(self) -> List: ...
    @property
    def BaseType(self) -> CodeTypeReference: ...
    @property
    def TypeSource(self) -> GlobalItem: ...
    @BaseType.setter
    def BaseType(self, value: CodeTypeReference) -> None: ...
