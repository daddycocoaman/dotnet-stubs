from typing import Tuple, Set, Iterable, List




























class ProjectedWrapper(Object):
    @property
    def PropertyNameList(self) -> str: ...
    @property
    def ResourceTypeName(self) -> str: ...
    def GetProjectedPropertyValue(self, propertyName: str) -> Object: ...
    @PropertyNameList.setter
    def PropertyNameList(self, value: str) -> None: ...
    @ResourceTypeName.setter
    def ResourceTypeName(self, value: str) -> None: ...


class ProjectedWrapper0(ProjectedWrapper):
    def __init__(self): ...


class ProjectedWrapper1(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...


class ProjectedWrapper2(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...


class ProjectedWrapper3(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...


class ProjectedWrapper4(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...


class ProjectedWrapper5(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @property
    def ProjectedProperty4(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...
    @ProjectedProperty4.setter
    def ProjectedProperty4(self, value: Object) -> None: ...


class ProjectedWrapper6(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @property
    def ProjectedProperty4(self) -> Object: ...
    @property
    def ProjectedProperty5(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...
    @ProjectedProperty4.setter
    def ProjectedProperty4(self, value: Object) -> None: ...
    @ProjectedProperty5.setter
    def ProjectedProperty5(self, value: Object) -> None: ...


class ProjectedWrapper7(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @property
    def ProjectedProperty4(self) -> Object: ...
    @property
    def ProjectedProperty5(self) -> Object: ...
    @property
    def ProjectedProperty6(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...
    @ProjectedProperty4.setter
    def ProjectedProperty4(self, value: Object) -> None: ...
    @ProjectedProperty5.setter
    def ProjectedProperty5(self, value: Object) -> None: ...
    @ProjectedProperty6.setter
    def ProjectedProperty6(self, value: Object) -> None: ...


class ProjectedWrapper8(ProjectedWrapper):
    def __init__(self): ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @property
    def ProjectedProperty4(self) -> Object: ...
    @property
    def ProjectedProperty5(self) -> Object: ...
    @property
    def ProjectedProperty6(self) -> Object: ...
    @property
    def ProjectedProperty7(self) -> Object: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...
    @ProjectedProperty4.setter
    def ProjectedProperty4(self, value: Object) -> None: ...
    @ProjectedProperty5.setter
    def ProjectedProperty5(self, value: Object) -> None: ...
    @ProjectedProperty6.setter
    def ProjectedProperty6(self, value: Object) -> None: ...
    @ProjectedProperty7.setter
    def ProjectedProperty7(self, value: Object) -> None: ...


class ProjectedWrapperMany(ProjectedWrapper):
    def __init__(self): ...
    @property
    def Next(self) -> ProjectedWrapperMany: ...
    @property
    def ProjectedProperty0(self) -> Object: ...
    @property
    def ProjectedProperty1(self) -> Object: ...
    @property
    def ProjectedProperty2(self) -> Object: ...
    @property
    def ProjectedProperty3(self) -> Object: ...
    @property
    def ProjectedProperty4(self) -> Object: ...
    @property
    def ProjectedProperty5(self) -> Object: ...
    @property
    def ProjectedProperty6(self) -> Object: ...
    @property
    def ProjectedProperty7(self) -> Object: ...
    @Next.setter
    def Next(self, value: ProjectedWrapperMany) -> None: ...
    @ProjectedProperty0.setter
    def ProjectedProperty0(self, value: Object) -> None: ...
    @ProjectedProperty1.setter
    def ProjectedProperty1(self, value: Object) -> None: ...
    @ProjectedProperty2.setter
    def ProjectedProperty2(self, value: Object) -> None: ...
    @ProjectedProperty3.setter
    def ProjectedProperty3(self, value: Object) -> None: ...
    @ProjectedProperty4.setter
    def ProjectedProperty4(self, value: Object) -> None: ...
    @ProjectedProperty5.setter
    def ProjectedProperty5(self, value: Object) -> None: ...
    @ProjectedProperty6.setter
    def ProjectedProperty6(self, value: Object) -> None: ...
    @ProjectedProperty7.setter
    def ProjectedProperty7(self, value: Object) -> None: ...


class ProjectedWrapperManyEnd(ProjectedWrapperMany):
    def __init__(self): ...
