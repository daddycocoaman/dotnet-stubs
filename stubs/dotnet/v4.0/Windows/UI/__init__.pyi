from typing import Tuple, Set, Iterable, List


class Color:
    @overload
    def Equals(self, color: Color) -> bool: ...
    @overload
    def Equals(self, o: Object) -> bool: ...
    def FromArgb(a: Byte, r: Byte, g: Byte, b: Byte) -> Color: ...
    @property
    def A(self) -> Byte: ...
    @property
    def B(self) -> Byte: ...
    @property
    def G(self) -> Byte: ...
    @property
    def R(self) -> Byte: ...
    def GetHashCode(self) -> int: ...
    def op_Equality(color1: Color, color2: Color) -> bool: ...
    def op_Inequality(color1: Color, color2: Color) -> bool: ...
    @A.setter
    def A(self, value: Byte) -> None: ...
    @B.setter
    def B(self, value: Byte) -> None: ...
    @G.setter
    def G(self, value: Byte) -> None: ...
    @R.setter
    def R(self, value: Byte) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def ToString(self, provider: IFormatProvider) -> str: ...
