from typing import Tuple, Set, Iterable, List


class SetCimInstance:
    def __init__(self): ...
    @property
    def InputObject(self) -> InArgument: ...
    @property
    def Namespace(self) -> InArgument: ...
    @property
    def OperationTimeoutSec(self) -> InArgument: ...
    @property
    def PassThru(self) -> InArgument: ...
    @property
    def Property(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Query(self) -> InArgument: ...
    @property
    def QueryDialect(self) -> InArgument: ...
    @property
    def TypeImplementingCmdlet(self) -> Type: ...
    @InputObject.setter
    def InputObject(self, value: InArgument) -> None: ...
    @Namespace.setter
    def Namespace(self, value: InArgument) -> None: ...
    @OperationTimeoutSec.setter
    def OperationTimeoutSec(self, value: InArgument) -> None: ...
    @PassThru.setter
    def PassThru(self, value: InArgument) -> None: ...
    @Property.setter
    def Property(self, value: InArgument) -> None: ...
    @Query.setter
    def Query(self, value: InArgument) -> None: ...
    @QueryDialect.setter
    def QueryDialect(self, value: InArgument) -> None: ...
