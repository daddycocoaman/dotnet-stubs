from typing import Tuple, Set, Iterable, List


class DispHTMLDocument:
    pass


class HTMLDocument:
    pass


class HTMLDocumentEvents:
    pass


class HTMLDocumentEvents_Event:
    pass


class HTMLDocumentEvents2:
    def onreadystatechange(self, pEvtObj: IHTMLEventObj) -> None: ...


class HTMLDocumentEvents2_Event:
    def add_onreadystatechange(self, A_0: HTMLDocumentEvents2_onreadystatechangeEventHandler) -> None: ...
    def remove_onreadystatechange(self, A_0: HTMLDocumentEvents2_onreadystatechangeEventHandler) -> None: ...


class HTMLDocumentEvents2_onreadystatechangeEventHandler:
    def __init__(self, A_0: Object, A_1: UIntPtr): ...
    def Invoke(self, pEvtObj: IHTMLEventObj) -> None: ...


class IHTMLDocument:
    pass


class IHTMLDocument2:
    def close(self) -> None: ...
    @property
    def all(self) -> IHTMLElementCollection: ...
    @property
    def body(self) -> IHTMLElement: ...
    @property
    def forms(self) -> IHTMLElementCollection: ...
    @property
    def images(self) -> IHTMLElementCollection: ...
    @property
    def links(self) -> IHTMLElementCollection: ...
    @property
    def readyState(self) -> str: ...
    @property
    def scripts(self) -> IHTMLElementCollection: ...
    def write(self, psarray: Set(Object)) -> None: ...


class IHTMLElement:
    @property
    def id(self) -> str: ...
    @property
    def innerHTML(self) -> str: ...
    @property
    def innerText(self) -> str: ...
    @property
    def outerHTML(self) -> str: ...
    @property
    def outerText(self) -> str: ...
    @property
    def tagName(self) -> str: ...
    @id.setter
    def id(self, p: str) -> None: ...
    @innerHTML.setter
    def innerHTML(self, p: str) -> None: ...
    @innerText.setter
    def innerText(self, p: str) -> None: ...
    @outerHTML.setter
    def outerHTML(self, p: str) -> None: ...
    @outerText.setter
    def outerText(self, p: str) -> None: ...


class IHTMLElementCollection:
    def GetEnumerator(self) -> IEnumerator: ...
    def item(self, name: Object, index: Object) -> Object: ...


class IHTMLEventObj:
    pass


class IHTMLFormElement:
    @property
    def action(self) -> str: ...
    @property
    def method(self) -> str: ...
    @property
    def name(self) -> str: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def item(self, name: Object, index: Object) -> Object: ...
    @action.setter
    def action(self, p: str) -> None: ...
    @method.setter
    def method(self, p: str) -> None: ...
    @name.setter
    def name(self, p: str) -> None: ...


class IHTMLInputElement:
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> str: ...
    @name.setter
    def name(self, p: str) -> None: ...
    @value.setter
    def value(self, p: str) -> None: ...
