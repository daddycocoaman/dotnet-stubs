from typing import Tuple, Set, Iterable, List


class WizardPage:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, wizard: WizardForm): ...
    @overload
    def __init__(self, wizard: WizardForm, parentPage: WizardPage): ...
    def AddSubPage(self, page: WizardPage) -> int: ...
    def EnableStep(self, enable: bool) -> None: ...
    @property
    def ActiveSubPage(self) -> WizardPage: ...
    @property
    def CanActivate(self) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...
    @property
    def CanDeactivate(self) -> bool: ...
    @property
    def Headline(self) -> str: ...
    @property
    def HelpKeyword(self) -> str: ...
    @property
    def Id(self) -> str: ...
    @property
    def IndentationLevel(self) -> int: ...
    @property
    def InfoRTBoxIcon(self) -> Bitmap: ...
    @property
    def InfoRTBoxSize(self) -> Size: ...
    @property
    def InfoRTBoxText(self) -> str: ...
    @property
    def IsDataValid(self) -> bool: ...
    @property
    def IsDisplayedInWizard(self) -> bool: ...
    @property
    def Logo(self) -> Bitmap: ...
    @property
    def NextSubPage(self) -> WizardPage: ...
    @property
    def ParentPage(self) -> WizardPage: ...
    @property
    def PreviousSubPage(self) -> WizardPage: ...
    @property
    def ShowInfoPanel(self) -> bool: ...
    @property
    def Skippable(self) -> bool: ...
    @property
    def StepTitle(self) -> str: ...
    @property
    def SubPageCount(self) -> int: ...
    @property
    def TopMostPage(self) -> WizardPage: ...
    @property
    def Visited(self) -> bool: ...
    @overload
    def GetSubPage(self, index: int) -> WizardPage: ...
    @overload
    def GetSubPage(self, pageId: str) -> WizardPage: ...
    def GetSubPageCount(self) -> int: ...
    def HasActiveSubPage(self) -> bool: ...
    def HasBranchPage(self) -> bool: ...
    @overload
    def InsertSubPageAfter(self, pageId: str, page: WizardPage) -> int: ...
    @overload
    def InsertSubPageAfter(self, index: int, page: WizardPage) -> int: ...
    @overload
    def InsertSubPageBefore(self, pageId: str, page: WizardPage) -> int: ...
    @overload
    def InsertSubPageBefore(self, index: int, page: WizardPage) -> int: ...
    def IsRemovable(self) -> bool: ...
    def IsSelectedBranch(self) -> bool: ...
    def IsSubPage(self, page: WizardPage) -> bool: ...
    def OnActivate(self) -> bool: ...
    def OnActivated(self) -> None: ...
    def OnBranchChange(self, branchPageId: str) -> None: ...
    def OnDeactivate(self) -> bool: ...
    def OnDeactivated(self) -> None: ...
    def OnDisplayedInWizard(self) -> None: ...
    def OnSkip(self, fromPage: WizardPage, toPage: WizardPage) -> bool: ...
    def RemoveAllSubPages(self) -> None: ...
    @overload
    def RemoveSubPage(self, pageId: str) -> None: ...
    @overload
    def RemoveSubPage(self, index: int) -> None: ...
    @Cancellable.setter
    def Cancellable(self, value: bool) -> None: ...
    @Headline.setter
    def Headline(self, value: str) -> None: ...
    @HelpKeyword.setter
    def HelpKeyword(self, value: str) -> None: ...
    @Id.setter
    def Id(self, value: str) -> None: ...
    @InfoRTBoxIcon.setter
    def InfoRTBoxIcon(self, value: Bitmap) -> None: ...
    @InfoRTBoxSize.setter
    def InfoRTBoxSize(self, value: Size) -> None: ...
    @InfoRTBoxText.setter
    def InfoRTBoxText(self, value: str) -> None: ...
    @Logo.setter
    def Logo(self, value: Bitmap) -> None: ...
    @ParentPage.setter
    def ParentPage(self, value: WizardPage) -> None: ...
    @ShowInfoPanel.setter
    def ShowInfoPanel(self, value: bool) -> None: ...
    @Skippable.setter
    def Skippable(self, value: bool) -> None: ...
    @StepTitle.setter
    def StepTitle(self, value: str) -> None: ...
    @Visited.setter
    def Visited(self, value: bool) -> None: ...
    def SetFocus(self) -> None: ...
