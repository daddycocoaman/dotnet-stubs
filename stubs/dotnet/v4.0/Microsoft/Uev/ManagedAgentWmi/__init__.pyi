from typing import Tuple, Set, Iterable, List


class EffectiveWindows8App:
    def __init__(self, packageFamilyName: str): ...
    def EnumerateAppPackages() -> IEnumerable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def EnabledSource(self) -> str: ...
    @property
    def PackageFamilyName(self) -> str: ...


class IWindows8AppList:
    def AddMachineConfiguredApp(self, packageFamilyName: str, enable: bool) -> None: ...
    def AddUserConfiguredApp(self, packageFamilyName: str, enable: bool) -> None: ...
    def CheckConfiguredApp(self, packageFamilyName: str) -> bool: ...
    def GetConfiguredList(self, isUserList: bool) -> IEnumerable: ...
    def GetEffectiveList(self) -> IEnumerable: ...
    def RemoveMachineConfiguredApp(self, packageFamilyName: str) -> None: ...
    def RemoveUserConfiguredApp(self, packageFamilyName: str) -> None: ...


class MachineConfiguredWindows8App:
    def __init__(self, packageFamilyName: str): ...
    def DisableApp(packageFamilyName: str) -> None: ...
    def EnableApp(packageFamilyName: str) -> None: ...
    def EnumerateAppPackages() -> IEnumerable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def Installed(self) -> bool: ...
    @property
    def PackageFamilyName(self) -> str: ...
    def RemoveApp(packageFamilyName: str) -> None: ...


class MyInstall:
    def __init__(self): ...


class PropertySource:
    NotSet = 0
    LocalMachine = 1
    LocalUser = 2
    PolicyMachine = 3
    PolicyUser = 4


class UserConfiguredWindows8App:
    def __init__(self, packageFamilyName: str): ...
    def CheckApp(packageFamilyName: str) -> bool: ...
    def DisableApp(packageFamilyName: str) -> None: ...
    def EnableApp(packageFamilyName: str) -> None: ...
    def EnumerateAppPackages() -> IEnumerable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def Installed(self) -> bool: ...
    @property
    def PackageFamilyName(self) -> str: ...
    def RemoveApp(packageFamilyName: str) -> None: ...


class Windows8App:
    @overload
    def __init__(self, packageFamilyName: str): ...
    @overload
    def __init__(self, packageFamilyName: str, isEnabled: Nullable, enabledSource: PropertySource): ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def EnabledSource(self) -> PropertySource: ...
    @property
    def IsEnabled(self) -> Nullable: ...
    @property
    def IsInstalled(self) -> bool: ...
    @property
    def PackageFamilyName(self) -> str: ...
    @EnabledSource.setter
    def EnabledSource(self, value: PropertySource) -> None: ...
    @IsEnabled.setter
    def IsEnabled(self, value: Nullable) -> None: ...
    @IsInstalled.setter
    def IsInstalled(self, value: bool) -> None: ...
