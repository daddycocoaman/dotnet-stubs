from typing import Tuple, Set, Iterable, List


class DeveloperLicensingMethods:
    def __init__(self): ...
    def AcquireDeveloperLicense(self, parentWindowHandle: IntPtr) -> Tuple[int, FILETIME]: ...
    def CheckDeveloperLicense(self) -> Tuple[int, FILETIME]: ...
    def RemoveDeveloperLicense(self, parentWindowHandle: IntPtr) -> int: ...


class GetWindowsDeveloperLicenseCommand:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, devLicensingMethods: IDeveloperLicensingMethods): ...


class IDeveloperLicensingMethods:
    def AcquireDeveloperLicense(self, parentWindowHandle: IntPtr) -> Tuple[int, FILETIME]: ...
    def CheckDeveloperLicense(self) -> Tuple[int, FILETIME]: ...
    def RemoveDeveloperLicense(self, parentWindowHandle: IntPtr) -> int: ...


class NativeConstants:
    pass


class SharedMethods:
    def IsInAdministratorRole() -> bool: ...


class ShowWindowsDeveloperLicenseRegistrationCommand:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, devLicensingMethods: IDeveloperLicensingMethods): ...


class UnregisterWindowsDeveloperLicenseCommand:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, devLicensingMethods: IDeveloperLicensingMethods): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...


class WindowsDeveloperLicense:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, expiration: DateTime, isValid: bool): ...
    def CompareTo(self, license: Object) -> int: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def ExpirationTime(self) -> DateTime: ...
    @property
    def IsValid(self) -> bool: ...
    def GetHashCode(self) -> int: ...
    def op_Equality(leftValue: WindowsDeveloperLicense, rightValue: WindowsDeveloperLicense) -> bool: ...
    def op_GreaterThan(leftValue: WindowsDeveloperLicense, rightValue: WindowsDeveloperLicense) -> bool: ...
    def op_Inequality(leftValue: WindowsDeveloperLicense, rightValue: WindowsDeveloperLicense) -> bool: ...
    def op_LessThan(leftValue: WindowsDeveloperLicense, rightValue: WindowsDeveloperLicense) -> bool: ...
    @ExpirationTime.setter
    def ExpirationTime(self, value: DateTime) -> None: ...
    @IsValid.setter
    def IsValid(self, value: bool) -> None: ...
