__all__ = ['Commands']
from typing import Tuple, Set, Iterable, List


class DiagCallback:
    def __init__(self, ui: PSHostUserInterface): ...
    def AddPackage(self, package: DiagPack) -> None: ...
    def ClearConsole(self) -> None: ...
    def HandleInteraction(self, interaction: DiagInteraction, generatingAnswerFile: bool) -> Tuple[Set(str)]: ...
    def Interact(self, interactionXml: str) -> Tuple[Set(str)]: ...
    def Progress(self, activity: str, status: str, progressValue: int, color: int) -> None: ...
    def Telemetry(self, Property: str, Value: str) -> None: ...


class DiagChoice:
    @overload
    def __init__(self, choiceNode: XmlNode): ...
    @overload
    def __init__(self, other: DiagChoice): ...
    @property
    def Description(self) -> str: ...
    @property
    def ExtensionPoint(self) -> XmlDocument: ...
    @property
    def Name(self) -> str: ...
    @property
    def Value(self) -> str: ...


class DiagInteraction:
    @overload
    def __init__(self, interactionNode: XmlNode): ...
    @overload
    def __init__(self, other: DiagInteraction): ...
    @property
    def AnswerType(self) -> str: ...
    @property
    def ContextParameters(self) -> XmlDocument: ...
    @property
    def Description(self) -> str: ...
    @property
    def Dynamic(self) -> bool: ...
    @property
    def ExtensionPoint(self) -> XmlDocument: ...
    @property
    def Id(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Properties(self) -> Hashtable: ...


class DiagPack:
    def __init__(self, packagePath: str, callback: IScriptedDiagnosticClient, answerXml: str): ...
    def Cancel(self) -> None: ...
    def CopyResults(self, destinationDirectoryPath: str) -> None: ...
    def Diagnose(self) -> None: ...
    @overload
    def Equals(self, other: DiagPack) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ExtensionPoint(self) -> XmlDocument: ...
    @property
    def FoundRootCauses(self) -> Set(DiagRootCause): ...
    @property
    def Id(self) -> str: ...
    @property
    def Interactions(self) -> Set(DiagInteraction): ...
    @property
    def Interactive(self) -> bool: ...
    @property
    def MinimumVersion(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Path(self) -> str: ...
    @property
    def PrivacyLink(self) -> str: ...
    @property
    def Publisher(self) -> str: ...
    @property
    def RequiresElevation(self) -> bool: ...
    @property
    def RootCauses(self) -> Set(DiagRootCause): ...
    @property
    def SupportsAmd64(self) -> bool: ...
    @property
    def SupportsClient(self) -> bool: ...
    @property
    def SupportsIA64(self) -> bool: ...
    @property
    def SupportsServer(self) -> bool: ...
    @property
    def SupportsX86(self) -> bool: ...
    @property
    def Version(self) -> str: ...
    def Resolve(self, resolution: DiagResolution) -> None: ...
    def Verify(self) -> None: ...


class DiagPackCancelledException:
    def __init__(self): ...


class DiagPrompt:
    def __init__(self, caption: str, message: str, promptType: PromptType, ui: PSHostUserInterface): ...
    def AddChoice(self, label: str, help: str, referencedItem: Object, singleton: bool) -> None: ...
    def AddSection(self, title: str) -> None: ...
    def Prompt(self) -> Set(Object): ...


class DiagResolution:
    @overload
    def __init__(self, resolutionXml: XmlNode): ...
    @overload
    def __init__(self, other: DiagResolution): ...
    @overload
    def Equals(self, other: DiagResolution) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ExtensionPoint(self) -> XmlDocument: ...
    @property
    def Id(self) -> str: ...
    @property
    def Manual(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def RequiresConsent(self) -> bool: ...
    @property
    def RequiresElevation(self) -> bool: ...
    @property
    def RequiresInteraction(self) -> bool: ...


class DiagRootCause:
    @overload
    def __init__(self, rootCauseXml: XmlNode): ...
    @overload
    def __init__(self, other: DiagRootCause): ...
    @property
    def ContextParameters(self) -> XmlDocument: ...
    @property
    def Description(self) -> str: ...
    @property
    def ExtensionPoint(self) -> XmlDocument: ...
    @property
    def Id(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Resolutions(self) -> Set(DiagResolution): ...
    @property
    def Status(self) -> str: ...
    @property
    def Verifiable(self) -> bool: ...
    def UpdateVerificationStatus(self, verificationDocument: XmlDocument) -> None: ...


class PromptType:
    Text = 0
    Choice = 1
    NoResponse = 2
    NoResponsePause = 3
