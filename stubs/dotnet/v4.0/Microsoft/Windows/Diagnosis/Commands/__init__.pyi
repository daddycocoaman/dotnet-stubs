from typing import Tuple, Set, Iterable, List


class GetTroubleshootingPack:
    def __init__(self): ...
    @property
    def AnswerFile(self) -> str: ...
    @property
    def Path(self) -> str: ...
    @AnswerFile.setter
    def AnswerFile(self, value: str) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...


class InvokeTroubleshootingPack:
    def __init__(self): ...
    @property
    def AnswerFile(self) -> str: ...
    @property
    def Pack(self) -> DiagPack: ...
    @property
    def Result(self) -> str: ...
    @property
    def Unattended(self) -> SwitchParameter: ...
    @AnswerFile.setter
    def AnswerFile(self, value: str) -> None: ...
    @Pack.setter
    def Pack(self, value: DiagPack) -> None: ...
    @Result.setter
    def Result(self, value: str) -> None: ...
    @Unattended.setter
    def Unattended(self, value: SwitchParameter) -> None: ...
