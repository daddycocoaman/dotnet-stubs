from typing import Tuple, Set, Iterable, List


class WSManSessionOptions(CimSessionOptions):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, optionsToClone: WSManSessionOptions): ...
    def AddProxyCredentials(self, credential: CimCredential) -> None: ...
    @property
    def CertCACheck(self) -> bool: ...
    @property
    def CertCNCheck(self) -> bool: ...
    @property
    def CertRevocationCheck(self) -> bool: ...
    @property
    def DestinationPort(self) -> UInt32: ...
    @property
    def EncodePortInServicePrincipalName(self) -> bool: ...
    @property
    def HttpUrlPrefix(self) -> Uri: ...
    @property
    def MaxEnvelopeSize(self) -> UInt32: ...
    @property
    def NoEncryption(self) -> bool: ...
    @property
    def PacketEncoding(self) -> PacketEncoding: ...
    @property
    def ProxyType(self) -> ProxyType: ...
    @property
    def UseSsl(self) -> bool: ...
    @CertCACheck.setter
    def CertCACheck(self, value: bool) -> None: ...
    @CertCNCheck.setter
    def CertCNCheck(self, value: bool) -> None: ...
    @CertRevocationCheck.setter
    def CertRevocationCheck(self, value: bool) -> None: ...
    @DestinationPort.setter
    def DestinationPort(self, value: UInt32) -> None: ...
    @EncodePortInServicePrincipalName.setter
    def EncodePortInServicePrincipalName(self, value: bool) -> None: ...
    @HttpUrlPrefix.setter
    def HttpUrlPrefix(self, value: Uri) -> None: ...
    @MaxEnvelopeSize.setter
    def MaxEnvelopeSize(self, value: UInt32) -> None: ...
    @NoEncryption.setter
    def NoEncryption(self, value: bool) -> None: ...
    @PacketEncoding.setter
    def PacketEncoding(self, value: PacketEncoding) -> None: ...
    @ProxyType.setter
    def ProxyType(self, value: ProxyType) -> None: ...
    @UseSsl.setter
    def UseSsl(self, value: bool) -> None: ...
