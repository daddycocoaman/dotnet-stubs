__all__ = ['Remote']
from typing import Tuple, Set, Iterable, List


class Action:
    #None = 0
    RunConsole = 1
    RunFile = 2
    DisplayHelp = 3


class BasicConsole:
    def __init__(self, colorful: bool): ...
    def Dispose(self) -> None: ...
    @property
    def ConsoleCancelEventHandler(self) -> ConsoleCancelEventHandler: ...
    @property
    def ErrorOutput(self) -> TextWriter: ...
    @property
    def Output(self) -> TextWriter: ...
    def ReadLine(self, autoIndentSize: int) -> str: ...
    @ConsoleCancelEventHandler.setter
    def ConsoleCancelEventHandler(self, value: ConsoleCancelEventHandler) -> None: ...
    @ErrorOutput.setter
    def ErrorOutput(self, value: TextWriter) -> None: ...
    @Output.setter
    def Output(self, value: TextWriter) -> None: ...
    def Write(self, text: str, style: Style) -> None: ...
    @overload
    def WriteLine(self) -> None: ...
    @overload
    def WriteLine(self, text: str, style: Style) -> None: ...


class CommandLine:
    def __init__(self): ...
    @property
    def ExitCode(self) -> int: ...
    @property
    def PromptContinuation(self) -> str: ...
    @property
    def ScriptScope(self) -> ScriptScope: ...
    def GetGlobals(self, name: str) -> List[str]: ...
    def GetMemberNames(self, code: str) -> List[str]: ...
    def Run(self, engine: ScriptEngine, console: IConsole, options: ConsoleOptions) -> None: ...
    def Terminate(self, exitCode: int) -> None: ...


class ConsoleHost:
    @property
    def Engine(self) -> ScriptEngine: ...
    @property
    def Options(self) -> ConsoleHostOptions: ...
    @property
    def Runtime(self) -> ScriptRuntime: ...
    @property
    def RuntimeSetup(self) -> ScriptRuntimeSetup: ...
    def PrintLanguageHelp(self, output: StringBuilder) -> None: ...
    def Run(self, args: Set(str)) -> int: ...
    def Terminate(self, exitCode: int) -> None: ...


class ConsoleHostOptions:
    def __init__(self): ...
    @property
    def EnvironmentVars(self) -> List: ...
    @property
    def HasLanguageProvider(self) -> bool: ...
    @property
    def IgnoredArgs(self) -> List: ...
    @property
    def LanguageProvider(self) -> str: ...
    @property
    def RunAction(self) -> Action: ...
    @property
    def RunFile(self) -> str: ...
    @property
    def SourceUnitSearchPaths(self) -> Set(str): ...
    def GetHelp(self) -> String[,]: ...
    @HasLanguageProvider.setter
    def HasLanguageProvider(self, value: bool) -> None: ...
    @LanguageProvider.setter
    def LanguageProvider(self, value: str) -> None: ...
    @RunAction.setter
    def RunAction(self, value: Action) -> None: ...
    @RunFile.setter
    def RunFile(self, value: str) -> None: ...
    @SourceUnitSearchPaths.setter
    def SourceUnitSearchPaths(self, value: Set(str)) -> None: ...


class ConsoleHostOptionsParser:
    def __init__(self, options: ConsoleHostOptions, runtimeSetup: ScriptRuntimeSetup): ...
    @property
    def Options(self) -> ConsoleHostOptions: ...
    @property
    def RuntimeSetup(self) -> ScriptRuntimeSetup: ...
    def Parse(self, args: Set(str)) -> None: ...


class ConsoleOptions:
    def __init__(self): ...
    @property
    def AutoIndent(self) -> bool: ...
    @property
    def AutoIndentSize(self) -> int: ...
    @property
    def ColorfulConsole(self) -> bool: ...
    @property
    def Command(self) -> str: ...
    @property
    def Exit(self) -> bool: ...
    @property
    def FileName(self) -> str: ...
    @property
    def HandleExceptions(self) -> bool: ...
    @property
    def Introspection(self) -> bool: ...
    @property
    def IsMta(self) -> bool: ...
    @property
    def PrintUsage(self) -> bool: ...
    @property
    def PrintVersion(self) -> bool: ...
    @property
    def RemainingArgs(self) -> Set(str): ...
    @property
    def RemoteRuntimeChannel(self) -> str: ...
    @property
    def TabCompletion(self) -> bool: ...
    @AutoIndent.setter
    def AutoIndent(self, value: bool) -> None: ...
    @AutoIndentSize.setter
    def AutoIndentSize(self, value: int) -> None: ...
    @ColorfulConsole.setter
    def ColorfulConsole(self, value: bool) -> None: ...
    @Command.setter
    def Command(self, value: str) -> None: ...
    @Exit.setter
    def Exit(self, value: bool) -> None: ...
    @FileName.setter
    def FileName(self, value: str) -> None: ...
    @HandleExceptions.setter
    def HandleExceptions(self, value: bool) -> None: ...
    @Introspection.setter
    def Introspection(self, value: bool) -> None: ...
    @IsMta.setter
    def IsMta(self, value: bool) -> None: ...
    @PrintUsage.setter
    def PrintUsage(self, value: bool) -> None: ...
    @PrintVersion.setter
    def PrintVersion(self, value: bool) -> None: ...
    @RemainingArgs.setter
    def RemainingArgs(self, value: Set(str)) -> None: ...
    @RemoteRuntimeChannel.setter
    def RemoteRuntimeChannel(self, value: str) -> None: ...
    @TabCompletion.setter
    def TabCompletion(self, value: bool) -> None: ...


class ICommandDispatcher:
    def Execute(self, compiledCode: CompiledCode, scope: ScriptScope) -> Object: ...


class IConsole:
    @property
    def ErrorOutput(self) -> TextWriter: ...
    @property
    def Output(self) -> TextWriter: ...
    def ReadLine(self, autoIndentSize: int) -> str: ...
    @ErrorOutput.setter
    def ErrorOutput(self, value: TextWriter) -> None: ...
    @Output.setter
    def Output(self, value: TextWriter) -> None: ...
    def Write(self, text: str, style: Style) -> None: ...
    @overload
    def WriteLine(self) -> None: ...
    @overload
    def WriteLine(self, text: str, style: Style) -> None: ...


class InvalidOptionException:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, inner: Exception): ...


class OptionsParser:
    @property
    def CommonConsoleOptions(self) -> ConsoleOptions: ...
    @property
    def IgnoredArgs(self) -> List[str]: ...
    @property
    def LanguageSetup(self) -> LanguageSetup: ...
    @property
    def Platform(self) -> PlatformAdaptationLayer: ...
    @property
    def RuntimeSetup(self) -> ScriptRuntimeSetup: ...
    def GetHelp(self) -> Tuple[str, String[,], String[,], str]: ...
    def Parse(self, args: Set(str), setup: ScriptRuntimeSetup, languageSetup: LanguageSetup, platform: PlatformAdaptationLayer) -> None: ...




class Style:
    Prompt = 0
    Out = 1
    Error = 2
    Warning = 3


class SuperConsole(BasicConsole):
    def __init__(self, commandLine: CommandLine, colorful: bool): ...
    def ReadLine(self, autoIndentSize: int) -> str: ...
