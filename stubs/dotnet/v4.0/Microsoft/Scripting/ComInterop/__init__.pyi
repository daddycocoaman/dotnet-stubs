from typing import Tuple, Set, Iterable, List


class ComBinder:
    def CanComBind(value: Object) -> bool: ...
    def GetDynamicMemberNames(value: Object) -> Iterable[str]: ...
    def IsComObject(value: Object) -> bool: ...
    def TryBindGetIndex(binder: GetIndexBinder, instance: DynamicMetaObject, args: Set(DynamicMetaObject)) -> Tuple[bool, DynamicMetaObject]: ...
    @overload
    def TryBindGetMember(binder: GetMemberBinder, instance: DynamicMetaObject) -> Tuple[bool, DynamicMetaObject]: ...
    @overload
    def TryBindGetMember(binder: GetMemberBinder, instance: DynamicMetaObject, delayInvocation: bool) -> Tuple[bool, DynamicMetaObject]: ...
    def TryBindInvoke(binder: InvokeBinder, instance: DynamicMetaObject, args: Set(DynamicMetaObject)) -> Tuple[bool, DynamicMetaObject]: ...
    def TryBindInvokeMember(binder: InvokeMemberBinder, instance: DynamicMetaObject, args: Set(DynamicMetaObject)) -> Tuple[bool, DynamicMetaObject]: ...
    def TryBindSetIndex(binder: SetIndexBinder, instance: DynamicMetaObject, args: Set(DynamicMetaObject), value: DynamicMetaObject) -> Tuple[bool, DynamicMetaObject]: ...
    def TryBindSetMember(binder: SetMemberBinder, instance: DynamicMetaObject, value: DynamicMetaObject) -> Tuple[bool, DynamicMetaObject]: ...
    def TryConvert(binder: ConvertBinder, instance: DynamicMetaObject) -> Tuple[bool, DynamicMetaObject]: ...


class ComMethodDesc:
    @property
    def DispId(self) -> int: ...
    @property
    def IsDataMember(self) -> bool: ...
    @property
    def IsPropertyGet(self) -> bool: ...
    @property
    def IsPropertyPut(self) -> bool: ...
    @property
    def IsPropertyPutRef(self) -> bool: ...
    @property
    def Name(self) -> str: ...


class ComParamDesc:
    @property
    def ByReference(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsOptional(self) -> bool: ...
    @property
    def IsOut(self) -> bool: ...
    @property
    def ParameterType(self) -> Type: ...
    def ToString(self) -> str: ...


class ComType:
    Class = 0
    Enum = 1
    Interface = 2


class ComTypeClassDesc(ComTypeDesc):
    def CreateInstance(self) -> Object: ...
    def GetMetaObject(self, parameter: Expression) -> DynamicMetaObject: ...


class ComTypeDesc(ComTypeLibMemberDesc):
    @property
    def TypeLib(self) -> ComTypeLibDesc: ...
    @property
    def TypeName(self) -> str: ...


class ComTypeEnumDesc(ComTypeDesc):
    def GetMemberNames(self) -> Set(str): ...
    def GetValue(self, enumValueName: str) -> Object: ...
    def ToString(self) -> str: ...


class ComTypeLibDesc:
    def CreateFromGuid(typeLibGuid: Guid) -> ComTypeLibInfo: ...
    def CreateFromObject(rcw: Object) -> ComTypeLibInfo: ...
    @property
    def Documentation(self) -> str: ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def Name(self) -> str: ...
    @property
    def VersionMajor(self) -> Int16: ...
    @property
    def VersionMinor(self) -> Int16: ...
    def GetMemberNames(self) -> Set(str): ...
    def GetTypeLibObjectDesc(self, member: str) -> Object: ...
    def ToString(self) -> str: ...


class ComTypeLibInfo:
    @property
    def Guid(self) -> Guid: ...
    @property
    def Name(self) -> str: ...
    @property
    def TypeLibDesc(self) -> ComTypeLibDesc: ...
    @property
    def VersionMajor(self) -> Int16: ...
    @property
    def VersionMinor(self) -> Int16: ...
    def GetMemberNames(self) -> Set(str): ...


class ComTypeLibMemberDesc:
    @property
    def Kind(self) -> ComType: ...
