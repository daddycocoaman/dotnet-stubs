from typing import Tuple, Set, Iterable, List


class TypeGen:
    def __init__(self, myAssembly: AssemblyGen, myType: TypeBuilder): ...
    @overload
    def AddStaticField(self, fieldType: Type, name: str) -> FieldBuilder: ...
    @overload
    def AddStaticField(self, fieldType: Type, attributes: FieldAttributes, name: str) -> FieldBuilder: ...
    def DefineExplicitInterfaceImplementation(self, baseMethod: MethodInfo) -> ILGen: ...
    def DefineMethodOverride(self, baseMethod: MethodInfo) -> ILGen: ...
    def FinishType(self) -> Type: ...
    @property
    def TypeBuilder(self) -> TypeBuilder: ...
    @property
    def TypeInitializer(self) -> ILGen: ...
    def ToString(self) -> str: ...
