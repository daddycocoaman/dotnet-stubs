from typing import Tuple, Set, Iterable, List


class ConnectWSMan(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...


class DisableWSManCredSSP(PSRemotingActivity):
    def __init__(self): ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Role(self) -> InArgument: ...
    @Role.setter
    def Role(self, value: InArgument) -> None: ...


class DisconnectWSMan(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...


class EnableWSManCredSSP(PSRemotingActivity):
    def __init__(self): ...
    @property
    def DelegateComputer(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Role(self) -> InArgument: ...
    @DelegateComputer.setter
    def DelegateComputer(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @Role.setter
    def Role(self, value: InArgument) -> None: ...


class GetWSManCredSSP(PSRemotingActivity):
    def __init__(self): ...
    @property
    def PSCommandName(self) -> str: ...


class GetWSManInstance(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Associations(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def BasePropertiesOnly(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def Dialect(self) -> InArgument: ...
    @property
    def Enumerate(self) -> InArgument: ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def Fragment(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ResourceURI(self) -> InArgument: ...
    @property
    def ReturnType(self) -> InArgument: ...
    @property
    def SelectorSet(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def Shallow(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Associations.setter
    def Associations(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @BasePropertiesOnly.setter
    def BasePropertiesOnly(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @Dialect.setter
    def Dialect(self, value: InArgument) -> None: ...
    @Enumerate.setter
    def Enumerate(self, value: InArgument) -> None: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @Fragment.setter
    def Fragment(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @ResourceURI.setter
    def ResourceURI(self, value: InArgument) -> None: ...
    @ReturnType.setter
    def ReturnType(self, value: InArgument) -> None: ...
    @SelectorSet.setter
    def SelectorSet(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @Shallow.setter
    def Shallow(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...


class InvokeWSManAction(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Action(self) -> InArgument: ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def FilePath(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ResourceURI(self) -> InArgument: ...
    @property
    def SelectorSet(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @property
    def ValueSet(self) -> InArgument: ...
    @Action.setter
    def Action(self, value: InArgument) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @FilePath.setter
    def FilePath(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @ResourceURI.setter
    def ResourceURI(self, value: InArgument) -> None: ...
    @SelectorSet.setter
    def SelectorSet(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...
    @ValueSet.setter
    def ValueSet(self, value: InArgument) -> None: ...


class NewWSManInstance(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def FilePath(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ResourceURI(self) -> InArgument: ...
    @property
    def SelectorSet(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @property
    def ValueSet(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @FilePath.setter
    def FilePath(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @ResourceURI.setter
    def ResourceURI(self, value: InArgument) -> None: ...
    @SelectorSet.setter
    def SelectorSet(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...
    @ValueSet.setter
    def ValueSet(self, value: InArgument) -> None: ...


class NewWSManSessionOption(PSActivity):
    def __init__(self): ...
    @property
    def NoEncryption(self) -> InArgument: ...
    @property
    def OperationTimeout(self) -> InArgument: ...
    @property
    def ProxyAccessType(self) -> InArgument: ...
    @property
    def ProxyAuthentication(self) -> InArgument: ...
    @property
    def ProxyCredential(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def SkipCACheck(self) -> InArgument: ...
    @property
    def SkipCNCheck(self) -> InArgument: ...
    @property
    def SkipRevocationCheck(self) -> InArgument: ...
    @property
    def SPNPort(self) -> InArgument: ...
    @property
    def UseUTF16(self) -> InArgument: ...
    @NoEncryption.setter
    def NoEncryption(self, value: InArgument) -> None: ...
    @OperationTimeout.setter
    def OperationTimeout(self, value: InArgument) -> None: ...
    @ProxyAccessType.setter
    def ProxyAccessType(self, value: InArgument) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: InArgument) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: InArgument) -> None: ...
    @SkipCACheck.setter
    def SkipCACheck(self, value: InArgument) -> None: ...
    @SkipCNCheck.setter
    def SkipCNCheck(self, value: InArgument) -> None: ...
    @SkipRevocationCheck.setter
    def SkipRevocationCheck(self, value: InArgument) -> None: ...
    @SPNPort.setter
    def SPNPort(self, value: InArgument) -> None: ...
    @UseUTF16.setter
    def UseUTF16(self, value: InArgument) -> None: ...


class RemoveWSManInstance(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ResourceURI(self) -> InArgument: ...
    @property
    def SelectorSet(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @ResourceURI.setter
    def ResourceURI(self, value: InArgument) -> None: ...
    @SelectorSet.setter
    def SelectorSet(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...


class SetWSManInstance(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConnectionURI(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def Dialect(self) -> InArgument: ...
    @property
    def FilePath(self) -> InArgument: ...
    @property
    def Fragment(self) -> InArgument: ...
    @property
    def OptionSet(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ResourceURI(self) -> InArgument: ...
    @property
    def SelectorSet(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @property
    def ValueSet(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConnectionURI.setter
    def ConnectionURI(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @Dialect.setter
    def Dialect(self, value: InArgument) -> None: ...
    @FilePath.setter
    def FilePath(self, value: InArgument) -> None: ...
    @Fragment.setter
    def Fragment(self, value: InArgument) -> None: ...
    @OptionSet.setter
    def OptionSet(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @ResourceURI.setter
    def ResourceURI(self, value: InArgument) -> None: ...
    @SelectorSet.setter
    def SelectorSet(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...
    @ValueSet.setter
    def ValueSet(self, value: InArgument) -> None: ...


class SetWSManQuickConfig(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def SkipNetworkProfileCheck(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @SkipNetworkProfileCheck.setter
    def SkipNetworkProfileCheck(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...


class TestWSMan(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...
