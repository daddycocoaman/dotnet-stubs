__all__ = ['Cim','Cmdletization','Commands','DesiredStateConfiguration']
from typing import Tuple, Set, Iterable, List


class AdapterCodeMethods:
    def ConvertDNWithBinaryToString(deInstance: PSObject, dnWithBinaryInstance: PSObject) -> str: ...
    def ConvertLargeIntegerToInt64(deInstance: PSObject, largeIntegerInstance: PSObject) -> Int64: ...


class DeserializingTypeConverter:
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, sourceValue: PSObject, destinationType: Type) -> bool: ...
    @overload
    def CanConvertFrom(self, sourceValue: Object, destinationType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, sourceValue: Object, destinationType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, sourceValue: PSObject, destinationType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, sourceValue: PSObject, destinationType: Type, formatProvider: IFormatProvider, ignoreCase: bool) -> Object: ...
    @overload
    def ConvertFrom(self, sourceValue: Object, destinationType: Type, formatProvider: IFormatProvider, ignoreCase: bool) -> Object: ...
    @overload
    def ConvertTo(self, sourceValue: Object, destinationType: Type, formatProvider: IFormatProvider, ignoreCase: bool) -> Object: ...
    @overload
    def ConvertTo(self, sourceValue: PSObject, destinationType: Type, formatProvider: IFormatProvider, ignoreCase: bool) -> Object: ...
    def GetFormatViewDefinitionInstanceId(instance: PSObject) -> Guid: ...
    def GetInvocationInfo(instance: PSObject) -> PSObject: ...
    def GetParameterSetMetadataFlags(instance: PSObject) -> UInt32: ...


class ExecutionPolicy:
    Unrestricted = 0
    RemoteSigned = 1
    AllSigned = 2
    Restricted = 3
    Default = 3
    Bypass = 4
    Undefined = 5


class ExecutionPolicyScope:
    Process = 0
    CurrentUser = 1
    LocalMachine = 2
    UserPolicy = 3
    MachinePolicy = 4


class PSAuthorizationManager:
    def __init__(self, shellId: str): ...


class PSCorePSSnapIn:
    def __init__(self): ...
    @property
    def Description(self) -> str: ...
    @property
    def DescriptionResource(self) -> str: ...
    @property
    def Formats(self) -> Set(str): ...
    @property
    def Name(self) -> str: ...
    @property
    def Types(self) -> Set(str): ...
    @property
    def Vendor(self) -> str: ...
    @property
    def VendorResource(self) -> str: ...


class ToStringCodeMethods:
    def PropertyValueCollection(instance: PSObject) -> str: ...
    def Type(instance: PSObject) -> str: ...
    def XmlNode(instance: PSObject) -> str: ...
    def XmlNodeList(instance: PSObject) -> str: ...
