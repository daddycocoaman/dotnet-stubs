from typing import Tuple, Set, Iterable, List


class DisablePSRemoting(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...


class DisablePSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoServiceRestart(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: InArgument) -> None: ...


class EnablePSRemoting(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def SkipNetworkProfileCheck(self) -> InArgument: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @SkipNetworkProfileCheck.setter
    def SkipNetworkProfileCheck(self, value: InArgument) -> None: ...


class EnablePSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoServiceRestart(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def SecurityDescriptorSddl(self) -> InArgument: ...
    @property
    def SkipNetworkProfileCheck(self) -> InArgument: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: InArgument) -> None: ...
    @SecurityDescriptorSddl.setter
    def SecurityDescriptorSddl(self, value: InArgument) -> None: ...
    @SkipNetworkProfileCheck.setter
    def SkipNetworkProfileCheck(self, value: InArgument) -> None: ...


class ForEachObject(PSActivity):
    def __init__(self): ...
    @property
    def ArgumentList(self) -> InArgument: ...
    @property
    def Begin(self) -> InArgument: ...
    @property
    def End(self) -> InArgument: ...
    @property
    def InputObject(self) -> InArgument: ...
    @property
    def MemberName(self) -> InArgument: ...
    @property
    def Process(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def RemainingScripts(self) -> InArgument: ...
    @ArgumentList.setter
    def ArgumentList(self, value: InArgument) -> None: ...
    @Begin.setter
    def Begin(self, value: InArgument) -> None: ...
    @End.setter
    def End(self, value: InArgument) -> None: ...
    @InputObject.setter
    def InputObject(self, value: InArgument) -> None: ...
    @MemberName.setter
    def MemberName(self, value: InArgument) -> None: ...
    @Process.setter
    def Process(self, value: InArgument) -> None: ...
    @RemainingScripts.setter
    def RemainingScripts(self, value: InArgument) -> None: ...


class GetCommand(PSRemotingActivity):
    def __init__(self): ...
    @property
    def All(self) -> InArgument: ...
    @property
    def ArgumentList(self) -> InArgument: ...
    @property
    def CommandType(self) -> InArgument: ...
    @property
    def FullyQualifiedModule(self) -> InArgument: ...
    @property
    def ListImported(self) -> InArgument: ...
    @property
    def Module(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def Noun(self) -> InArgument: ...
    @property
    def ParameterName(self) -> InArgument: ...
    @property
    def ParameterType(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ShowCommandInfo(self) -> InArgument: ...
    @property
    def Syntax(self) -> InArgument: ...
    @property
    def TotalCount(self) -> InArgument: ...
    @property
    def Verb(self) -> InArgument: ...
    @All.setter
    def All(self, value: InArgument) -> None: ...
    @ArgumentList.setter
    def ArgumentList(self, value: InArgument) -> None: ...
    @CommandType.setter
    def CommandType(self, value: InArgument) -> None: ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: InArgument) -> None: ...
    @ListImported.setter
    def ListImported(self, value: InArgument) -> None: ...
    @Module.setter
    def Module(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @Noun.setter
    def Noun(self, value: InArgument) -> None: ...
    @ParameterName.setter
    def ParameterName(self, value: InArgument) -> None: ...
    @ParameterType.setter
    def ParameterType(self, value: InArgument) -> None: ...
    @ShowCommandInfo.setter
    def ShowCommandInfo(self, value: InArgument) -> None: ...
    @Syntax.setter
    def Syntax(self, value: InArgument) -> None: ...
    @TotalCount.setter
    def TotalCount(self, value: InArgument) -> None: ...
    @Verb.setter
    def Verb(self, value: InArgument) -> None: ...


class GetHelp(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Category(self) -> InArgument: ...
    @property
    def Component(self) -> InArgument: ...
    @property
    def Detailed(self) -> InArgument: ...
    @property
    def Examples(self) -> InArgument: ...
    @property
    def Full(self) -> InArgument: ...
    @property
    def Functionality(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def Online(self) -> InArgument: ...
    @property
    def Parameter(self) -> InArgument: ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Role(self) -> InArgument: ...
    @property
    def ShowWindow(self) -> InArgument: ...
    @Category.setter
    def Category(self, value: InArgument) -> None: ...
    @Component.setter
    def Component(self, value: InArgument) -> None: ...
    @Detailed.setter
    def Detailed(self, value: InArgument) -> None: ...
    @Examples.setter
    def Examples(self, value: InArgument) -> None: ...
    @Full.setter
    def Full(self, value: InArgument) -> None: ...
    @Functionality.setter
    def Functionality(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @Online.setter
    def Online(self, value: InArgument) -> None: ...
    @Parameter.setter
    def Parameter(self, value: InArgument) -> None: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...
    @Role.setter
    def Role(self, value: InArgument) -> None: ...
    @ShowWindow.setter
    def ShowWindow(self, value: InArgument) -> None: ...


class GetJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def After(self) -> InArgument: ...
    @property
    def Before(self) -> InArgument: ...
    @property
    def ChildJobState(self) -> InArgument: ...
    @property
    def Command(self) -> InArgument: ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def HasMoreData(self) -> InArgument: ...
    @property
    def IncludeChildJob(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def Newest(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @After.setter
    def After(self, value: InArgument) -> None: ...
    @Before.setter
    def Before(self, value: InArgument) -> None: ...
    @ChildJobState.setter
    def ChildJobState(self, value: InArgument) -> None: ...
    @Command.setter
    def Command(self, value: InArgument) -> None: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @HasMoreData.setter
    def HasMoreData(self, value: InArgument) -> None: ...
    @IncludeChildJob.setter
    def IncludeChildJob(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @Newest.setter
    def Newest(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...


class GetModule(PSRemotingActivity):
    def __init__(self): ...
    @property
    def All(self) -> InArgument: ...
    @property
    def CimNamespace(self) -> InArgument: ...
    @property
    def CimResourceUri(self) -> InArgument: ...
    @property
    def CimSession(self) -> InArgument: ...
    @property
    def FullyQualifiedName(self) -> InArgument: ...
    @property
    def ListAvailable(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSSession(self) -> InArgument: ...
    @property
    def Refresh(self) -> InArgument: ...
    @All.setter
    def All(self, value: InArgument) -> None: ...
    @CimNamespace.setter
    def CimNamespace(self, value: InArgument) -> None: ...
    @CimResourceUri.setter
    def CimResourceUri(self, value: InArgument) -> None: ...
    @CimSession.setter
    def CimSession(self, value: InArgument) -> None: ...
    @FullyQualifiedName.setter
    def FullyQualifiedName(self, value: InArgument) -> None: ...
    @ListAvailable.setter
    def ListAvailable(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @PSSession.setter
    def PSSession(self, value: InArgument) -> None: ...
    @Refresh.setter
    def Refresh(self, value: InArgument) -> None: ...


class GetPSSession(PSRemotingActivity):
    def __init__(self): ...
    @property
    def AllowRedirection(self) -> InArgument: ...
    @property
    def ApplicationName(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def CertificateThumbprint(self) -> InArgument: ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ConfigurationName(self) -> InArgument: ...
    @property
    def ConnectionUri(self) -> InArgument: ...
    @property
    def ContainerId(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def Port(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSSessionId(self) -> InArgument: ...
    @property
    def SessionOption(self) -> InArgument: ...
    @property
    def State(self) -> InArgument: ...
    @property
    def ThrottleLimit(self) -> InArgument: ...
    @property
    def UseSSL(self) -> InArgument: ...
    @property
    def VMId(self) -> InArgument: ...
    @property
    def VMName(self) -> InArgument: ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: InArgument) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: InArgument) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: InArgument) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: InArgument) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @Port.setter
    def Port(self, value: InArgument) -> None: ...
    @PSSessionId.setter
    def PSSessionId(self, value: InArgument) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: InArgument) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: InArgument) -> None: ...
    @VMId.setter
    def VMId(self, value: InArgument) -> None: ...
    @VMName.setter
    def VMName(self, value: InArgument) -> None: ...


class GetPSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...


class NewModuleManifest(PSRemotingActivity):
    def __init__(self): ...
    @property
    def AliasesToExport(self) -> InArgument: ...
    @property
    def Author(self) -> InArgument: ...
    @property
    def ClrVersion(self) -> InArgument: ...
    @property
    def CmdletsToExport(self) -> InArgument: ...
    @property
    def CompanyName(self) -> InArgument: ...
    @property
    def Copyright(self) -> InArgument: ...
    @property
    def DefaultCommandPrefix(self) -> InArgument: ...
    @property
    def Description(self) -> InArgument: ...
    @property
    def DotNetFrameworkVersion(self) -> InArgument: ...
    @property
    def DscResourcesToExport(self) -> InArgument: ...
    @property
    def FileList(self) -> InArgument: ...
    @property
    def FormatsToProcess(self) -> InArgument: ...
    @property
    def FunctionsToExport(self) -> InArgument: ...
    @property
    def Guid(self) -> InArgument: ...
    @property
    def HelpInfoUri(self) -> InArgument: ...
    @property
    def IconUri(self) -> InArgument: ...
    @property
    def LicenseUri(self) -> InArgument: ...
    @property
    def ModuleList(self) -> InArgument: ...
    @property
    def ModuleVersion(self) -> InArgument: ...
    @property
    def NestedModules(self) -> InArgument: ...
    @property
    def PassThru(self) -> InArgument: ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def PowerShellHostName(self) -> InArgument: ...
    @property
    def PowerShellHostVersion(self) -> InArgument: ...
    @property
    def PowerShellVersion(self) -> InArgument: ...
    @property
    def PrivateData(self) -> InArgument: ...
    @property
    def ProcessorArchitecture(self) -> InArgument: ...
    @property
    def ProjectUri(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def ReleaseNotes(self) -> InArgument: ...
    @property
    def RequiredAssemblies(self) -> InArgument: ...
    @property
    def RequiredModules(self) -> InArgument: ...
    @property
    def RootModule(self) -> InArgument: ...
    @property
    def ScriptsToProcess(self) -> InArgument: ...
    @property
    def Tags(self) -> InArgument: ...
    @property
    def TypesToProcess(self) -> InArgument: ...
    @property
    def VariablesToExport(self) -> InArgument: ...
    @AliasesToExport.setter
    def AliasesToExport(self, value: InArgument) -> None: ...
    @Author.setter
    def Author(self, value: InArgument) -> None: ...
    @ClrVersion.setter
    def ClrVersion(self, value: InArgument) -> None: ...
    @CmdletsToExport.setter
    def CmdletsToExport(self, value: InArgument) -> None: ...
    @CompanyName.setter
    def CompanyName(self, value: InArgument) -> None: ...
    @Copyright.setter
    def Copyright(self, value: InArgument) -> None: ...
    @DefaultCommandPrefix.setter
    def DefaultCommandPrefix(self, value: InArgument) -> None: ...
    @Description.setter
    def Description(self, value: InArgument) -> None: ...
    @DotNetFrameworkVersion.setter
    def DotNetFrameworkVersion(self, value: InArgument) -> None: ...
    @DscResourcesToExport.setter
    def DscResourcesToExport(self, value: InArgument) -> None: ...
    @FileList.setter
    def FileList(self, value: InArgument) -> None: ...
    @FormatsToProcess.setter
    def FormatsToProcess(self, value: InArgument) -> None: ...
    @FunctionsToExport.setter
    def FunctionsToExport(self, value: InArgument) -> None: ...
    @Guid.setter
    def Guid(self, value: InArgument) -> None: ...
    @HelpInfoUri.setter
    def HelpInfoUri(self, value: InArgument) -> None: ...
    @IconUri.setter
    def IconUri(self, value: InArgument) -> None: ...
    @LicenseUri.setter
    def LicenseUri(self, value: InArgument) -> None: ...
    @ModuleList.setter
    def ModuleList(self, value: InArgument) -> None: ...
    @ModuleVersion.setter
    def ModuleVersion(self, value: InArgument) -> None: ...
    @NestedModules.setter
    def NestedModules(self, value: InArgument) -> None: ...
    @PassThru.setter
    def PassThru(self, value: InArgument) -> None: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...
    @PowerShellHostName.setter
    def PowerShellHostName(self, value: InArgument) -> None: ...
    @PowerShellHostVersion.setter
    def PowerShellHostVersion(self, value: InArgument) -> None: ...
    @PowerShellVersion.setter
    def PowerShellVersion(self, value: InArgument) -> None: ...
    @PrivateData.setter
    def PrivateData(self, value: InArgument) -> None: ...
    @ProcessorArchitecture.setter
    def ProcessorArchitecture(self, value: InArgument) -> None: ...
    @ProjectUri.setter
    def ProjectUri(self, value: InArgument) -> None: ...
    @ReleaseNotes.setter
    def ReleaseNotes(self, value: InArgument) -> None: ...
    @RequiredAssemblies.setter
    def RequiredAssemblies(self, value: InArgument) -> None: ...
    @RequiredModules.setter
    def RequiredModules(self, value: InArgument) -> None: ...
    @RootModule.setter
    def RootModule(self, value: InArgument) -> None: ...
    @ScriptsToProcess.setter
    def ScriptsToProcess(self, value: InArgument) -> None: ...
    @Tags.setter
    def Tags(self, value: InArgument) -> None: ...
    @TypesToProcess.setter
    def TypesToProcess(self, value: InArgument) -> None: ...
    @VariablesToExport.setter
    def VariablesToExport(self, value: InArgument) -> None: ...


class NewPSTransportOption(PSActivity):
    def __init__(self): ...
    @property
    def IdleTimeoutSec(self) -> InArgument: ...
    @property
    def MaxConcurrentCommandsPerSession(self) -> InArgument: ...
    @property
    def MaxConcurrentUsers(self) -> InArgument: ...
    @property
    def MaxIdleTimeoutSec(self) -> InArgument: ...
    @property
    def MaxMemoryPerSessionMB(self) -> InArgument: ...
    @property
    def MaxProcessesPerSession(self) -> InArgument: ...
    @property
    def MaxSessions(self) -> InArgument: ...
    @property
    def MaxSessionsPerUser(self) -> InArgument: ...
    @property
    def OutputBufferingMode(self) -> InArgument: ...
    @property
    def ProcessIdleTimeoutSec(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @IdleTimeoutSec.setter
    def IdleTimeoutSec(self, value: InArgument) -> None: ...
    @MaxConcurrentCommandsPerSession.setter
    def MaxConcurrentCommandsPerSession(self, value: InArgument) -> None: ...
    @MaxConcurrentUsers.setter
    def MaxConcurrentUsers(self, value: InArgument) -> None: ...
    @MaxIdleTimeoutSec.setter
    def MaxIdleTimeoutSec(self, value: InArgument) -> None: ...
    @MaxMemoryPerSessionMB.setter
    def MaxMemoryPerSessionMB(self, value: InArgument) -> None: ...
    @MaxProcessesPerSession.setter
    def MaxProcessesPerSession(self, value: InArgument) -> None: ...
    @MaxSessions.setter
    def MaxSessions(self, value: InArgument) -> None: ...
    @MaxSessionsPerUser.setter
    def MaxSessionsPerUser(self, value: InArgument) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: InArgument) -> None: ...
    @ProcessIdleTimeoutSec.setter
    def ProcessIdleTimeoutSec(self, value: InArgument) -> None: ...


class ReceiveJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def AutoRemoveJob(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Keep(self) -> InArgument: ...
    @property
    def Location(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoRecurse(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Session(self) -> InArgument: ...
    @property
    def Wait(self) -> InArgument: ...
    @property
    def WriteEvents(self) -> InArgument: ...
    @property
    def WriteJobInResults(self) -> InArgument: ...
    @AutoRemoveJob.setter
    def AutoRemoveJob(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Keep.setter
    def Keep(self, value: InArgument) -> None: ...
    @Location.setter
    def Location(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoRecurse.setter
    def NoRecurse(self, value: InArgument) -> None: ...
    @Session.setter
    def Session(self, value: InArgument) -> None: ...
    @Wait.setter
    def Wait(self, value: InArgument) -> None: ...
    @WriteEvents.setter
    def WriteEvents(self, value: InArgument) -> None: ...
    @WriteJobInResults.setter
    def WriteJobInResults(self, value: InArgument) -> None: ...


class RegisterPSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def AccessMode(self) -> InArgument: ...
    @property
    def ApplicationBase(self) -> InArgument: ...
    @property
    def AssemblyName(self) -> InArgument: ...
    @property
    def ConfigurationTypeName(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def MaximumReceivedDataSizePerCommandMB(self) -> InArgument: ...
    @property
    def MaximumReceivedObjectSizeMB(self) -> InArgument: ...
    @property
    def ModulesToImport(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoServiceRestart(self) -> InArgument: ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def ProcessorArchitecture(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSVersion(self) -> InArgument: ...
    @property
    def RunAsCredential(self) -> InArgument: ...
    @property
    def SecurityDescriptorSddl(self) -> InArgument: ...
    @property
    def SessionType(self) -> InArgument: ...
    @property
    def SessionTypeOption(self) -> InArgument: ...
    @property
    def ShowSecurityDescriptorUI(self) -> InArgument: ...
    @property
    def StartupScript(self) -> InArgument: ...
    @property
    def ThreadApartmentState(self) -> InArgument: ...
    @property
    def ThreadOptions(self) -> InArgument: ...
    @property
    def TransportOption(self) -> InArgument: ...
    @property
    def UseSharedProcess(self) -> InArgument: ...
    @AccessMode.setter
    def AccessMode(self, value: InArgument) -> None: ...
    @ApplicationBase.setter
    def ApplicationBase(self, value: InArgument) -> None: ...
    @AssemblyName.setter
    def AssemblyName(self, value: InArgument) -> None: ...
    @ConfigurationTypeName.setter
    def ConfigurationTypeName(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @MaximumReceivedDataSizePerCommandMB.setter
    def MaximumReceivedDataSizePerCommandMB(self, value: InArgument) -> None: ...
    @MaximumReceivedObjectSizeMB.setter
    def MaximumReceivedObjectSizeMB(self, value: InArgument) -> None: ...
    @ModulesToImport.setter
    def ModulesToImport(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: InArgument) -> None: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...
    @ProcessorArchitecture.setter
    def ProcessorArchitecture(self, value: InArgument) -> None: ...
    @PSVersion.setter
    def PSVersion(self, value: InArgument) -> None: ...
    @RunAsCredential.setter
    def RunAsCredential(self, value: InArgument) -> None: ...
    @SecurityDescriptorSddl.setter
    def SecurityDescriptorSddl(self, value: InArgument) -> None: ...
    @SessionType.setter
    def SessionType(self, value: InArgument) -> None: ...
    @SessionTypeOption.setter
    def SessionTypeOption(self, value: InArgument) -> None: ...
    @ShowSecurityDescriptorUI.setter
    def ShowSecurityDescriptorUI(self, value: InArgument) -> None: ...
    @StartupScript.setter
    def StartupScript(self, value: InArgument) -> None: ...
    @ThreadApartmentState.setter
    def ThreadApartmentState(self, value: InArgument) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: InArgument) -> None: ...
    @TransportOption.setter
    def TransportOption(self, value: InArgument) -> None: ...
    @UseSharedProcess.setter
    def UseSharedProcess(self, value: InArgument) -> None: ...


class RemoveJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Command(self) -> InArgument: ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @Command.setter
    def Command(self, value: InArgument) -> None: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...


class RemovePSSession(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ComputerName(self) -> InArgument: ...
    @property
    def ContainerId(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSSessionId(self) -> InArgument: ...
    @property
    def Session(self) -> InArgument: ...
    @property
    def VMId(self) -> InArgument: ...
    @property
    def VMName(self) -> InArgument: ...
    @ComputerName.setter
    def ComputerName(self, value: InArgument) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @PSSessionId.setter
    def PSSessionId(self, value: InArgument) -> None: ...
    @Session.setter
    def Session(self, value: InArgument) -> None: ...
    @VMId.setter
    def VMId(self, value: InArgument) -> None: ...
    @VMName.setter
    def VMName(self, value: InArgument) -> None: ...


class ResumeJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @property
    def Wait(self) -> InArgument: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...
    @Wait.setter
    def Wait(self, value: InArgument) -> None: ...


class SaveHelp(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def DestinationPath(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def FullyQualifiedModule(self) -> InArgument: ...
    @property
    def LiteralPath(self) -> InArgument: ...
    @property
    def Module(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def UICulture(self) -> InArgument: ...
    @property
    def UseDefaultCredentials(self) -> InArgument: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @DestinationPath.setter
    def DestinationPath(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: InArgument) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: InArgument) -> None: ...
    @Module.setter
    def Module(self, value: InArgument) -> None: ...
    @UICulture.setter
    def UICulture(self, value: InArgument) -> None: ...
    @UseDefaultCredentials.setter
    def UseDefaultCredentials(self, value: InArgument) -> None: ...


class SetPSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def AccessMode(self) -> InArgument: ...
    @property
    def ApplicationBase(self) -> InArgument: ...
    @property
    def AssemblyName(self) -> InArgument: ...
    @property
    def ConfigurationTypeName(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def MaximumReceivedDataSizePerCommandMB(self) -> InArgument: ...
    @property
    def MaximumReceivedObjectSizeMB(self) -> InArgument: ...
    @property
    def ModulesToImport(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoServiceRestart(self) -> InArgument: ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSVersion(self) -> InArgument: ...
    @property
    def RunAsCredential(self) -> InArgument: ...
    @property
    def SecurityDescriptorSddl(self) -> InArgument: ...
    @property
    def SessionTypeOption(self) -> InArgument: ...
    @property
    def ShowSecurityDescriptorUI(self) -> InArgument: ...
    @property
    def StartupScript(self) -> InArgument: ...
    @property
    def ThreadApartmentState(self) -> InArgument: ...
    @property
    def ThreadOptions(self) -> InArgument: ...
    @property
    def TransportOption(self) -> InArgument: ...
    @property
    def UseSharedProcess(self) -> InArgument: ...
    @AccessMode.setter
    def AccessMode(self, value: InArgument) -> None: ...
    @ApplicationBase.setter
    def ApplicationBase(self, value: InArgument) -> None: ...
    @AssemblyName.setter
    def AssemblyName(self, value: InArgument) -> None: ...
    @ConfigurationTypeName.setter
    def ConfigurationTypeName(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @MaximumReceivedDataSizePerCommandMB.setter
    def MaximumReceivedDataSizePerCommandMB(self, value: InArgument) -> None: ...
    @MaximumReceivedObjectSizeMB.setter
    def MaximumReceivedObjectSizeMB(self, value: InArgument) -> None: ...
    @ModulesToImport.setter
    def ModulesToImport(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: InArgument) -> None: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...
    @PSVersion.setter
    def PSVersion(self, value: InArgument) -> None: ...
    @RunAsCredential.setter
    def RunAsCredential(self, value: InArgument) -> None: ...
    @SecurityDescriptorSddl.setter
    def SecurityDescriptorSddl(self, value: InArgument) -> None: ...
    @SessionTypeOption.setter
    def SessionTypeOption(self, value: InArgument) -> None: ...
    @ShowSecurityDescriptorUI.setter
    def ShowSecurityDescriptorUI(self, value: InArgument) -> None: ...
    @StartupScript.setter
    def StartupScript(self, value: InArgument) -> None: ...
    @ThreadApartmentState.setter
    def ThreadApartmentState(self, value: InArgument) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: InArgument) -> None: ...
    @TransportOption.setter
    def TransportOption(self, value: InArgument) -> None: ...
    @UseSharedProcess.setter
    def UseSharedProcess(self, value: InArgument) -> None: ...


class StartJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def ArgumentList(self) -> InArgument: ...
    @property
    def Authentication(self) -> InArgument: ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def DefinitionName(self) -> InArgument: ...
    @property
    def DefinitionPath(self) -> InArgument: ...
    @property
    def FilePath(self) -> InArgument: ...
    @property
    def InitializationScript(self) -> InArgument: ...
    @property
    def InputObject(self) -> InArgument: ...
    @property
    def LiteralPath(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def PSVersion(self) -> InArgument: ...
    @property
    def RunAs32(self) -> InArgument: ...
    @property
    def ScriptBlock(self) -> InArgument: ...
    @property
    def Type(self) -> InArgument: ...
    @ArgumentList.setter
    def ArgumentList(self, value: InArgument) -> None: ...
    @Authentication.setter
    def Authentication(self, value: InArgument) -> None: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @DefinitionName.setter
    def DefinitionName(self, value: InArgument) -> None: ...
    @DefinitionPath.setter
    def DefinitionPath(self, value: InArgument) -> None: ...
    @FilePath.setter
    def FilePath(self, value: InArgument) -> None: ...
    @InitializationScript.setter
    def InitializationScript(self, value: InArgument) -> None: ...
    @InputObject.setter
    def InputObject(self, value: InArgument) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @PSVersion.setter
    def PSVersion(self, value: InArgument) -> None: ...
    @RunAs32.setter
    def RunAs32(self, value: InArgument) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: InArgument) -> None: ...
    @Type.setter
    def Type(self, value: InArgument) -> None: ...


class StopJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PassThru(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @PassThru.setter
    def PassThru(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...


class SuspendJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @property
    def Wait(self) -> InArgument: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...
    @Wait.setter
    def Wait(self, value: InArgument) -> None: ...


class TestModuleManifest(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...


class TestPSSessionConfigurationFile(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Path(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Path.setter
    def Path(self, value: InArgument) -> None: ...


class UnregisterPSSessionConfiguration(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def NoServiceRestart(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: InArgument) -> None: ...


class UpdateHelp(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Credential(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def FullyQualifiedModule(self) -> InArgument: ...
    @property
    def LiteralPath(self) -> InArgument: ...
    @property
    def Module(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Recurse(self) -> InArgument: ...
    @property
    def SourcePath(self) -> InArgument: ...
    @property
    def UICulture(self) -> InArgument: ...
    @property
    def UseDefaultCredentials(self) -> InArgument: ...
    @Credential.setter
    def Credential(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: InArgument) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: InArgument) -> None: ...
    @Module.setter
    def Module(self, value: InArgument) -> None: ...
    @Recurse.setter
    def Recurse(self, value: InArgument) -> None: ...
    @SourcePath.setter
    def SourcePath(self, value: InArgument) -> None: ...
    @UICulture.setter
    def UICulture(self, value: InArgument) -> None: ...
    @UseDefaultCredentials.setter
    def UseDefaultCredentials(self, value: InArgument) -> None: ...


class WaitJob(PSRemotingActivity):
    def __init__(self): ...
    @property
    def Any(self) -> InArgument: ...
    @property
    def Filter(self) -> InArgument: ...
    @property
    def Force(self) -> InArgument: ...
    @property
    def InstanceId(self) -> InArgument: ...
    @property
    def Job(self) -> InArgument: ...
    @property
    def JobId(self) -> InArgument: ...
    @property
    def Name(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def State(self) -> InArgument: ...
    @property
    def Timeout(self) -> InArgument: ...
    @Any.setter
    def Any(self, value: InArgument) -> None: ...
    @Filter.setter
    def Filter(self, value: InArgument) -> None: ...
    @Force.setter
    def Force(self, value: InArgument) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: InArgument) -> None: ...
    @Job.setter
    def Job(self, value: InArgument) -> None: ...
    @JobId.setter
    def JobId(self, value: InArgument) -> None: ...
    @Name.setter
    def Name(self, value: InArgument) -> None: ...
    @State.setter
    def State(self, value: InArgument) -> None: ...
    @Timeout.setter
    def Timeout(self, value: InArgument) -> None: ...


class WhereObject(PSActivity):
    def __init__(self): ...
    @property
    def CContains(self) -> InArgument: ...
    @property
    def CEQ(self) -> InArgument: ...
    @property
    def CGE(self) -> InArgument: ...
    @property
    def CGT(self) -> InArgument: ...
    @property
    def CIn(self) -> InArgument: ...
    @property
    def CLE(self) -> InArgument: ...
    @property
    def CLike(self) -> InArgument: ...
    @property
    def CLT(self) -> InArgument: ...
    @property
    def CMatch(self) -> InArgument: ...
    @property
    def CNE(self) -> InArgument: ...
    @property
    def CNotContains(self) -> InArgument: ...
    @property
    def CNotIn(self) -> InArgument: ...
    @property
    def CNotLike(self) -> InArgument: ...
    @property
    def CNotMatch(self) -> InArgument: ...
    @property
    def Contains(self) -> InArgument: ...
    @property
    def EQ(self) -> InArgument: ...
    @property
    def FilterScript(self) -> InArgument: ...
    @property
    def GE(self) -> InArgument: ...
    @property
    def GT(self) -> InArgument: ...
    @property
    def In(self) -> InArgument: ...
    @property
    def InputObject(self) -> InArgument: ...
    @property
    def Is(self) -> InArgument: ...
    @property
    def IsNot(self) -> InArgument: ...
    @property
    def LE(self) -> InArgument: ...
    @property
    def Like(self) -> InArgument: ...
    @property
    def LT(self) -> InArgument: ...
    @property
    def Match(self) -> InArgument: ...
    @property
    def NE(self) -> InArgument: ...
    @property
    def NotContains(self) -> InArgument: ...
    @property
    def NotIn(self) -> InArgument: ...
    @property
    def NotLike(self) -> InArgument: ...
    @property
    def NotMatch(self) -> InArgument: ...
    @property
    def Property(self) -> InArgument: ...
    @property
    def PSCommandName(self) -> str: ...
    @property
    def Value(self) -> InArgument: ...
    @CContains.setter
    def CContains(self, value: InArgument) -> None: ...
    @CEQ.setter
    def CEQ(self, value: InArgument) -> None: ...
    @CGE.setter
    def CGE(self, value: InArgument) -> None: ...
    @CGT.setter
    def CGT(self, value: InArgument) -> None: ...
    @CIn.setter
    def CIn(self, value: InArgument) -> None: ...
    @CLE.setter
    def CLE(self, value: InArgument) -> None: ...
    @CLike.setter
    def CLike(self, value: InArgument) -> None: ...
    @CLT.setter
    def CLT(self, value: InArgument) -> None: ...
    @CMatch.setter
    def CMatch(self, value: InArgument) -> None: ...
    @CNE.setter
    def CNE(self, value: InArgument) -> None: ...
    @CNotContains.setter
    def CNotContains(self, value: InArgument) -> None: ...
    @CNotIn.setter
    def CNotIn(self, value: InArgument) -> None: ...
    @CNotLike.setter
    def CNotLike(self, value: InArgument) -> None: ...
    @CNotMatch.setter
    def CNotMatch(self, value: InArgument) -> None: ...
    @Contains.setter
    def Contains(self, value: InArgument) -> None: ...
    @EQ.setter
    def EQ(self, value: InArgument) -> None: ...
    @FilterScript.setter
    def FilterScript(self, value: InArgument) -> None: ...
    @GE.setter
    def GE(self, value: InArgument) -> None: ...
    @GT.setter
    def GT(self, value: InArgument) -> None: ...
    @In.setter
    def In(self, value: InArgument) -> None: ...
    @InputObject.setter
    def InputObject(self, value: InArgument) -> None: ...
    @Is.setter
    def Is(self, value: InArgument) -> None: ...
    @IsNot.setter
    def IsNot(self, value: InArgument) -> None: ...
    @LE.setter
    def LE(self, value: InArgument) -> None: ...
    @Like.setter
    def Like(self, value: InArgument) -> None: ...
    @LT.setter
    def LT(self, value: InArgument) -> None: ...
    @Match.setter
    def Match(self, value: InArgument) -> None: ...
    @NE.setter
    def NE(self, value: InArgument) -> None: ...
    @NotContains.setter
    def NotContains(self, value: InArgument) -> None: ...
    @NotIn.setter
    def NotIn(self, value: InArgument) -> None: ...
    @NotLike.setter
    def NotLike(self, value: InArgument) -> None: ...
    @NotMatch.setter
    def NotMatch(self, value: InArgument) -> None: ...
    @Property.setter
    def Property(self, value: InArgument) -> None: ...
    @Value.setter
    def Value(self, value: InArgument) -> None: ...
