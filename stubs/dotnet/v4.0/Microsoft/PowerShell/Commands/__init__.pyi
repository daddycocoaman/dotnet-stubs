__all__ = ['Internal','Management']
from typing import Tuple, Set, Iterable, List


class AddHistoryCommand:
    def __init__(self): ...
    @property
    def InputObject(self) -> Set(PSObject): ...
    @property
    def Passthru(self) -> SwitchParameter: ...
    @InputObject.setter
    def InputObject(self, value: Set(PSObject)) -> None: ...
    @Passthru.setter
    def Passthru(self, value: SwitchParameter) -> None: ...


class AddPSSnapinCommand(PSSnapInCommandBase):
    def __init__(self): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def PassThru(self) -> SwitchParameter: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @PassThru.setter
    def PassThru(self, value: SwitchParameter) -> None: ...


class AliasProvider(SessionStateProviderBase):
    def __init__(self): ...


class AliasProviderDynamicParameters:
    def __init__(self): ...
    @property
    def Options(self) -> ScopedItemOptions: ...
    @Options.setter
    def Options(self, value: ScopedItemOptions) -> None: ...


class ClearHistoryCommand:
    def __init__(self): ...
    @property
    def CommandLine(self) -> Set(str): ...
    @property
    def Count(self) -> int: ...
    @property
    def Id(self) -> Set(int): ...
    @property
    def Newest(self) -> SwitchParameter: ...
    @CommandLine.setter
    def CommandLine(self, value: Set(str)) -> None: ...
    @Count.setter
    def Count(self, value: int) -> None: ...
    @Id.setter
    def Id(self, value: Set(int)) -> None: ...
    @Newest.setter
    def Newest(self, value: SwitchParameter) -> None: ...


class ConnectPSSessionCommand(PSRunspaceCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Set(Uri): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def InstanceId(self) -> Set(Guid): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Port(self) -> int: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: SwitchParameter) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: str) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Set(Uri)) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Set(Guid)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: SwitchParameter) -> None: ...


class ConsoleCmdletsBase:
    pass


class DebugJobCommand:
    def __init__(self): ...
    @property
    def Id(self) -> int: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def Job(self) -> Job: ...
    @property
    def Name(self) -> str: ...
    @Id.setter
    def Id(self, value: int) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Guid) -> None: ...
    @Job.setter
    def Job(self, value: Job) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...


class DisablePSRemotingCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...


class DisablePSSessionConfigurationCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def NoServiceRestart(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: SwitchParameter) -> None: ...


class DisconnectPSSessionCommand(PSRunspaceCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def IdleTimeoutSec(self) -> int: ...
    @property
    def OutputBufferingMode(self) -> OutputBufferingMode: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @IdleTimeoutSec.setter
    def IdleTimeoutSec(self, value: int) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: OutputBufferingMode) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...


class EnablePSRemotingCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def SkipNetworkProfileCheck(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @SkipNetworkProfileCheck.setter
    def SkipNetworkProfileCheck(self, value: SwitchParameter) -> None: ...


class EnablePSSessionConfigurationCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def NoServiceRestart(self) -> SwitchParameter: ...
    @property
    def SecurityDescriptorSddl(self) -> str: ...
    @property
    def SkipNetworkProfileCheck(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: SwitchParameter) -> None: ...
    @SecurityDescriptorSddl.setter
    def SecurityDescriptorSddl(self, value: str) -> None: ...
    @SkipNetworkProfileCheck.setter
    def SkipNetworkProfileCheck(self, value: SwitchParameter) -> None: ...


class EnterPSHostProcessCommand:
    def __init__(self): ...
    @property
    def AppDomainName(self) -> str: ...
    @property
    def HostProcessInfo(self) -> PSHostProcessInfo: ...
    @property
    def Id(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def Process(self) -> Process: ...
    @AppDomainName.setter
    def AppDomainName(self, value: str) -> None: ...
    @HostProcessInfo.setter
    def HostProcessInfo(self, value: PSHostProcessInfo) -> None: ...
    @Id.setter
    def Id(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Process.setter
    def Process(self, value: Process) -> None: ...


class EnterPSSessionCommand(PSRemotingBaseCmdlet):
    def __init__(self): ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Uri: ...
    @property
    def ContainerId(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def EnableNetworkAccess(self) -> SwitchParameter: ...
    @property
    def Id(self) -> int: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def Name(self) -> str: ...
    @property
    def Session(self) -> PSSession: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def VMId(self) -> Guid: ...
    @property
    def VMName(self) -> str: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Uri) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @EnableNetworkAccess.setter
    def EnableNetworkAccess(self, value: SwitchParameter) -> None: ...
    @Id.setter
    def Id(self, value: int) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Guid) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Session.setter
    def Session(self, value: PSSession) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...
    @VMId.setter
    def VMId(self, value: Guid) -> None: ...
    @VMName.setter
    def VMName(self, value: str) -> None: ...


class EnvironmentProvider(SessionStateProviderBase):
    def __init__(self): ...


class ExitPSHostProcessCommand:
    def __init__(self): ...


class ExitPSSessionCommand(PSRemotingCmdlet):
    def __init__(self): ...


class ExportConsoleCommand(ConsoleCmdletsBase):
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def NoClobber(self) -> SwitchParameter: ...
    @property
    def Path(self) -> str: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @NoClobber.setter
    def NoClobber(self, value: SwitchParameter) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...


class ExportModuleMemberCommand:
    def __init__(self): ...
    @property
    def Alias(self) -> Set(str): ...
    @property
    def Cmdlet(self) -> Set(str): ...
    @property
    def Function(self) -> Set(str): ...
    @property
    def Variable(self) -> Set(str): ...
    @Alias.setter
    def Alias(self, value: Set(str)) -> None: ...
    @Cmdlet.setter
    def Cmdlet(self, value: Set(str)) -> None: ...
    @Function.setter
    def Function(self, value: Set(str)) -> None: ...
    @Variable.setter
    def Variable(self, value: Set(str)) -> None: ...


class FileSystemClearContentDynamicParameters:
    def __init__(self): ...
    @property
    def Stream(self) -> str: ...
    @Stream.setter
    def Stream(self, value: str) -> None: ...


class FileSystemCmdletProviderEncoding:
    Unknown = 0
    String = 1
    Unicode = 2
    Byte = 3
    BigEndianUnicode = 4
    UTF8 = 5
    UTF7 = 6
    UTF32 = 7
    Ascii = 8
    Default = 9
    Oem = 10
    BigEndianUTF32 = 11


class FileSystemContentDynamicParametersBase:
    def __init__(self): ...
    @property
    def Encoding(self) -> FileSystemCmdletProviderEncoding: ...
    @property
    def EncodingType(self) -> Encoding: ...
    @property
    def Stream(self) -> str: ...
    @property
    def UsingByteEncoding(self) -> bool: ...
    @property
    def WasStreamTypeSpecified(self) -> bool: ...
    @Encoding.setter
    def Encoding(self, value: FileSystemCmdletProviderEncoding) -> None: ...
    @Stream.setter
    def Stream(self, value: str) -> None: ...


class FileSystemContentReaderDynamicParameters(FileSystemContentDynamicParametersBase):
    def __init__(self): ...
    @property
    def Delimiter(self) -> str: ...
    @property
    def DelimiterSpecified(self) -> bool: ...
    @property
    def Raw(self) -> SwitchParameter: ...
    @property
    def Wait(self) -> SwitchParameter: ...
    @Delimiter.setter
    def Delimiter(self, value: str) -> None: ...
    @Raw.setter
    def Raw(self, value: SwitchParameter) -> None: ...
    @Wait.setter
    def Wait(self, value: SwitchParameter) -> None: ...


class FileSystemContentWriterDynamicParameters(FileSystemContentDynamicParametersBase):
    def __init__(self): ...
    @property
    def NoNewline(self) -> SwitchParameter: ...
    @NoNewline.setter
    def NoNewline(self, value: SwitchParameter) -> None: ...


class FileSystemItemProviderDynamicParameters:
    def __init__(self): ...
    @property
    def NewerThan(self) -> Nullable: ...
    @property
    def OlderThan(self) -> Nullable: ...
    @NewerThan.setter
    def NewerThan(self, value: Nullable) -> None: ...
    @OlderThan.setter
    def OlderThan(self, value: Nullable) -> None: ...


class FileSystemProvider:
    def __init__(self): ...
    def ClearContent(self, path: str) -> None: ...
    def ClearContentDynamicParameters(self, path: str) -> Object: ...
    def ClearProperty(self, path: str, propertiesToClear: Collection) -> None: ...
    def ClearPropertyDynamicParameters(self, path: str, propertiesToClear: Collection) -> Object: ...
    def GetContentReader(self, path: str) -> IContentReader: ...
    def GetContentReaderDynamicParameters(self, path: str) -> Object: ...
    def GetContentWriter(self, path: str) -> IContentWriter: ...
    def GetContentWriterDynamicParameters(self, path: str) -> Object: ...
    def GetHelpMaml(self, helpItemName: str, path: str) -> str: ...
    def GetProperty(self, path: str, providerSpecificPickList: Collection) -> None: ...
    def GetPropertyDynamicParameters(self, path: str, providerSpecificPickList: Collection) -> Object: ...
    def GetSecurityDescriptor(self, path: str, sections: AccessControlSections) -> None: ...
    def Mode(instance: PSObject) -> str: ...
    def NewSecurityDescriptorFromPath(self, path: str, sections: AccessControlSections) -> ObjectSecurity: ...
    def NewSecurityDescriptorOfType(self, type: str, sections: AccessControlSections) -> ObjectSecurity: ...
    def SetProperty(self, path: str, propertyToSet: PSObject) -> None: ...
    def SetPropertyDynamicParameters(self, path: str, propertyValue: PSObject) -> Object: ...
    def SetSecurityDescriptor(self, path: str, securityDescriptor: ObjectSecurity) -> None: ...


class FileSystemProviderGetItemDynamicParameters:
    def __init__(self): ...
    @property
    def Stream(self) -> Set(str): ...
    @Stream.setter
    def Stream(self, value: Set(str)) -> None: ...


class FileSystemProviderRemoveItemDynamicParameters:
    def __init__(self): ...
    @property
    def Stream(self) -> Set(str): ...
    @Stream.setter
    def Stream(self, value: Set(str)) -> None: ...


class ForEachObjectCommand:
    def __init__(self): ...
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def Begin(self) -> ScriptBlock: ...
    @property
    def End(self) -> ScriptBlock: ...
    @property
    def InputObject(self) -> PSObject: ...
    @property
    def MemberName(self) -> str: ...
    @property
    def Process(self) -> Set(ScriptBlock): ...
    @property
    def RemainingScripts(self) -> Set(ScriptBlock): ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @Begin.setter
    def Begin(self, value: ScriptBlock) -> None: ...
    @End.setter
    def End(self, value: ScriptBlock) -> None: ...
    @InputObject.setter
    def InputObject(self, value: PSObject) -> None: ...
    @MemberName.setter
    def MemberName(self, value: str) -> None: ...
    @Process.setter
    def Process(self, value: Set(ScriptBlock)) -> None: ...
    @RemainingScripts.setter
    def RemainingScripts(self, value: Set(ScriptBlock)) -> None: ...


class FormatDefaultCommand(FrontEndCommandBase):
    def __init__(self): ...


class FunctionProvider(SessionStateProviderBase):
    def __init__(self): ...


class FunctionProviderDynamicParameters:
    def __init__(self): ...
    @property
    def Options(self) -> ScopedItemOptions: ...
    @Options.setter
    def Options(self, value: ScopedItemOptions) -> None: ...


class GetCommandCommand:
    def __init__(self): ...
    @property
    def All(self) -> SwitchParameter: ...
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def CommandType(self) -> CommandTypes: ...
    @property
    def FullyQualifiedModule(self) -> Set(ModuleSpecification): ...
    @property
    def ListImported(self) -> SwitchParameter: ...
    @property
    def Module(self) -> Set(str): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Noun(self) -> Set(str): ...
    @property
    def ParameterName(self) -> Set(str): ...
    @property
    def ParameterType(self) -> Set(PSTypeName): ...
    @property
    def ShowCommandInfo(self) -> SwitchParameter: ...
    @property
    def Syntax(self) -> SwitchParameter: ...
    @property
    def TotalCount(self) -> int: ...
    @property
    def Verb(self) -> Set(str): ...
    @All.setter
    def All(self, value: SwitchParameter) -> None: ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @CommandType.setter
    def CommandType(self, value: CommandTypes) -> None: ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: Set(ModuleSpecification)) -> None: ...
    @ListImported.setter
    def ListImported(self, value: SwitchParameter) -> None: ...
    @Module.setter
    def Module(self, value: Set(str)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Noun.setter
    def Noun(self, value: Set(str)) -> None: ...
    @ParameterName.setter
    def ParameterName(self, value: Set(str)) -> None: ...
    @ParameterType.setter
    def ParameterType(self, value: Set(PSTypeName)) -> None: ...
    @ShowCommandInfo.setter
    def ShowCommandInfo(self, value: SwitchParameter) -> None: ...
    @Syntax.setter
    def Syntax(self, value: SwitchParameter) -> None: ...
    @TotalCount.setter
    def TotalCount(self, value: int) -> None: ...
    @Verb.setter
    def Verb(self, value: Set(str)) -> None: ...


class GetHelpCodeMethods:
    def GetHelpUri(commandInfoPSObject: PSObject) -> str: ...


class GetHelpCommand:
    def __init__(self): ...
    @property
    def Category(self) -> Set(str): ...
    @property
    def Component(self) -> Set(str): ...
    @property
    def Functionality(self) -> Set(str): ...
    @property
    def Name(self) -> str: ...
    @property
    def Online(self) -> SwitchParameter: ...
    @property
    def Parameter(self) -> str: ...
    @property
    def Path(self) -> str: ...
    @property
    def Role(self) -> Set(str): ...
    @property
    def ShowWindow(self) -> SwitchParameter: ...
    @Category.setter
    def Category(self, value: Set(str)) -> None: ...
    @Component.setter
    def Component(self, value: Set(str)) -> None: ...
    @Detailed.setter
    def Detailed(self, value: SwitchParameter) -> None: ...
    @Examples.setter
    def Examples(self, value: SwitchParameter) -> None: ...
    @Full.setter
    def Full(self, value: SwitchParameter) -> None: ...
    @Functionality.setter
    def Functionality(self, value: Set(str)) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Online.setter
    def Online(self, value: SwitchParameter) -> None: ...
    @Parameter.setter
    def Parameter(self, value: str) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @Role.setter
    def Role(self, value: Set(str)) -> None: ...
    @ShowWindow.setter
    def ShowWindow(self, value: SwitchParameter) -> None: ...


class GetHistoryCommand:
    def __init__(self): ...
    @property
    def Count(self) -> int: ...
    @property
    def Id(self) -> Set(Int64): ...
    @Count.setter
    def Count(self, value: int) -> None: ...
    @Id.setter
    def Id(self, value: Set(Int64)) -> None: ...


class GetJobCommand(JobCmdletBase):
    def __init__(self): ...
    @property
    def After(self) -> DateTime: ...
    @property
    def Before(self) -> DateTime: ...
    @property
    def ChildJobState(self) -> JobState: ...
    @property
    def HasMoreData(self) -> bool: ...
    @property
    def Id(self) -> Set(int): ...
    @property
    def IncludeChildJob(self) -> SwitchParameter: ...
    @property
    def Newest(self) -> int: ...
    @After.setter
    def After(self, value: DateTime) -> None: ...
    @Before.setter
    def Before(self, value: DateTime) -> None: ...
    @ChildJobState.setter
    def ChildJobState(self, value: JobState) -> None: ...
    @HasMoreData.setter
    def HasMoreData(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Set(int)) -> None: ...
    @IncludeChildJob.setter
    def IncludeChildJob(self, value: SwitchParameter) -> None: ...
    @Newest.setter
    def Newest(self, value: int) -> None: ...


class GetModuleCommand(ModuleCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def All(self) -> SwitchParameter: ...
    @property
    def CimNamespace(self) -> str: ...
    @property
    def CimResourceUri(self) -> Uri: ...
    @property
    def CimSession(self) -> CimSession: ...
    @property
    def FullyQualifiedName(self) -> Set(ModuleSpecification): ...
    @property
    def ListAvailable(self) -> SwitchParameter: ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def PSEdition(self) -> str: ...
    @property
    def PSSession(self) -> PSSession: ...
    @property
    def Refresh(self) -> SwitchParameter: ...
    @All.setter
    def All(self, value: SwitchParameter) -> None: ...
    @CimNamespace.setter
    def CimNamespace(self, value: str) -> None: ...
    @CimResourceUri.setter
    def CimResourceUri(self, value: Uri) -> None: ...
    @CimSession.setter
    def CimSession(self, value: CimSession) -> None: ...
    @FullyQualifiedName.setter
    def FullyQualifiedName(self, value: Set(ModuleSpecification)) -> None: ...
    @ListAvailable.setter
    def ListAvailable(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @PSEdition.setter
    def PSEdition(self, value: str) -> None: ...
    @PSSession.setter
    def PSSession(self, value: PSSession) -> None: ...
    @Refresh.setter
    def Refresh(self, value: SwitchParameter) -> None: ...


class GetPSHostProcessInfoCommand:
    def __init__(self): ...
    @property
    def Id(self) -> Set(int): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Process(self) -> Set(Process): ...
    @Id.setter
    def Id(self, value: Set(int)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Process.setter
    def Process(self, value: Set(Process)) -> None: ...


class GetPSSessionCapabilityCommand:
    def __init__(self): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def Full(self) -> SwitchParameter: ...
    @property
    def Username(self) -> str: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @Full.setter
    def Full(self, value: SwitchParameter) -> None: ...
    @Username.setter
    def Username(self, value: str) -> None: ...


class GetPSSessionCommand(PSRunspaceCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Set(Uri): ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def InstanceId(self) -> Set(Guid): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Port(self) -> int: ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def State(self) -> SessionFilterState: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: SwitchParameter) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: str) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Set(Uri)) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Set(Guid)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @State.setter
    def State(self, value: SessionFilterState) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: SwitchParameter) -> None: ...


class GetPSSessionConfigurationCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Name(self) -> Set(str): ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...


class GetPSSnapinCommand(PSSnapInCommandBase):
    def __init__(self): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Registered(self) -> SwitchParameter: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Registered.setter
    def Registered(self, value: SwitchParameter) -> None: ...


class HelpCategoryInvalidException:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, helpCategory: str): ...
    @overload
    def __init__(self, helpCategory: str, innerException: Exception): ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def HelpCategory(self) -> str: ...
    @property
    def Message(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class HelpNotFoundException:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, helpTopic: str): ...
    @overload
    def __init__(self, helpTopic: str, innerException: Exception): ...
    @property
    def ErrorRecord(self) -> ErrorRecord: ...
    @property
    def HelpTopic(self) -> str: ...
    @property
    def Message(self) -> str: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...


class HistoryInfo:
    def Clone(self) -> HistoryInfo: ...
    @property
    def CommandLine(self) -> str: ...
    @property
    def EndExecutionTime(self) -> DateTime: ...
    @property
    def ExecutionStatus(self) -> PipelineState: ...
    @property
    def Id(self) -> Int64: ...
    @property
    def StartExecutionTime(self) -> DateTime: ...
    def ToString(self) -> str: ...


class ImportModuleCommand(ModuleCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Alias(self) -> Set(str): ...
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def AsCustomObject(self) -> SwitchParameter: ...
    @property
    def Assembly(self) -> Set(Assembly): ...
    @property
    def CimNamespace(self) -> str: ...
    @property
    def CimResourceUri(self) -> Uri: ...
    @property
    def CimSession(self) -> CimSession: ...
    @property
    def Cmdlet(self) -> Set(str): ...
    @property
    def DisableNameChecking(self) -> SwitchParameter: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def FullyQualifiedName(self) -> Set(ModuleSpecification): ...
    @property
    def Function(self) -> Set(str): ...
    @property
    def Global(self) -> SwitchParameter: ...
    @property
    def MaximumVersion(self) -> str: ...
    @property
    def MinimumVersion(self) -> Version: ...
    @property
    def ModuleInfo(self) -> Set(PSModuleInfo): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def NoClobber(self) -> SwitchParameter: ...
    @property
    def PassThru(self) -> SwitchParameter: ...
    @property
    def Prefix(self) -> str: ...
    @property
    def PSSession(self) -> PSSession: ...
    @property
    def RequiredVersion(self) -> Version: ...
    @property
    def Scope(self) -> str: ...
    @property
    def Variable(self) -> Set(str): ...
    @Alias.setter
    def Alias(self, value: Set(str)) -> None: ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @AsCustomObject.setter
    def AsCustomObject(self, value: SwitchParameter) -> None: ...
    @Assembly.setter
    def Assembly(self, value: Set(Assembly)) -> None: ...
    @CimNamespace.setter
    def CimNamespace(self, value: str) -> None: ...
    @CimResourceUri.setter
    def CimResourceUri(self, value: Uri) -> None: ...
    @CimSession.setter
    def CimSession(self, value: CimSession) -> None: ...
    @Cmdlet.setter
    def Cmdlet(self, value: Set(str)) -> None: ...
    @DisableNameChecking.setter
    def DisableNameChecking(self, value: SwitchParameter) -> None: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @FullyQualifiedName.setter
    def FullyQualifiedName(self, value: Set(ModuleSpecification)) -> None: ...
    @Function.setter
    def Function(self, value: Set(str)) -> None: ...
    @Global.setter
    def Global(self, value: SwitchParameter) -> None: ...
    @MaximumVersion.setter
    def MaximumVersion(self, value: str) -> None: ...
    @MinimumVersion.setter
    def MinimumVersion(self, value: Version) -> None: ...
    @ModuleInfo.setter
    def ModuleInfo(self, value: Set(PSModuleInfo)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @NoClobber.setter
    def NoClobber(self, value: SwitchParameter) -> None: ...
    @PassThru.setter
    def PassThru(self, value: SwitchParameter) -> None: ...
    @Prefix.setter
    def Prefix(self, value: str) -> None: ...
    @PSSession.setter
    def PSSession(self, value: PSSession) -> None: ...
    @RequiredVersion.setter
    def RequiredVersion(self, value: Version) -> None: ...
    @Scope.setter
    def Scope(self, value: str) -> None: ...
    @Variable.setter
    def Variable(self, value: Set(str)) -> None: ...


class InternalSymbolicLinkLinkCodeMethods:
    def GetLinkType(instance: PSObject) -> str: ...
    def GetTarget(instance: PSObject) -> Iterable[str]: ...


class InvokeCommandCommand(PSExecutionCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def AsJob(self) -> SwitchParameter: ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Set(Uri): ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def EnableNetworkAccess(self) -> SwitchParameter: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def HideComputerName(self) -> SwitchParameter: ...
    @property
    def InDisconnectedSession(self) -> SwitchParameter: ...
    @property
    def JobName(self) -> str: ...
    @property
    def NoNewScope(self) -> SwitchParameter: ...
    @property
    def Port(self) -> int: ...
    @property
    def RunAsAdministrator(self) -> SwitchParameter: ...
    @property
    def ScriptBlock(self) -> ScriptBlock: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def SessionName(self) -> Set(str): ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: SwitchParameter) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: str) -> None: ...
    @AsJob.setter
    def AsJob(self, value: SwitchParameter) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Set(Uri)) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @EnableNetworkAccess.setter
    def EnableNetworkAccess(self, value: SwitchParameter) -> None: ...
    @FilePath.setter
    def FilePath(self, value: str) -> None: ...
    @HideComputerName.setter
    def HideComputerName(self, value: SwitchParameter) -> None: ...
    @InDisconnectedSession.setter
    def InDisconnectedSession(self, value: SwitchParameter) -> None: ...
    @JobName.setter
    def JobName(self, value: str) -> None: ...
    @NoNewScope.setter
    def NoNewScope(self, value: SwitchParameter) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @RunAsAdministrator.setter
    def RunAsAdministrator(self, value: SwitchParameter) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: ScriptBlock) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @SessionName.setter
    def SessionName(self, value: Set(str)) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: SwitchParameter) -> None: ...


class InvokeHistoryCommand:
    def __init__(self): ...
    @property
    def Id(self) -> str: ...
    @Id.setter
    def Id(self, value: str) -> None: ...


class JobCmdletBase(PSRemotingCmdlet):
    def __init__(self): ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def Filter(self) -> Hashtable: ...
    @property
    def Id(self) -> Set(int): ...
    @property
    def InstanceId(self) -> Set(Guid): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def State(self) -> JobState: ...
    @Command.setter
    def Command(self, value: Set(str)) -> None: ...
    @Filter.setter
    def Filter(self, value: Hashtable) -> None: ...
    @Id.setter
    def Id(self, value: Set(int)) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Set(Guid)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @State.setter
    def State(self, value: JobState) -> None: ...


class ModuleCmdletBase:
    def __init__(self): ...


class ModuleSpecification:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, moduleName: str): ...
    @overload
    def __init__(self, moduleSpecification: Hashtable): ...
    @property
    def Guid(self) -> Nullable: ...
    @property
    def MaximumVersion(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def RequiredVersion(self) -> Version: ...
    @property
    def Version(self) -> Version: ...
    def ToString(self) -> str: ...
    def TryParse(input: str) -> Tuple[bool, ModuleSpecification]: ...


class NewModuleCommand(ModuleCmdletBase):
    def __init__(self): ...
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def AsCustomObject(self) -> SwitchParameter: ...
    @property
    def Cmdlet(self) -> Set(str): ...
    @property
    def Function(self) -> Set(str): ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnResult(self) -> SwitchParameter: ...
    @property
    def ScriptBlock(self) -> ScriptBlock: ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @AsCustomObject.setter
    def AsCustomObject(self, value: SwitchParameter) -> None: ...
    @Cmdlet.setter
    def Cmdlet(self, value: Set(str)) -> None: ...
    @Function.setter
    def Function(self, value: Set(str)) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @ReturnResult.setter
    def ReturnResult(self, value: SwitchParameter) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: ScriptBlock) -> None: ...


class NewModuleManifestCommand:
    def __init__(self): ...
    @property
    def AliasesToExport(self) -> Set(str): ...
    @property
    def Author(self) -> str: ...
    @property
    def ClrVersion(self) -> Version: ...
    @property
    def CmdletsToExport(self) -> Set(str): ...
    @property
    def CompanyName(self) -> str: ...
    @property
    def CompatiblePSEditions(self) -> Set(str): ...
    @property
    def Copyright(self) -> str: ...
    @property
    def DefaultCommandPrefix(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def DotNetFrameworkVersion(self) -> Version: ...
    @property
    def DscResourcesToExport(self) -> Set(str): ...
    @property
    def FileList(self) -> Set(str): ...
    @property
    def FormatsToProcess(self) -> Set(str): ...
    @property
    def FunctionsToExport(self) -> Set(str): ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def HelpInfoUri(self) -> str: ...
    @property
    def IconUri(self) -> Uri: ...
    @property
    def LicenseUri(self) -> Uri: ...
    @property
    def ModuleList(self) -> Set(Object): ...
    @property
    def ModuleVersion(self) -> Version: ...
    @property
    def NestedModules(self) -> Set(Object): ...
    @property
    def PassThru(self) -> SwitchParameter: ...
    @property
    def Path(self) -> str: ...
    @property
    def PowerShellHostName(self) -> str: ...
    @property
    def PowerShellHostVersion(self) -> Version: ...
    @property
    def PowerShellVersion(self) -> Version: ...
    @property
    def PrivateData(self) -> Object: ...
    @property
    def ProcessorArchitecture(self) -> ProcessorArchitecture: ...
    @property
    def ProjectUri(self) -> Uri: ...
    @property
    def ReleaseNotes(self) -> str: ...
    @property
    def RequiredAssemblies(self) -> Set(str): ...
    @property
    def RequiredModules(self) -> Set(Object): ...
    @property
    def RootModule(self) -> str: ...
    @property
    def ScriptsToProcess(self) -> Set(str): ...
    @property
    def Tags(self) -> Set(str): ...
    @property
    def TypesToProcess(self) -> Set(str): ...
    @property
    def VariablesToExport(self) -> Set(str): ...
    @AliasesToExport.setter
    def AliasesToExport(self, value: Set(str)) -> None: ...
    @Author.setter
    def Author(self, value: str) -> None: ...
    @ClrVersion.setter
    def ClrVersion(self, value: Version) -> None: ...
    @CmdletsToExport.setter
    def CmdletsToExport(self, value: Set(str)) -> None: ...
    @CompanyName.setter
    def CompanyName(self, value: str) -> None: ...
    @CompatiblePSEditions.setter
    def CompatiblePSEditions(self, value: Set(str)) -> None: ...
    @Copyright.setter
    def Copyright(self, value: str) -> None: ...
    @DefaultCommandPrefix.setter
    def DefaultCommandPrefix(self, value: str) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @DotNetFrameworkVersion.setter
    def DotNetFrameworkVersion(self, value: Version) -> None: ...
    @DscResourcesToExport.setter
    def DscResourcesToExport(self, value: Set(str)) -> None: ...
    @FileList.setter
    def FileList(self, value: Set(str)) -> None: ...
    @FormatsToProcess.setter
    def FormatsToProcess(self, value: Set(str)) -> None: ...
    @FunctionsToExport.setter
    def FunctionsToExport(self, value: Set(str)) -> None: ...
    @Guid.setter
    def Guid(self, value: Guid) -> None: ...
    @HelpInfoUri.setter
    def HelpInfoUri(self, value: str) -> None: ...
    @IconUri.setter
    def IconUri(self, value: Uri) -> None: ...
    @LicenseUri.setter
    def LicenseUri(self, value: Uri) -> None: ...
    @ModuleList.setter
    def ModuleList(self, value: Set(Object)) -> None: ...
    @ModuleVersion.setter
    def ModuleVersion(self, value: Version) -> None: ...
    @NestedModules.setter
    def NestedModules(self, value: Set(Object)) -> None: ...
    @PassThru.setter
    def PassThru(self, value: SwitchParameter) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @PowerShellHostName.setter
    def PowerShellHostName(self, value: str) -> None: ...
    @PowerShellHostVersion.setter
    def PowerShellHostVersion(self, value: Version) -> None: ...
    @PowerShellVersion.setter
    def PowerShellVersion(self, value: Version) -> None: ...
    @PrivateData.setter
    def PrivateData(self, value: Object) -> None: ...
    @ProcessorArchitecture.setter
    def ProcessorArchitecture(self, value: ProcessorArchitecture) -> None: ...
    @ProjectUri.setter
    def ProjectUri(self, value: Uri) -> None: ...
    @ReleaseNotes.setter
    def ReleaseNotes(self, value: str) -> None: ...
    @RequiredAssemblies.setter
    def RequiredAssemblies(self, value: Set(str)) -> None: ...
    @RequiredModules.setter
    def RequiredModules(self, value: Set(Object)) -> None: ...
    @RootModule.setter
    def RootModule(self, value: str) -> None: ...
    @ScriptsToProcess.setter
    def ScriptsToProcess(self, value: Set(str)) -> None: ...
    @Tags.setter
    def Tags(self, value: Set(str)) -> None: ...
    @TypesToProcess.setter
    def TypesToProcess(self, value: Set(str)) -> None: ...
    @VariablesToExport.setter
    def VariablesToExport(self, value: Set(str)) -> None: ...


class NewPSRoleCapabilityFileCommand:
    def __init__(self): ...
    @property
    def AliasDefinitions(self) -> Set(IDictionary): ...
    @property
    def AssembliesToLoad(self) -> Set(str): ...
    @property
    def Author(self) -> str: ...
    @property
    def CompanyName(self) -> str: ...
    @property
    def Copyright(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def EnvironmentVariables(self) -> IDictionary: ...
    @property
    def FormatsToProcess(self) -> Set(str): ...
    @property
    def FunctionDefinitions(self) -> Set(IDictionary): ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def ModulesToImport(self) -> Set(Object): ...
    @property
    def Path(self) -> str: ...
    @property
    def ScriptsToProcess(self) -> Set(str): ...
    @property
    def TypesToProcess(self) -> Set(str): ...
    @property
    def VariableDefinitions(self) -> Object: ...
    @property
    def VisibleAliases(self) -> Set(str): ...
    @property
    def VisibleCmdlets(self) -> Set(Object): ...
    @property
    def VisibleExternalCommands(self) -> Set(str): ...
    @property
    def VisibleFunctions(self) -> Set(Object): ...
    @property
    def VisibleProviders(self) -> Set(str): ...
    @AliasDefinitions.setter
    def AliasDefinitions(self, value: Set(IDictionary)) -> None: ...
    @AssembliesToLoad.setter
    def AssembliesToLoad(self, value: Set(str)) -> None: ...
    @Author.setter
    def Author(self, value: str) -> None: ...
    @CompanyName.setter
    def CompanyName(self, value: str) -> None: ...
    @Copyright.setter
    def Copyright(self, value: str) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @EnvironmentVariables.setter
    def EnvironmentVariables(self, value: IDictionary) -> None: ...
    @FormatsToProcess.setter
    def FormatsToProcess(self, value: Set(str)) -> None: ...
    @FunctionDefinitions.setter
    def FunctionDefinitions(self, value: Set(IDictionary)) -> None: ...
    @Guid.setter
    def Guid(self, value: Guid) -> None: ...
    @ModulesToImport.setter
    def ModulesToImport(self, value: Set(Object)) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @ScriptsToProcess.setter
    def ScriptsToProcess(self, value: Set(str)) -> None: ...
    @TypesToProcess.setter
    def TypesToProcess(self, value: Set(str)) -> None: ...
    @VariableDefinitions.setter
    def VariableDefinitions(self, value: Object) -> None: ...
    @VisibleAliases.setter
    def VisibleAliases(self, value: Set(str)) -> None: ...
    @VisibleCmdlets.setter
    def VisibleCmdlets(self, value: Set(Object)) -> None: ...
    @VisibleExternalCommands.setter
    def VisibleExternalCommands(self, value: Set(str)) -> None: ...
    @VisibleFunctions.setter
    def VisibleFunctions(self, value: Set(Object)) -> None: ...
    @VisibleProviders.setter
    def VisibleProviders(self, value: Set(str)) -> None: ...


class NewPSSessionCommand(PSRemotingBaseCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def EnableNetworkAccess(self) -> SwitchParameter: ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def Session(self) -> Set(PSSession): ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @EnableNetworkAccess.setter
    def EnableNetworkAccess(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...


class NewPSSessionConfigurationFileCommand:
    def __init__(self): ...
    @property
    def AliasDefinitions(self) -> Set(IDictionary): ...
    @property
    def AssembliesToLoad(self) -> Set(str): ...
    @property
    def Author(self) -> str: ...
    @property
    def CompanyName(self) -> str: ...
    @property
    def Copyright(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def EnvironmentVariables(self) -> IDictionary: ...
    @property
    def ExecutionPolicy(self) -> ExecutionPolicy: ...
    @property
    def FormatsToProcess(self) -> Set(str): ...
    @property
    def Full(self) -> SwitchParameter: ...
    @property
    def FunctionDefinitions(self) -> Set(IDictionary): ...
    @property
    def GroupManagedServiceAccount(self) -> str: ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def LanguageMode(self) -> PSLanguageMode: ...
    @property
    def ModulesToImport(self) -> Set(Object): ...
    @property
    def MountUserDrive(self) -> SwitchParameter: ...
    @property
    def Path(self) -> str: ...
    @property
    def PowerShellVersion(self) -> Version: ...
    @property
    def RequiredGroups(self) -> IDictionary: ...
    @property
    def RoleDefinitions(self) -> IDictionary: ...
    @property
    def RunAsVirtualAccount(self) -> SwitchParameter: ...
    @property
    def RunAsVirtualAccountGroups(self) -> Set(str): ...
    @property
    def SchemaVersion(self) -> Version: ...
    @property
    def ScriptsToProcess(self) -> Set(str): ...
    @property
    def SessionType(self) -> SessionType: ...
    @property
    def TranscriptDirectory(self) -> str: ...
    @property
    def TypesToProcess(self) -> Set(str): ...
    @property
    def UserDriveMaximumSize(self) -> Int64: ...
    @property
    def VariableDefinitions(self) -> Object: ...
    @property
    def VisibleAliases(self) -> Set(str): ...
    @property
    def VisibleCmdlets(self) -> Set(Object): ...
    @property
    def VisibleExternalCommands(self) -> Set(str): ...
    @property
    def VisibleFunctions(self) -> Set(Object): ...
    @property
    def VisibleProviders(self) -> Set(str): ...
    @AliasDefinitions.setter
    def AliasDefinitions(self, value: Set(IDictionary)) -> None: ...
    @AssembliesToLoad.setter
    def AssembliesToLoad(self, value: Set(str)) -> None: ...
    @Author.setter
    def Author(self, value: str) -> None: ...
    @CompanyName.setter
    def CompanyName(self, value: str) -> None: ...
    @Copyright.setter
    def Copyright(self, value: str) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @EnvironmentVariables.setter
    def EnvironmentVariables(self, value: IDictionary) -> None: ...
    @ExecutionPolicy.setter
    def ExecutionPolicy(self, value: ExecutionPolicy) -> None: ...
    @FormatsToProcess.setter
    def FormatsToProcess(self, value: Set(str)) -> None: ...
    @Full.setter
    def Full(self, value: SwitchParameter) -> None: ...
    @FunctionDefinitions.setter
    def FunctionDefinitions(self, value: Set(IDictionary)) -> None: ...
    @GroupManagedServiceAccount.setter
    def GroupManagedServiceAccount(self, value: str) -> None: ...
    @Guid.setter
    def Guid(self, value: Guid) -> None: ...
    @LanguageMode.setter
    def LanguageMode(self, value: PSLanguageMode) -> None: ...
    @ModulesToImport.setter
    def ModulesToImport(self, value: Set(Object)) -> None: ...
    @MountUserDrive.setter
    def MountUserDrive(self, value: SwitchParameter) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @PowerShellVersion.setter
    def PowerShellVersion(self, value: Version) -> None: ...
    @RequiredGroups.setter
    def RequiredGroups(self, value: IDictionary) -> None: ...
    @RoleDefinitions.setter
    def RoleDefinitions(self, value: IDictionary) -> None: ...
    @RunAsVirtualAccount.setter
    def RunAsVirtualAccount(self, value: SwitchParameter) -> None: ...
    @RunAsVirtualAccountGroups.setter
    def RunAsVirtualAccountGroups(self, value: Set(str)) -> None: ...
    @SchemaVersion.setter
    def SchemaVersion(self, value: Version) -> None: ...
    @ScriptsToProcess.setter
    def ScriptsToProcess(self, value: Set(str)) -> None: ...
    @SessionType.setter
    def SessionType(self, value: SessionType) -> None: ...
    @TranscriptDirectory.setter
    def TranscriptDirectory(self, value: str) -> None: ...
    @TypesToProcess.setter
    def TypesToProcess(self, value: Set(str)) -> None: ...
    @UserDriveMaximumSize.setter
    def UserDriveMaximumSize(self, value: Int64) -> None: ...
    @VariableDefinitions.setter
    def VariableDefinitions(self, value: Object) -> None: ...
    @VisibleAliases.setter
    def VisibleAliases(self, value: Set(str)) -> None: ...
    @VisibleCmdlets.setter
    def VisibleCmdlets(self, value: Set(Object)) -> None: ...
    @VisibleExternalCommands.setter
    def VisibleExternalCommands(self, value: Set(str)) -> None: ...
    @VisibleFunctions.setter
    def VisibleFunctions(self, value: Set(Object)) -> None: ...
    @VisibleProviders.setter
    def VisibleProviders(self, value: Set(str)) -> None: ...


class NewPSSessionOptionCommand:
    def __init__(self): ...
    @property
    def ApplicationArguments(self) -> PSPrimitiveDictionary: ...
    @property
    def CancelTimeout(self) -> int: ...
    @property
    def Culture(self) -> CultureInfo: ...
    @property
    def IdleTimeout(self) -> int: ...
    @property
    def IncludePortInSPN(self) -> SwitchParameter: ...
    @property
    def MaxConnectionRetryCount(self) -> int: ...
    @property
    def MaximumReceivedDataSizePerCommand(self) -> int: ...
    @property
    def MaximumReceivedObjectSize(self) -> int: ...
    @property
    def MaximumRedirection(self) -> int: ...
    @property
    def NoCompression(self) -> SwitchParameter: ...
    @property
    def NoEncryption(self) -> SwitchParameter: ...
    @property
    def NoMachineProfile(self) -> SwitchParameter: ...
    @property
    def OpenTimeout(self) -> int: ...
    @property
    def OperationTimeout(self) -> int: ...
    @property
    def OutputBufferingMode(self) -> OutputBufferingMode: ...
    @property
    def ProxyAccessType(self) -> ProxyAccessType: ...
    @property
    def ProxyAuthentication(self) -> AuthenticationMechanism: ...
    @property
    def ProxyCredential(self) -> PSCredential: ...
    @property
    def SkipCACheck(self) -> SwitchParameter: ...
    @property
    def SkipCNCheck(self) -> SwitchParameter: ...
    @property
    def SkipRevocationCheck(self) -> SwitchParameter: ...
    @property
    def UICulture(self) -> CultureInfo: ...
    @property
    def UseUTF16(self) -> SwitchParameter: ...
    @ApplicationArguments.setter
    def ApplicationArguments(self, value: PSPrimitiveDictionary) -> None: ...
    @CancelTimeout.setter
    def CancelTimeout(self, value: int) -> None: ...
    @Culture.setter
    def Culture(self, value: CultureInfo) -> None: ...
    @IdleTimeout.setter
    def IdleTimeout(self, value: int) -> None: ...
    @IncludePortInSPN.setter
    def IncludePortInSPN(self, value: SwitchParameter) -> None: ...
    @MaxConnectionRetryCount.setter
    def MaxConnectionRetryCount(self, value: int) -> None: ...
    @MaximumReceivedDataSizePerCommand.setter
    def MaximumReceivedDataSizePerCommand(self, value: int) -> None: ...
    @MaximumReceivedObjectSize.setter
    def MaximumReceivedObjectSize(self, value: int) -> None: ...
    @MaximumRedirection.setter
    def MaximumRedirection(self, value: int) -> None: ...
    @NoCompression.setter
    def NoCompression(self, value: SwitchParameter) -> None: ...
    @NoEncryption.setter
    def NoEncryption(self, value: SwitchParameter) -> None: ...
    @NoMachineProfile.setter
    def NoMachineProfile(self, value: SwitchParameter) -> None: ...
    @OpenTimeout.setter
    def OpenTimeout(self, value: int) -> None: ...
    @OperationTimeout.setter
    def OperationTimeout(self, value: int) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: OutputBufferingMode) -> None: ...
    @ProxyAccessType.setter
    def ProxyAccessType(self, value: ProxyAccessType) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: AuthenticationMechanism) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: PSCredential) -> None: ...
    @SkipCACheck.setter
    def SkipCACheck(self, value: SwitchParameter) -> None: ...
    @SkipCNCheck.setter
    def SkipCNCheck(self, value: SwitchParameter) -> None: ...
    @SkipRevocationCheck.setter
    def SkipRevocationCheck(self, value: SwitchParameter) -> None: ...
    @UICulture.setter
    def UICulture(self, value: CultureInfo) -> None: ...
    @UseUTF16.setter
    def UseUTF16(self, value: SwitchParameter) -> None: ...


class NewPSTransportOptionCommand:
    def __init__(self): ...
    @property
    def IdleTimeoutSec(self) -> Nullable: ...
    @property
    def MaxConcurrentCommandsPerSession(self) -> Nullable: ...
    @property
    def MaxConcurrentUsers(self) -> Nullable: ...
    @property
    def MaxIdleTimeoutSec(self) -> Nullable: ...
    @property
    def MaxMemoryPerSessionMB(self) -> Nullable: ...
    @property
    def MaxProcessesPerSession(self) -> Nullable: ...
    @property
    def MaxSessions(self) -> Nullable: ...
    @property
    def MaxSessionsPerUser(self) -> Nullable: ...
    @property
    def OutputBufferingMode(self) -> Nullable: ...
    @property
    def ProcessIdleTimeoutSec(self) -> Nullable: ...
    @IdleTimeoutSec.setter
    def IdleTimeoutSec(self, value: Nullable) -> None: ...
    @MaxConcurrentCommandsPerSession.setter
    def MaxConcurrentCommandsPerSession(self, value: Nullable) -> None: ...
    @MaxConcurrentUsers.setter
    def MaxConcurrentUsers(self, value: Nullable) -> None: ...
    @MaxIdleTimeoutSec.setter
    def MaxIdleTimeoutSec(self, value: Nullable) -> None: ...
    @MaxMemoryPerSessionMB.setter
    def MaxMemoryPerSessionMB(self, value: Nullable) -> None: ...
    @MaxProcessesPerSession.setter
    def MaxProcessesPerSession(self, value: Nullable) -> None: ...
    @MaxSessions.setter
    def MaxSessions(self, value: Nullable) -> None: ...
    @MaxSessionsPerUser.setter
    def MaxSessionsPerUser(self, value: Nullable) -> None: ...
    @OutputBufferingMode.setter
    def OutputBufferingMode(self, value: Nullable) -> None: ...
    @ProcessIdleTimeoutSec.setter
    def ProcessIdleTimeoutSec(self, value: Nullable) -> None: ...


class NounArgumentCompleter:
    def __init__(self): ...
    def CompleteArgument(self, commandName: str, parameterName: str, wordToComplete: str, commandAst: CommandAst, fakeBoundParameters: IDictionary) -> Iterable[CompletionResult]: ...


class ObjectEventRegistrationBase:
    @property
    def Action(self) -> ScriptBlock: ...
    @property
    def Forward(self) -> SwitchParameter: ...
    @property
    def MaxTriggerCount(self) -> int: ...
    @property
    def MessageData(self) -> PSObject: ...
    @property
    def SourceIdentifier(self) -> str: ...
    @property
    def SupportEvent(self) -> SwitchParameter: ...
    @Action.setter
    def Action(self, value: ScriptBlock) -> None: ...
    @Forward.setter
    def Forward(self, value: SwitchParameter) -> None: ...
    @MaxTriggerCount.setter
    def MaxTriggerCount(self, value: int) -> None: ...
    @MessageData.setter
    def MessageData(self, value: PSObject) -> None: ...
    @SourceIdentifier.setter
    def SourceIdentifier(self, value: str) -> None: ...
    @SupportEvent.setter
    def SupportEvent(self, value: SwitchParameter) -> None: ...


class OpenMode:
    Add = 0
    New = 1
    Overwrite = 2


class OutDefaultCommand(FrontEndCommandBase):
    def __init__(self): ...
    @property
    def Transcript(self) -> SwitchParameter: ...
    @Transcript.setter
    def Transcript(self, value: SwitchParameter) -> None: ...


class OutHostCommand(FrontEndCommandBase):
    def __init__(self): ...
    @property
    def Paging(self) -> SwitchParameter: ...
    @Paging.setter
    def Paging(self, value: SwitchParameter) -> None: ...


class OutLineOutputCommand(FrontEndCommandBase):
    def __init__(self): ...
    @property
    def LineOutput(self) -> Object: ...
    @LineOutput.setter
    def LineOutput(self, value: Object) -> None: ...


class OutNullCommand:
    def __init__(self): ...
    @property
    def InputObject(self) -> PSObject: ...
    @InputObject.setter
    def InputObject(self, value: PSObject) -> None: ...


class OutTarget:
    Default = 0
    Host = 1
    Job = 2


class PSEditionArgumentCompleter:
    def __init__(self): ...
    def CompleteArgument(self, commandName: str, parameterName: str, wordToComplete: str, commandAst: CommandAst, fakeBoundParameters: IDictionary) -> Iterable[CompletionResult]: ...


class PSExecutionCmdlet(PSRemotingBaseCmdlet):
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def EnableNetworkAccess(self) -> SwitchParameter: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def InputObject(self) -> PSObject: ...
    @property
    def ScriptBlock(self) -> ScriptBlock: ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: Set(str)) -> None: ...
    @EnableNetworkAccess.setter
    def EnableNetworkAccess(self, value: SwitchParameter) -> None: ...
    @FilePath.setter
    def FilePath(self, value: str) -> None: ...
    @InputObject.setter
    def InputObject(self, value: PSObject) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: ScriptBlock) -> None: ...
    @VMId.setter
    def VMId(self, value: Set(Guid)) -> None: ...
    @VMName.setter
    def VMName(self, value: Set(str)) -> None: ...


class PSHostProcessInfo:
    @property
    def AppDomainName(self) -> str: ...
    @property
    def MainWindowTitle(self) -> str: ...
    @property
    def ProcessId(self) -> int: ...
    @property
    def ProcessName(self) -> str: ...


class PSRemotingBaseCmdlet(PSRemotingCmdlet):
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConnectionUri(self) -> Set(Uri): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def Port(self) -> int: ...
    @property
    def RunAsAdministrator(self) -> SwitchParameter: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: SwitchParameter) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: str) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Set(Uri)) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: Set(str)) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @RunAsAdministrator.setter
    def RunAsAdministrator(self, value: SwitchParameter) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @ThrottleLimit.setter
    def ThrottleLimit(self, value: int) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: SwitchParameter) -> None: ...
    @VMId.setter
    def VMId(self, value: Set(Guid)) -> None: ...
    @VMName.setter
    def VMName(self, value: Set(str)) -> None: ...


class PSRemotingCmdlet:
    pass


class PSRunspaceCmdlet(PSRemotingCmdlet):
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def Id(self) -> Set(int): ...
    @property
    def InstanceId(self) -> Set(Guid): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @ContainerId.setter
    def ContainerId(self, value: Set(str)) -> None: ...
    @Id.setter
    def Id(self, value: Set(int)) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Set(Guid)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @VMId.setter
    def VMId(self, value: Set(Guid)) -> None: ...
    @VMName.setter
    def VMName(self, value: Set(str)) -> None: ...


class PSSessionConfigurationCommandBase:
    @property
    def AccessMode(self) -> PSSessionConfigurationAccessMode: ...
    @property
    def ApplicationBase(self) -> str: ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def ConfigurationTypeName(self) -> str: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def MaximumReceivedDataSizePerCommandMB(self) -> Nullable: ...
    @property
    def MaximumReceivedObjectSizeMB(self) -> Nullable: ...
    @property
    def ModulesToImport(self) -> Set(Object): ...
    @property
    def Name(self) -> str: ...
    @property
    def NoServiceRestart(self) -> SwitchParameter: ...
    @property
    def Path(self) -> str: ...
    @property
    def PSVersion(self) -> Version: ...
    @property
    def RunAsCredential(self) -> PSCredential: ...
    @property
    def SecurityDescriptorSddl(self) -> str: ...
    @property
    def SessionTypeOption(self) -> PSSessionTypeOption: ...
    @property
    def ShowSecurityDescriptorUI(self) -> SwitchParameter: ...
    @property
    def StartupScript(self) -> str: ...
    @property
    def ThreadApartmentState(self) -> ApartmentState: ...
    @property
    def ThreadOptions(self) -> PSThreadOptions: ...
    @property
    def TransportOption(self) -> PSTransportOption: ...
    @property
    def UseSharedProcess(self) -> SwitchParameter: ...
    @AccessMode.setter
    def AccessMode(self, value: PSSessionConfigurationAccessMode) -> None: ...
    @ApplicationBase.setter
    def ApplicationBase(self, value: str) -> None: ...
    @AssemblyName.setter
    def AssemblyName(self, value: str) -> None: ...
    @ConfigurationTypeName.setter
    def ConfigurationTypeName(self, value: str) -> None: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @MaximumReceivedDataSizePerCommandMB.setter
    def MaximumReceivedDataSizePerCommandMB(self, value: Nullable) -> None: ...
    @MaximumReceivedObjectSizeMB.setter
    def MaximumReceivedObjectSizeMB(self, value: Nullable) -> None: ...
    @ModulesToImport.setter
    def ModulesToImport(self, value: Set(Object)) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: SwitchParameter) -> None: ...
    @Path.setter
    def Path(self, value: str) -> None: ...
    @PSVersion.setter
    def PSVersion(self, value: Version) -> None: ...
    @RunAsCredential.setter
    def RunAsCredential(self, value: PSCredential) -> None: ...
    @SecurityDescriptorSddl.setter
    def SecurityDescriptorSddl(self, value: str) -> None: ...
    @SessionTypeOption.setter
    def SessionTypeOption(self, value: PSSessionTypeOption) -> None: ...
    @ShowSecurityDescriptorUI.setter
    def ShowSecurityDescriptorUI(self, value: SwitchParameter) -> None: ...
    @StartupScript.setter
    def StartupScript(self, value: str) -> None: ...
    @ThreadApartmentState.setter
    def ThreadApartmentState(self, value: ApartmentState) -> None: ...
    @ThreadOptions.setter
    def ThreadOptions(self, value: PSThreadOptions) -> None: ...
    @TransportOption.setter
    def TransportOption(self, value: PSTransportOption) -> None: ...
    @UseSharedProcess.setter
    def UseSharedProcess(self, value: SwitchParameter) -> None: ...


class PSSnapInCommandBase:
    def Dispose(self) -> None: ...


class ReceiveJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def AutoRemoveJob(self) -> SwitchParameter: ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def Filter(self) -> Hashtable: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Job(self) -> Set(Job): ...
    @property
    def Keep(self) -> SwitchParameter: ...
    @property
    def Location(self) -> Set(str): ...
    @property
    def NoRecurse(self) -> SwitchParameter: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def State(self) -> JobState: ...
    @property
    def Wait(self) -> SwitchParameter: ...
    @property
    def WriteEvents(self) -> SwitchParameter: ...
    @property
    def WriteJobInResults(self) -> SwitchParameter: ...
    @AutoRemoveJob.setter
    def AutoRemoveJob(self, value: SwitchParameter) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: Set(str)) -> None: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...
    @Keep.setter
    def Keep(self, value: SwitchParameter) -> None: ...
    @Location.setter
    def Location(self, value: Set(str)) -> None: ...
    @NoRecurse.setter
    def NoRecurse(self, value: SwitchParameter) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @Wait.setter
    def Wait(self, value: SwitchParameter) -> None: ...
    @WriteEvents.setter
    def WriteEvents(self, value: SwitchParameter) -> None: ...
    @WriteJobInResults.setter
    def WriteJobInResults(self, value: SwitchParameter) -> None: ...


class ReceivePSSessionCommand(PSRemotingCmdlet):
    def __init__(self): ...
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> str: ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Uri: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def Id(self) -> int: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def JobName(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def OutTarget(self) -> OutTarget: ...
    @property
    def Port(self) -> int: ...
    @property
    def Session(self) -> PSSession: ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @AllowRedirection.setter
    def AllowRedirection(self, value: SwitchParameter) -> None: ...
    @ApplicationName.setter
    def ApplicationName(self, value: str) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ComputerName.setter
    def ComputerName(self, value: str) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @ConnectionUri.setter
    def ConnectionUri(self, value: Uri) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @Id.setter
    def Id(self, value: int) -> None: ...
    @InstanceId.setter
    def InstanceId(self, value: Guid) -> None: ...
    @JobName.setter
    def JobName(self, value: str) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @OutTarget.setter
    def OutTarget(self, value: OutTarget) -> None: ...
    @Port.setter
    def Port(self, value: int) -> None: ...
    @Session.setter
    def Session(self, value: PSSession) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @UseSSL.setter
    def UseSSL(self, value: SwitchParameter) -> None: ...


class RegisterPSSessionConfigurationCommand(PSSessionConfigurationCommandBase):
    def __init__(self): ...
    @property
    def ProcessorArchitecture(self) -> str: ...
    @property
    def SessionType(self) -> PSSessionType: ...
    @ProcessorArchitecture.setter
    def ProcessorArchitecture(self, value: str) -> None: ...
    @SessionType.setter
    def SessionType(self, value: PSSessionType) -> None: ...


class RegistryProvider:
    def __init__(self): ...
    def ClearProperty(self, path: str, propertyToClear: Collection) -> None: ...
    def ClearPropertyDynamicParameters(self, path: str, propertyToClear: Collection) -> Object: ...
    def CopyProperty(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> None: ...
    def CopyPropertyDynamicParameters(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> Object: ...
    def GetProperty(self, path: str, providerSpecificPickList: Collection) -> None: ...
    def GetPropertyDynamicParameters(self, path: str, providerSpecificPickList: Collection) -> Object: ...
    def GetSecurityDescriptor(self, path: str, sections: AccessControlSections) -> None: ...
    def MoveProperty(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> None: ...
    def MovePropertyDynamicParameters(self, sourcePath: str, sourceProperty: str, destinationPath: str, destinationProperty: str) -> Object: ...
    def NewProperty(self, path: str, propertyName: str, type: str, value: Object) -> None: ...
    def NewPropertyDynamicParameters(self, path: str, propertyName: str, type: str, value: Object) -> Object: ...
    def NewSecurityDescriptorFromPath(self, path: str, sections: AccessControlSections) -> ObjectSecurity: ...
    def NewSecurityDescriptorOfType(self, type: str, sections: AccessControlSections) -> ObjectSecurity: ...
    def RemoveProperty(self, path: str, propertyName: str) -> None: ...
    def RemovePropertyDynamicParameters(self, path: str, propertyName: str) -> Object: ...
    def RenameProperty(self, path: str, sourceProperty: str, destinationProperty: str) -> None: ...
    def RenamePropertyDynamicParameters(self, path: str, sourceProperty: str, destinationProperty: str) -> Object: ...
    def SetProperty(self, path: str, propertyValue: PSObject) -> None: ...
    def SetPropertyDynamicParameters(self, path: str, propertyValue: PSObject) -> Object: ...
    def SetSecurityDescriptor(self, path: str, securityDescriptor: ObjectSecurity) -> None: ...


class RegistryProviderSetItemDynamicParameter:
    def __init__(self): ...
    @property
    def Type(self) -> RegistryValueKind: ...
    @Type.setter
    def Type(self, value: RegistryValueKind) -> None: ...


class RemoveJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Job(self) -> Set(Job): ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...


class RemoveModuleCommand(ModuleCmdletBase):
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def FullyQualifiedName(self) -> Set(ModuleSpecification): ...
    @property
    def ModuleInfo(self) -> Set(PSModuleInfo): ...
    @property
    def Name(self) -> Set(str): ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @FullyQualifiedName.setter
    def FullyQualifiedName(self, value: Set(ModuleSpecification)) -> None: ...
    @ModuleInfo.setter
    def ModuleInfo(self, value: Set(PSModuleInfo)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...


class RemovePSSessionCommand(PSRunspaceCmdlet):
    def __init__(self): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @ContainerId.setter
    def ContainerId(self, value: Set(str)) -> None: ...
    @Session.setter
    def Session(self, value: Set(PSSession)) -> None: ...
    @VMId.setter
    def VMId(self, value: Set(Guid)) -> None: ...
    @VMName.setter
    def VMName(self, value: Set(str)) -> None: ...


class RemovePSSnapinCommand(PSSnapInCommandBase):
    def __init__(self): ...
    @property
    def Name(self) -> Set(str): ...
    @property
    def PassThru(self) -> SwitchParameter: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...
    @PassThru.setter
    def PassThru(self, value: SwitchParameter) -> None: ...


class ResumeJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def Job(self) -> Set(Job): ...
    @property
    def Wait(self) -> SwitchParameter: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...
    @Wait.setter
    def Wait(self, value: SwitchParameter) -> None: ...


class SaveHelpCommand(UpdatableHelpCommandBase):
    def __init__(self): ...
    @property
    def DestinationPath(self) -> Set(str): ...
    @property
    def FullyQualifiedModule(self) -> Set(ModuleSpecification): ...
    @property
    def LiteralPath(self) -> Set(str): ...
    @property
    def Module(self) -> Set(PSModuleInfo): ...
    @DestinationPath.setter
    def DestinationPath(self, value: Set(str)) -> None: ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: Set(ModuleSpecification)) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: Set(str)) -> None: ...
    @Module.setter
    def Module(self, value: Set(PSModuleInfo)) -> None: ...


class SessionFilterState:
    All = 0
    Opened = 1
    Disconnected = 2
    Closed = 3
    Broken = 4


class SessionStateProviderBase:
    def ClearContent(self, path: str) -> None: ...
    def ClearContentDynamicParameters(self, path: str) -> Object: ...
    def GetContentReader(self, path: str) -> IContentReader: ...
    def GetContentReaderDynamicParameters(self, path: str) -> Object: ...
    def GetContentWriter(self, path: str) -> IContentWriter: ...
    def GetContentWriterDynamicParameters(self, path: str) -> Object: ...


class SessionStateProviderBaseContentReaderWriter:
    def Close(self) -> None: ...
    def Dispose(self) -> None: ...
    def Read(self, readCount: Int64) -> IList: ...
    def Seek(self, offset: Int64, origin: SeekOrigin) -> None: ...
    def Write(self, content: IList) -> IList: ...


class SetPSDebugCommand:
    def __init__(self): ...
    @property
    def Off(self) -> SwitchParameter: ...
    @property
    def Step(self) -> SwitchParameter: ...
    @property
    def Strict(self) -> SwitchParameter: ...
    @property
    def Trace(self) -> int: ...
    @Off.setter
    def Off(self, value: SwitchParameter) -> None: ...
    @Step.setter
    def Step(self, value: SwitchParameter) -> None: ...
    @Strict.setter
    def Strict(self, value: SwitchParameter) -> None: ...
    @Trace.setter
    def Trace(self, value: int) -> None: ...


class SetPSSessionConfigurationCommand(PSSessionConfigurationCommandBase):
    def __init__(self): ...


class SetStrictModeCommand:
    def __init__(self): ...
    @property
    def Off(self) -> SwitchParameter: ...
    @property
    def Version(self) -> Version: ...
    @Off.setter
    def Off(self, value: SwitchParameter) -> None: ...
    @Version.setter
    def Version(self, value: Version) -> None: ...


class StartJobCommand(PSExecutionCmdlet):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def AllowRedirection(self) -> SwitchParameter: ...
    @property
    def ApplicationName(self) -> str: ...
    @property
    def ArgumentList(self) -> Set(Object): ...
    @property
    def Authentication(self) -> AuthenticationMechanism: ...
    @property
    def CertificateThumbprint(self) -> str: ...
    @property
    def ComputerName(self) -> Set(str): ...
    @property
    def ConfigurationName(self) -> str: ...
    @property
    def ConnectionUri(self) -> Set(Uri): ...
    @property
    def ContainerId(self) -> Set(str): ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def DefinitionName(self) -> str: ...
    @property
    def DefinitionPath(self) -> str: ...
    @property
    def EnableNetworkAccess(self) -> SwitchParameter: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def InitializationScript(self) -> ScriptBlock: ...
    @property
    def InputObject(self) -> PSObject: ...
    @property
    def LiteralPath(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Port(self) -> int: ...
    @property
    def PSVersion(self) -> Version: ...
    @property
    def RunAs32(self) -> SwitchParameter: ...
    @property
    def RunAsAdministrator(self) -> SwitchParameter: ...
    @property
    def ScriptBlock(self) -> ScriptBlock: ...
    @property
    def Session(self) -> Set(PSSession): ...
    @property
    def SessionOption(self) -> PSSessionOption: ...
    @property
    def ThrottleLimit(self) -> int: ...
    @property
    def Type(self) -> str: ...
    @property
    def UseSSL(self) -> SwitchParameter: ...
    @property
    def VMId(self) -> Set(Guid): ...
    @property
    def VMName(self) -> Set(str): ...
    @ArgumentList.setter
    def ArgumentList(self, value: Set(Object)) -> None: ...
    @Authentication.setter
    def Authentication(self, value: AuthenticationMechanism) -> None: ...
    @CertificateThumbprint.setter
    def CertificateThumbprint(self, value: str) -> None: ...
    @ConfigurationName.setter
    def ConfigurationName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @DefinitionName.setter
    def DefinitionName(self, value: str) -> None: ...
    @DefinitionPath.setter
    def DefinitionPath(self, value: str) -> None: ...
    @FilePath.setter
    def FilePath(self, value: str) -> None: ...
    @InitializationScript.setter
    def InitializationScript(self, value: ScriptBlock) -> None: ...
    @InputObject.setter
    def InputObject(self, value: PSObject) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: str) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @PSVersion.setter
    def PSVersion(self, value: Version) -> None: ...
    @RunAs32.setter
    def RunAs32(self, value: SwitchParameter) -> None: ...
    @ScriptBlock.setter
    def ScriptBlock(self, value: ScriptBlock) -> None: ...
    @SessionOption.setter
    def SessionOption(self, value: PSSessionOption) -> None: ...
    @Type.setter
    def Type(self, value: str) -> None: ...


class StopJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def Job(self) -> Set(Job): ...
    @property
    def PassThru(self) -> SwitchParameter: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...
    @PassThru.setter
    def PassThru(self, value: SwitchParameter) -> None: ...


class SuspendJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Job(self) -> Set(Job): ...
    @property
    def Wait(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...
    @Wait.setter
    def Wait(self, value: SwitchParameter) -> None: ...


class TestModuleManifestCommand(ModuleCmdletBase):
    def __init__(self): ...
    @property
    def Path(self) -> str: ...
    @Path.setter
    def Path(self, value: str) -> None: ...


class TestPSSessionConfigurationFileCommand:
    def __init__(self): ...
    @property
    def Path(self) -> str: ...
    @Path.setter
    def Path(self, value: str) -> None: ...


class UnregisterPSSessionConfigurationCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Name(self) -> str: ...
    @property
    def NoServiceRestart(self) -> SwitchParameter: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @NoServiceRestart.setter
    def NoServiceRestart(self, value: SwitchParameter) -> None: ...


class UpdatableHelpCommandBase:
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def UICulture(self) -> Set(CultureInfo): ...
    @property
    def UseDefaultCredentials(self) -> SwitchParameter: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @UICulture.setter
    def UICulture(self, value: Set(CultureInfo)) -> None: ...
    @UseDefaultCredentials.setter
    def UseDefaultCredentials(self, value: SwitchParameter) -> None: ...


class UpdateHelpCommand(UpdatableHelpCommandBase):
    def __init__(self): ...
    @property
    def FullyQualifiedModule(self) -> Set(ModuleSpecification): ...
    @property
    def LiteralPath(self) -> Set(str): ...
    @property
    def Module(self) -> Set(str): ...
    @property
    def Recurse(self) -> SwitchParameter: ...
    @property
    def SourcePath(self) -> Set(str): ...
    @FullyQualifiedModule.setter
    def FullyQualifiedModule(self, value: Set(ModuleSpecification)) -> None: ...
    @LiteralPath.setter
    def LiteralPath(self, value: Set(str)) -> None: ...
    @Module.setter
    def Module(self, value: Set(str)) -> None: ...
    @Recurse.setter
    def Recurse(self, value: SwitchParameter) -> None: ...
    @SourcePath.setter
    def SourcePath(self, value: Set(str)) -> None: ...


class VariableProvider(SessionStateProviderBase):
    def __init__(self): ...


class WaitJobCommand(JobCmdletBase):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    @property
    def Any(self) -> SwitchParameter: ...
    @property
    def Command(self) -> Set(str): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def Job(self) -> Set(Job): ...
    @property
    def Timeout(self) -> int: ...
    @Any.setter
    def Any(self, value: SwitchParameter) -> None: ...
    @Command.setter
    def Command(self, value: Set(str)) -> None: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @Job.setter
    def Job(self, value: Set(Job)) -> None: ...
    @Timeout.setter
    def Timeout(self, value: int) -> None: ...


class WhereObjectCommand:
    def __init__(self): ...
    @property
    def CContains(self) -> SwitchParameter: ...
    @property
    def CEQ(self) -> SwitchParameter: ...
    @property
    def CGE(self) -> SwitchParameter: ...
    @property
    def CGT(self) -> SwitchParameter: ...
    @property
    def CIn(self) -> SwitchParameter: ...
    @property
    def CLE(self) -> SwitchParameter: ...
    @property
    def CLike(self) -> SwitchParameter: ...
    @property
    def CLT(self) -> SwitchParameter: ...
    @property
    def CMatch(self) -> SwitchParameter: ...
    @property
    def CNE(self) -> SwitchParameter: ...
    @property
    def CNotContains(self) -> SwitchParameter: ...
    @property
    def CNotIn(self) -> SwitchParameter: ...
    @property
    def CNotLike(self) -> SwitchParameter: ...
    @property
    def CNotMatch(self) -> SwitchParameter: ...
    @property
    def Contains(self) -> SwitchParameter: ...
    @property
    def EQ(self) -> SwitchParameter: ...
    @property
    def FilterScript(self) -> ScriptBlock: ...
    @property
    def GE(self) -> SwitchParameter: ...
    @property
    def GT(self) -> SwitchParameter: ...
    @property
    def In(self) -> SwitchParameter: ...
    @property
    def InputObject(self) -> PSObject: ...
    @property
    def Is(self) -> SwitchParameter: ...
    @property
    def IsNot(self) -> SwitchParameter: ...
    @property
    def LE(self) -> SwitchParameter: ...
    @property
    def Like(self) -> SwitchParameter: ...
    @property
    def LT(self) -> SwitchParameter: ...
    @property
    def Match(self) -> SwitchParameter: ...
    @property
    def NE(self) -> SwitchParameter: ...
    @property
    def NotContains(self) -> SwitchParameter: ...
    @property
    def NotIn(self) -> SwitchParameter: ...
    @property
    def NotLike(self) -> SwitchParameter: ...
    @property
    def NotMatch(self) -> SwitchParameter: ...
    @property
    def Property(self) -> str: ...
    @property
    def Value(self) -> Object: ...
    @CContains.setter
    def CContains(self, value: SwitchParameter) -> None: ...
    @CEQ.setter
    def CEQ(self, value: SwitchParameter) -> None: ...
    @CGE.setter
    def CGE(self, value: SwitchParameter) -> None: ...
    @CGT.setter
    def CGT(self, value: SwitchParameter) -> None: ...
    @CIn.setter
    def CIn(self, value: SwitchParameter) -> None: ...
    @CLE.setter
    def CLE(self, value: SwitchParameter) -> None: ...
    @CLike.setter
    def CLike(self, value: SwitchParameter) -> None: ...
    @CLT.setter
    def CLT(self, value: SwitchParameter) -> None: ...
    @CMatch.setter
    def CMatch(self, value: SwitchParameter) -> None: ...
    @CNE.setter
    def CNE(self, value: SwitchParameter) -> None: ...
    @CNotContains.setter
    def CNotContains(self, value: SwitchParameter) -> None: ...
    @CNotIn.setter
    def CNotIn(self, value: SwitchParameter) -> None: ...
    @CNotLike.setter
    def CNotLike(self, value: SwitchParameter) -> None: ...
    @CNotMatch.setter
    def CNotMatch(self, value: SwitchParameter) -> None: ...
    @Contains.setter
    def Contains(self, value: SwitchParameter) -> None: ...
    @EQ.setter
    def EQ(self, value: SwitchParameter) -> None: ...
    @FilterScript.setter
    def FilterScript(self, value: ScriptBlock) -> None: ...
    @GE.setter
    def GE(self, value: SwitchParameter) -> None: ...
    @GT.setter
    def GT(self, value: SwitchParameter) -> None: ...
    @In.setter
    def In(self, value: SwitchParameter) -> None: ...
    @InputObject.setter
    def InputObject(self, value: PSObject) -> None: ...
    @Is.setter
    def Is(self, value: SwitchParameter) -> None: ...
    @IsNot.setter
    def IsNot(self, value: SwitchParameter) -> None: ...
    @LE.setter
    def LE(self, value: SwitchParameter) -> None: ...
    @Like.setter
    def Like(self, value: SwitchParameter) -> None: ...
    @LT.setter
    def LT(self, value: SwitchParameter) -> None: ...
    @Match.setter
    def Match(self, value: SwitchParameter) -> None: ...
    @NE.setter
    def NE(self, value: SwitchParameter) -> None: ...
    @NotContains.setter
    def NotContains(self, value: SwitchParameter) -> None: ...
    @NotIn.setter
    def NotIn(self, value: SwitchParameter) -> None: ...
    @NotLike.setter
    def NotLike(self, value: SwitchParameter) -> None: ...
    @NotMatch.setter
    def NotMatch(self, value: SwitchParameter) -> None: ...
    @Property.setter
    def Property(self, value: str) -> None: ...
    @Value.setter
    def Value(self, value: Object) -> None: ...


class WSManConfigurationOption:
    @property
    def IdleTimeoutSec(self) -> Nullable: ...
    @property
    def MaxConcurrentCommandsPerSession(self) -> Nullable: ...
    @property
    def MaxConcurrentUsers(self) -> Nullable: ...
    @property
    def MaxIdleTimeoutSec(self) -> Nullable: ...
    @property
    def MaxMemoryPerSessionMB(self) -> Nullable: ...
    @property
    def MaxProcessesPerSession(self) -> Nullable: ...
    @property
    def MaxSessions(self) -> Nullable: ...
    @property
    def MaxSessionsPerUser(self) -> Nullable: ...
    @property
    def OutputBufferingMode(self) -> Nullable: ...
    @property
    def ProcessIdleTimeoutSec(self) -> Nullable: ...
