from typing import Tuple, Set, Iterable, List


class ConvertFromStringCommand:
    def __init__(self): ...
    @property
    def Delimiter(self) -> str: ...
    @property
    def IncludeExtent(self) -> SwitchParameter: ...
    @property
    def InputObject(self) -> str: ...
    @property
    def PropertyNames(self) -> Set(str): ...
    @property
    def TemplateContent(self) -> Set(str): ...
    @property
    def TemplateFile(self) -> Set(str): ...
    @property
    def UpdateTemplate(self) -> SwitchParameter: ...
    @Delimiter.setter
    def Delimiter(self, value: str) -> None: ...
    @IncludeExtent.setter
    def IncludeExtent(self, value: SwitchParameter) -> None: ...
    @InputObject.setter
    def InputObject(self, value: str) -> None: ...
    @PropertyNames.setter
    def PropertyNames(self, value: Set(str)) -> None: ...
    @TemplateContent.setter
    def TemplateContent(self, value: Set(str)) -> None: ...
    @TemplateFile.setter
    def TemplateFile(self, value: Set(str)) -> None: ...
    @UpdateTemplate.setter
    def UpdateTemplate(self, value: SwitchParameter) -> None: ...


class ConvertStringCommand:
    def __init__(self): ...
    @property
    def Example(self) -> List: ...
    @property
    def InputObject(self) -> str: ...
    @Example.setter
    def Example(self, value: List) -> None: ...
    @InputObject.setter
    def InputObject(self, value: str) -> None: ...
