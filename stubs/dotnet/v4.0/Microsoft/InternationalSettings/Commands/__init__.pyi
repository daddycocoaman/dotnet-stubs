from typing import Tuple, Set, Iterable, List


class CopyUserInternationalSettingsToSystemCommand:
    def __init__(self): ...
    @property
    def NewUser(self) -> bool: ...
    @property
    def WelcomeScreen(self) -> bool: ...
    @NewUser.setter
    def NewUser(self, value: bool) -> None: ...
    @WelcomeScreen.setter
    def WelcomeScreen(self, value: bool) -> None: ...


class GetWinAcceptLanguageFromLanguageListOptOutCommand:
    def __init__(self): ...


class GetWinCultureFromLanguageListOptOutCommand:
    def __init__(self): ...


class GetWinDefaultInputMethodOverrideCommand:
    def __init__(self): ...


class GetWinHomeLocationCommand:
    def __init__(self): ...


class GetWinLanguageBarOptionCommand:
    def __init__(self): ...


class GetWinSystemLocaleCommand:
    def __init__(self): ...


class GetWinUILanguageOverrideCommand:
    def __init__(self): ...


class GetWinUserLanguageListCommand:
    def __init__(self): ...


class NewWinUserLanguageListCommand:
    def __init__(self): ...
    @property
    def Language(self) -> str: ...
    @Language.setter
    def Language(self, value: str) -> None: ...


class SetCultureCommand:
    def __init__(self): ...
    @property
    def CultureInfo(self) -> CultureInfo: ...
    @CultureInfo.setter
    def CultureInfo(self, value: CultureInfo) -> None: ...


class SetWinAcceptLanguageFromLanguageListOptOutCommand:
    def __init__(self): ...
    @property
    def OptOut(self) -> bool: ...
    @OptOut.setter
    def OptOut(self, value: bool) -> None: ...


class SetWinCultureFromLanguageListOptOutCommand:
    def __init__(self): ...
    @property
    def OptOut(self) -> bool: ...
    @OptOut.setter
    def OptOut(self, value: bool) -> None: ...


class SetWinDefaultInputMethodOverrideCommand:
    def __init__(self): ...
    @property
    def InputTip(self) -> str: ...
    @InputTip.setter
    def InputTip(self, value: str) -> None: ...


class SetWinHomeLocationCommand:
    def __init__(self): ...
    @property
    def GeoId(self) -> int: ...
    @GeoId.setter
    def GeoId(self, value: int) -> None: ...


class SetWinLanguageBarOptionCommand:
    def __init__(self): ...
    @property
    def UseLegacyLanguageBar(self) -> SwitchParameter: ...
    @property
    def UseLegacySwitchMode(self) -> SwitchParameter: ...
    @UseLegacyLanguageBar.setter
    def UseLegacyLanguageBar(self, value: SwitchParameter) -> None: ...
    @UseLegacySwitchMode.setter
    def UseLegacySwitchMode(self, value: SwitchParameter) -> None: ...


class SetWinSystemLocaleCommand:
    def __init__(self): ...
    @property
    def SystemLocale(self) -> CultureInfo: ...
    @SystemLocale.setter
    def SystemLocale(self, value: CultureInfo) -> None: ...


class SetWinUILanguageOverrideCommand:
    def __init__(self): ...
    @property
    def Language(self) -> CultureInfo: ...
    @Language.setter
    def Language(self, value: CultureInfo) -> None: ...


class SetWinUserLanguageListCommand:
    def __init__(self): ...
    @property
    def Force(self) -> SwitchParameter: ...
    @property
    def LanguageList(self) -> List: ...
    @Force.setter
    def Force(self, value: SwitchParameter) -> None: ...
    @LanguageList.setter
    def LanguageList(self, value: List) -> None: ...


class WinGeoId:
    def __init__(self, id: int, name: str): ...
    @property
    def GeoId(self) -> int: ...
    @property
    def HomeLocation(self) -> str: ...
    @GeoId.setter
    def GeoId(self, value: int) -> None: ...
    @HomeLocation.setter
    def HomeLocation(self, value: str) -> None: ...


class WinKeyboardInfo:
    def __init__(self, input: str, name: str): ...
    @property
    def Description(self) -> str: ...
    @property
    def InputMethodTip(self) -> str: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @InputMethodTip.setter
    def InputMethodTip(self, value: str) -> None: ...


class WinLanguageBarOptions:
    def __init__(self, bar: bool, mode: bool): ...
    @property
    def IsLegacyLanguageBar(self) -> bool: ...
    @property
    def IsLegacySwitchingMode(self) -> bool: ...
    @IsLegacyLanguageBar.setter
    def IsLegacyLanguageBar(self, value: bool) -> None: ...
    @IsLegacySwitchingMode.setter
    def IsLegacySwitchingMode(self, value: bool) -> None: ...


class WinUserLanguage:
    def __init__(self, newTag: str): ...
    @property
    def Autonym(self) -> str: ...
    @property
    def EnglishName(self) -> str: ...
    @property
    def Handwriting(self) -> bool: ...
    @property
    def InputMethodTips(self) -> List: ...
    @property
    def LanguageTag(self) -> str: ...
    @property
    def LocalizedName(self) -> str: ...
    @property
    def ScriptName(self) -> str: ...
    @property
    def Spellchecking(self) -> bool: ...
    def IsValid(self) -> bool: ...
    @Handwriting.setter
    def Handwriting(self, value: bool) -> None: ...
    @Spellchecking.setter
    def Spellchecking(self, value: bool) -> None: ...
