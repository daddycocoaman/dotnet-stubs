from typing import Tuple, Set, Iterable, List


class ClrmdAppDomain(ClrAppDomain):
    @overload
    def __init__(self, runtime: ClrRuntime, data: IAppDomainData): ...
    @overload
    def __init__(self, runtime: ClrRuntime, helpers: IAppDomainHelpers, address: UInt64): ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def ApplicationBase(self) -> str: ...
    @property
    def ConfigurationFile(self) -> str: ...
    @property
    def Id(self) -> int: ...
    @property
    def Modules(self) -> ImmutableArray: ...
    @property
    def Name(self) -> str: ...
    @property
    def Runtime(self) -> ClrRuntime: ...


class ClrmdArrayType(ClrmdType):
    def __init__(self, heap: ClrHeap, baseType: ClrType, module: ClrModule, data: ITypeData, name: str): ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ComponentType(self) -> ClrType: ...
    def GetArrayElementAddress(self, objRef: UInt64, index: int) -> UInt64: ...
    def ReadArrayElements(self, objRef: UInt64, start: int, count: int) -> Set(T): ...
    def SetComponentType(self, type: ClrType) -> None: ...


class ClrmdConstructedType(ClrType):
    def __init__(self, componentType: ClrType, ranks: int, pointer: bool): ...
    def AsEnum(self) -> ClrEnum: ...
    def EnumerateInterfaces(self) -> Iterable[ClrInterface]: ...
    @property
    def BaseType(self) -> ClrType: ...
    @property
    def ClrObjectHelpers(self) -> IClrObjectHelpers: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ComponentType(self) -> ClrType: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def Fields(self) -> ImmutableArray: ...
    @property
    def GCDesc(self) -> GCDesc: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsAbstract(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsEnum(self) -> bool: ...
    @property
    def IsFinalizable(self) -> bool: ...
    @property
    def IsInterface(self) -> bool: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsPointer(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsSealed(self) -> bool: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def MetadataToken(self) -> int: ...
    @property
    def Methods(self) -> ImmutableArray: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @property
    def Module(self) -> ClrModule: ...
    @property
    def Name(self) -> str: ...
    @property
    def StaticFields(self) -> ImmutableArray: ...
    @property
    def StaticSize(self) -> int: ...
    def GetArrayElementAddress(self, objRef: UInt64, index: int) -> UInt64: ...
    def GetFieldByName(self, name: str) -> ClrInstanceField: ...
    def GetStaticFieldByName(self, name: str) -> ClrStaticField: ...
    def IsFinalizeSuppressed(self, obj: UInt64) -> bool: ...
    def ReadArrayElements(self, objRef: UInt64, start: int, count: int) -> Set(T): ...


class ClrmdDependentHandle(ClrHandle):
    def __init__(self, parent: ClrAppDomain, address: UInt64, obj: ClrObject, dependent: ClrObject): ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def AppDomain(self) -> ClrAppDomain: ...
    @property
    def Dependent(self) -> ClrObject: ...
    @property
    def HandleKind(self) -> ClrHandleKind: ...
    @property
    def Object(self) -> ClrObject: ...
    @property
    def ReferenceCount(self) -> UInt32: ...


class ClrmdField(ClrInstanceField):
    def __init__(self, containingType: ClrType, data: IFieldData): ...
    @property
    def ContainingType(self) -> ClrType: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsObjectReference(self) -> bool: ...
    @property
    def IsPrimitive(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsValueType(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def Offset(self) -> int: ...
    @property
    def Size(self) -> int: ...
    @property
    def Token(self) -> int: ...
    @property
    def Type(self) -> ClrType: ...
    @overload
    def GetAddress(self, objRef: UInt64, interior: bool) -> UInt64: ...
    def Read(self, objRef: UInt64, interior: bool) -> T: ...
    def ReadObject(self, objRef: UInt64, interior: bool) -> ClrObject: ...
    def ReadString(self, objRef: UInt64, interior: bool) -> str: ...
    def ReadStruct(self, objRef: UInt64, interior: bool) -> ClrValueType: ...


class ClrmdGenericType(ClrType):
    def __init__(self, helpers: IClrObjectHelpers, heap: ClrHeap, module: ClrModule, clrGenericParameter: ClrGenericParameter): ...
    def AsEnum(self) -> ClrEnum: ...
    def EnumerateInterfaces(self) -> Iterable[ClrInterface]: ...
    @property
    def BaseType(self) -> ClrType: ...
    @property
    def ClrObjectHelpers(self) -> IClrObjectHelpers: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ComponentType(self) -> ClrType: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def Fields(self) -> ImmutableArray: ...
    @property
    def GCDesc(self) -> GCDesc: ...
    @property
    def GenericParameter(self) -> ClrGenericParameter: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsAbstract(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsEnum(self) -> bool: ...
    @property
    def IsFinalizable(self) -> bool: ...
    @property
    def IsInterface(self) -> bool: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsSealed(self) -> bool: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def MetadataToken(self) -> int: ...
    @property
    def Methods(self) -> ImmutableArray: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @property
    def Module(self) -> ClrModule: ...
    @property
    def Name(self) -> str: ...
    @property
    def StaticFields(self) -> ImmutableArray: ...
    @property
    def StaticSize(self) -> int: ...
    def GetArrayElementAddress(self, objRef: UInt64, index: int) -> UInt64: ...
    def GetFieldByName(self, name: str) -> ClrInstanceField: ...
    def GetStaticFieldByName(self, name: str) -> ClrStaticField: ...
    def IsFinalizeSuppressed(self, obj: UInt64) -> bool: ...
    def ReadArrayElements(self, objRef: UInt64, start: int, count: int) -> Set(T): ...


class ClrmdHandle(ClrHandle):
    def __init__(self, parent: ClrAppDomain, address: UInt64, obj: ClrObject, kind: ClrHandleKind): ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def AppDomain(self) -> ClrAppDomain: ...
    @property
    def Dependent(self) -> ClrObject: ...
    @property
    def HandleKind(self) -> ClrHandleKind: ...
    @property
    def Object(self) -> ClrObject: ...
    @property
    def ReferenceCount(self) -> UInt32: ...


class ClrmdHeap(ClrHeap):
    def __init__(self, runtime: ClrRuntime, data: IHeapData): ...
    def ClearCachedData(self) -> None: ...
    def EnumerateAllocationContexts(self) -> Iterable[MemoryRange]: ...
    def EnumerateFinalizableObjects(self) -> Iterable[ClrObject]: ...
    def EnumerateFinalizerRoots(self) -> Iterable[ClrFinalizerRoot]: ...
    def EnumerateObjectReferences(self, obj: UInt64, type: ClrType, carefully: bool, considerDependantHandles: bool) -> Iterable[ClrObject]: ...
    def EnumerateObjects(self) -> Iterable[ClrObject]: ...
    def EnumerateReferencesWithFields(self, obj: UInt64, type: ClrType, carefully: bool, considerDependantHandles: bool) -> Iterable[ClrReference]: ...
    def EnumerateRoots(self) -> Iterable[IClrRoot]: ...
    @property
    def CanWalkHeap(self) -> bool: ...
    @property
    def ExceptionType(self) -> ClrType: ...
    @property
    def FreeType(self) -> ClrType: ...
    @property
    def IsServer(self) -> bool: ...
    @property
    def LogicalHeapCount(self) -> int: ...
    @property
    def ObjectType(self) -> ClrType: ...
    @property
    def Runtime(self) -> ClrRuntime: ...
    @property
    def Segments(self) -> ImmutableArray: ...
    @property
    def StringType(self) -> ClrType: ...
    def GetComFlags(self, obj: UInt64) -> SyncBlockComFlags: ...
    def GetObjectSize(self, objRef: UInt64, type: ClrType) -> UInt64: ...
    def GetObjectType(self, objRef: UInt64) -> ClrType: ...
    def GetSegmentByAddress(self, address: UInt64) -> ClrSegment: ...
    def GetSyncBlock(self, obj: UInt64) -> SyncBlock: ...
    def SkipAllocationContext(self, seg: ClrSegment, address: UInt64) -> UInt64: ...


class ClrmdMethod(ClrMethod):
    def __init__(self, type: ClrType, data: IMethodData): ...
    @property
    def CompilationType(self) -> MethodCompilationType: ...
    @property
    def HotColdInfo(self) -> HotColdRegions: ...
    @property
    def IL(self) -> ILInfo: ...
    @property
    def ILOffsetMap(self) -> ImmutableArray: ...
    @property
    def IsAbstract(self) -> bool: ...
    @property
    def IsFinal(self) -> bool: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsPInvoke(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsRTSpecialName(self) -> bool: ...
    @property
    def IsSpecialName(self) -> bool: ...
    @property
    def IsStatic(self) -> bool: ...
    @property
    def IsVirtual(self) -> bool: ...
    @property
    def MetadataToken(self) -> int: ...
    @property
    def MethodDesc(self) -> UInt64: ...
    @property
    def Name(self) -> str: ...
    @property
    def NativeCode(self) -> UInt64: ...
    @property
    def Signature(self) -> str: ...
    @property
    def Type(self) -> ClrType: ...
    def GetILOffset(self, addr: UInt64) -> int: ...
    def ToString(self) -> str: ...


class ClrmdModule(ClrModule):
    @overload
    def __init__(self, parent: ClrAppDomain, data: IModuleData): ...
    @overload
    def __init__(self, parent: ClrAppDomain, helpers: IModuleHelpers, addr: UInt64): ...
    def EnumerateTypeDefToMethodTableMap(self) -> Iterable[ValueTuple]: ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def AppDomain(self) -> ClrAppDomain: ...
    @property
    def AssemblyAddress(self) -> UInt64: ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def DebuggingMode(self) -> DebuggingModes: ...
    @property
    def ImageBase(self) -> UInt64: ...
    @property
    def IsDynamic(self) -> bool: ...
    @property
    def IsPEFile(self) -> bool: ...
    @property
    def Layout(self) -> ModuleLayout: ...
    @property
    def MetadataAddress(self) -> UInt64: ...
    @property
    def MetadataImport(self) -> MetadataImport: ...
    @property
    def MetadataLength(self) -> UInt64: ...
    @property
    def Name(self) -> str: ...
    @property
    def Pdb(self) -> PdbInfo: ...
    @property
    def Size(self) -> UInt64: ...
    def GetTypeByName(self, name: str) -> ClrType: ...
    def ResolveToken(self, typeDefOrRefToken: int) -> ClrType: ...


class ClrmdPrimitiveType(ClrType):
    def __init__(self, helpers: ITypeHelpers, module: ClrModule, heap: ClrHeap, type: ClrElementType): ...
    def AsEnum(self) -> ClrEnum: ...
    def EnumerateInterfaces(self) -> Iterable[ClrInterface]: ...
    @property
    def BaseType(self) -> ClrType: ...
    @property
    def ClrObjectHelpers(self) -> IClrObjectHelpers: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ComponentType(self) -> ClrType: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def Fields(self) -> ImmutableArray: ...
    @property
    def GCDesc(self) -> GCDesc: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsAbstract(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsEnum(self) -> bool: ...
    @property
    def IsFinalizable(self) -> bool: ...
    @property
    def IsInterface(self) -> bool: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsSealed(self) -> bool: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def MetadataToken(self) -> int: ...
    @property
    def Methods(self) -> ImmutableArray: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @property
    def Module(self) -> ClrModule: ...
    @property
    def Name(self) -> str: ...
    @property
    def StaticFields(self) -> ImmutableArray: ...
    @property
    def StaticSize(self) -> int: ...
    def GetArrayElementAddress(self, objRef: UInt64, index: int) -> UInt64: ...
    def GetFieldByName(self, name: str) -> ClrInstanceField: ...
    def GetStaticFieldByName(self, name: str) -> ClrStaticField: ...
    def IsFinalizeSuppressed(self, obj: UInt64) -> bool: ...
    def ReadArrayElements(self, objRef: UInt64, start: int, count: int) -> Set(T): ...


class ClrmdRefCountedHandle(ClrHandle):
    def __init__(self, parent: ClrAppDomain, address: UInt64, obj: ClrObject, refCount: UInt32): ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def AppDomain(self) -> ClrAppDomain: ...
    @property
    def Dependent(self) -> ClrObject: ...
    @property
    def HandleKind(self) -> ClrHandleKind: ...
    @property
    def Object(self) -> ClrObject: ...
    @property
    def ReferenceCount(self) -> UInt32: ...


class ClrmdRuntime(ClrRuntime):
    def __init__(self, info: ClrInfo, dac: DacLibrary, helpers: IRuntimeHelpers): ...
    def EnumerateHandles(self) -> Iterable[ClrHandle]: ...
    def EnumerateModules(self) -> Iterable[ClrModule]: ...
    def FlushCachedData(self) -> None: ...
    @property
    def AppDomains(self) -> ImmutableArray: ...
    @property
    def BaseClassLibrary(self) -> ClrModule: ...
    @property
    def ClrInfo(self) -> ClrInfo: ...
    @property
    def DacLibrary(self) -> DacLibrary: ...
    @property
    def DataTarget(self) -> DataTarget: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsThreadSafe(self) -> bool: ...
    @property
    def SharedDomain(self) -> ClrAppDomain: ...
    @property
    def SystemDomain(self) -> ClrAppDomain: ...
    @property
    def Threads(self) -> ImmutableArray: ...
    def GetJitHelperFunctionName(self, ip: UInt64) -> str: ...
    def GetMethodByHandle(self, methodHandle: UInt64) -> ClrMethod: ...
    def GetMethodByInstructionPointer(self, ip: UInt64) -> ClrMethod: ...
    def GetTypeByMethodTable(self, methodTable: UInt64) -> ClrType: ...
    def Initialize(self) -> None: ...


class ClrmdSegment(ClrSegment):
    def __init__(self, heap: ClrmdHeap, helpers: IHeapHelpers, data: ISegmentData): ...
    def EnumerateObjects(self) -> Iterable[ClrObject]: ...
    @property
    def CommittedMemory(self) -> MemoryRange: ...
    @property
    def FirstObjectAddress(self) -> UInt64: ...
    @property
    def Generation0(self) -> MemoryRange: ...
    @property
    def Generation1(self) -> MemoryRange: ...
    @property
    def Generation2(self) -> MemoryRange: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsEphemeralSegment(self) -> bool: ...
    @property
    def IsLargeObjectSegment(self) -> bool: ...
    @property
    def IsPinnedObjectSegment(self) -> bool: ...
    @property
    def LogicalHeap(self) -> int: ...
    @property
    def ObjectRange(self) -> MemoryRange: ...
    @property
    def ReservedMemory(self) -> MemoryRange: ...
    def GetNextObjectAddress(self, addr: UInt64) -> UInt64: ...
    def GetPreviousObjectAddress(self, addr: UInt64) -> UInt64: ...


class ClrmdStaticField(ClrStaticField):
    def __init__(self, containingType: ClrType, data: IFieldData): ...
    @property
    def ContainingType(self) -> ClrType: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsObjectReference(self) -> bool: ...
    @property
    def IsPrimitive(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsValueType(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def Offset(self) -> int: ...
    @property
    def Size(self) -> int: ...
    @property
    def Token(self) -> int: ...
    @property
    def Type(self) -> ClrType: ...
    def GetAddress(self, domain: ClrAppDomain) -> UInt64: ...
    def IsInitialized(self, appDomain: ClrAppDomain) -> bool: ...
    def Read(self, appDomain: ClrAppDomain) -> T: ...
    def ReadObject(self, appDomain: ClrAppDomain) -> ClrObject: ...
    def ReadString(self, appDomain: ClrAppDomain) -> str: ...
    def ReadStruct(self, appDomain: ClrAppDomain) -> ClrValueType: ...


class ClrmdThread(ClrThread):
    def __init__(self, data: IThreadData, runtime: ClrRuntime, currentDomain: ClrAppDomain): ...
    def EnumerateStackRoots(self) -> Iterable[IClrStackRoot]: ...
    def EnumerateStackTrace(self, includeContext: bool) -> Iterable[ClrStackFrame]: ...
    @property
    def Address(self) -> UInt64: ...
    @property
    def CurrentAppDomain(self) -> ClrAppDomain: ...
    @property
    def CurrentException(self) -> ClrException: ...
    @property
    def GCMode(self) -> GCMode: ...
    @property
    def IsAborted(self) -> bool: ...
    @property
    def IsAbortRequested(self) -> bool: ...
    @property
    def IsAlive(self) -> bool: ...
    @property
    def IsBackground(self) -> bool: ...
    @property
    def IsCoInitialized(self) -> bool: ...
    @property
    def IsDebugSuspended(self) -> bool: ...
    @property
    def IsFinalizer(self) -> bool: ...
    @property
    def IsGCSuspendPending(self) -> bool: ...
    @property
    def IsMTA(self) -> bool: ...
    @property
    def IsSTA(self) -> bool: ...
    @property
    def IsUnstarted(self) -> bool: ...
    @property
    def IsUserSuspended(self) -> bool: ...
    @property
    def LockCount(self) -> UInt32: ...
    @property
    def ManagedThreadId(self) -> int: ...
    @property
    def OSThreadId(self) -> UInt32: ...
    @property
    def Runtime(self) -> ClrRuntime: ...
    @property
    def StackBase(self) -> UInt64: ...
    @property
    def StackLimit(self) -> UInt64: ...


class ClrmdType(ClrType):
    def __init__(self, heap: ClrHeap, baseType: ClrType, module: ClrModule, data: ITypeData, name: str): ...
    def AsEnum(self) -> ClrEnum: ...
    def EnumerateGenericParameters(self) -> Iterable[ClrGenericParameter]: ...
    def EnumerateInterfaces(self) -> Iterable[ClrInterface]: ...
    def FixGenerics(name: str) -> str: ...
    @property
    def AssemblyLoadContextAddress(self) -> UInt64: ...
    @property
    def BaseType(self) -> ClrType: ...
    @property
    def ClrObjectHelpers(self) -> IClrObjectHelpers: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ComponentType(self) -> ClrType: ...
    @property
    def ContainsPointers(self) -> bool: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def Fields(self) -> ImmutableArray: ...
    @property
    def GCDesc(self) -> GCDesc: ...
    @property
    def Heap(self) -> ClrHeap: ...
    @property
    def IsAbstract(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsCollectible(self) -> bool: ...
    @property
    def IsEnum(self) -> bool: ...
    @property
    def IsException(self) -> bool: ...
    @property
    def IsFinalizable(self) -> bool: ...
    @property
    def IsFree(self) -> bool: ...
    @property
    def IsInterface(self) -> bool: ...
    @property
    def IsInternal(self) -> bool: ...
    @property
    def IsPrivate(self) -> bool: ...
    @property
    def IsProtected(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsSealed(self) -> bool: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def IsString(self) -> bool: ...
    @property
    def LoaderAllocatorHandle(self) -> UInt64: ...
    @property
    def MetadataToken(self) -> int: ...
    @property
    def Methods(self) -> ImmutableArray: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @property
    def Module(self) -> ClrModule: ...
    @property
    def Name(self) -> str: ...
    @property
    def Shared(self) -> bool: ...
    @property
    def StaticFields(self) -> ImmutableArray: ...
    @property
    def StaticSize(self) -> int: ...
    def GetArrayElementAddress(self, objRef: UInt64, index: int) -> UInt64: ...
    def GetFieldByName(self, name: str) -> ClrInstanceField: ...
    def GetStaticFieldByName(self, name: str) -> ClrStaticField: ...
    def IsFinalizeSuppressed(self, obj: UInt64) -> bool: ...
    def ReadArrayElements(self, objRef: UInt64, start: int, count: int) -> Set(T): ...


class ComSyncBlock(SyncBlock):
    def __init__(self, obj: UInt64, comFlags: UInt32): ...
    @property
    def ComFlags(self) -> SyncBlockComFlags: ...
    @property
    def IsComCallWrapper(self) -> bool: ...
    @property
    def IsComClassFactory(self) -> bool: ...
    @property
    def IsRuntimeCallWrapper(self) -> bool: ...


class FinalizerQueueSegment:
    def __init__(self, start: UInt64, end: UInt64): ...
    @property
    def End(self) -> UInt64: ...
    @property
    def Start(self) -> UInt64: ...


class FullSyncBlock(SyncBlock):
    def __init__(self, syncBlk: SyncBlockData): ...
    @property
    def ComFlags(self) -> SyncBlockComFlags: ...
    @property
    def HoldingThreadAddress(self) -> UInt64: ...
    @property
    def IsComCallWrapper(self) -> bool: ...
    @property
    def IsComClassFactory(self) -> bool: ...
    @property
    def IsMonitorHeld(self) -> bool: ...
    @property
    def IsRuntimeCallWrapper(self) -> bool: ...
    @property
    def RecursionCount(self) -> int: ...
    @property
    def WaitingThreadCount(self) -> int: ...


class HeapWalkStep:
    @property
    def Address(self) -> UInt64: ...
    @property
    def BaseSize(self) -> int: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def Count(self) -> UInt32: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @Address.setter
    def Address(self, value: UInt64) -> None: ...
    @BaseSize.setter
    def BaseSize(self, value: int) -> None: ...
    @ComponentSize.setter
    def ComponentSize(self, value: int) -> None: ...
    @Count.setter
    def Count(self, value: UInt32) -> None: ...
    @MethodTable.setter
    def MethodTable(self, value: UInt64) -> None: ...


class IAppDomainData:
    @property
    def Address(self) -> UInt64: ...
    @property
    def Helpers(self) -> IAppDomainHelpers: ...
    @property
    def Id(self) -> int: ...
    @property
    def Name(self) -> str: ...


class IAppDomainHelpers:
    def EnumerateModules(self, domain: ClrAppDomain) -> Iterable[ClrModule]: ...
    def GetApplicationBase(self, domain: ClrAppDomain) -> str: ...
    def GetConfigFile(self, domain: ClrAppDomain) -> str: ...


class ICcwData:
    @property
    def Address(self) -> UInt64: ...
    @property
    def Handle(self) -> UInt64: ...
    @property
    def IUnknown(self) -> UInt64: ...
    @property
    def JupiterRefCount(self) -> int: ...
    @property
    def Object(self) -> UInt64: ...
    @property
    def RefCount(self) -> int: ...
    def GetInterfaces(self) -> ImmutableArray: ...


class IClrObjectHelpers:
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def ExceptionHelpers(self) -> IExceptionHelpers: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def ReadString(self, addr: UInt64, maxLength: int) -> str: ...


class IExceptionHelpers:
    @property
    def DataReader(self) -> IDataReader: ...
    def GetExceptionStackTrace(self, thread: ClrThread, obj: ClrObject) -> ImmutableArray: ...
    def GetHResultOffset(self, type: ClrType) -> UInt32: ...
    def GetInnerExceptionOffset(self, type: ClrType) -> UInt32: ...
    def GetMessageOffset(self, type: ClrType) -> UInt32: ...


class IFieldData:
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def Helpers(self) -> IFieldHelpers: ...
    @property
    def Offset(self) -> int: ...
    @property
    def Token(self) -> int: ...
    @property
    def TypeMethodTable(self) -> UInt64: ...


class IFieldHelpers:
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def GetStaticFieldAddress(self, field: ClrStaticField, appDomain: ClrAppDomain) -> UInt64: ...
    def ReadProperties(self, parentType: ClrType, token: int) -> Tuple[bool, str, FieldAttributes, SigParser]: ...


class IHeapData:
    @property
    def ArrayMethodTable(self) -> UInt64: ...
    @property
    def CanWalkHeap(self) -> bool: ...
    @property
    def ExceptionMethodTable(self) -> UInt64: ...
    @property
    def FreeMethodTable(self) -> UInt64: ...
    @property
    def HeapHelpers(self) -> IHeapHelpers: ...
    @property
    def IsServer(self) -> bool: ...
    @property
    def LogicalHeapCount(self) -> int: ...
    @property
    def ObjectMethodTable(self) -> UInt64: ...
    @property
    def StringMethodTable(self) -> UInt64: ...


class IHeapHelpers:
    def CreateSegments(self, clrHeap: ClrHeap) -> Tuple[bool, ImmutableArray, ImmutableArray, ImmutableArray, ImmutableArray]: ...
    def EnumerateDependentHandleLinks(self) -> Iterable[ValueTuple]: ...
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def GetSyncBlocks(self) -> Tuple[bool, List, List, List]: ...


class IMethodData:
    @property
    def ColdSize(self) -> UInt32: ...
    @property
    def ColdStart(self) -> UInt64: ...
    @property
    def CompilationType(self) -> MethodCompilationType: ...
    @property
    def Helpers(self) -> IMethodHelpers: ...
    @property
    def HotSize(self) -> UInt32: ...
    @property
    def HotStart(self) -> UInt64: ...
    @property
    def MethodDesc(self) -> UInt64: ...
    @property
    def Token(self) -> int: ...


class IMethodHelpers:
    @property
    def DataReader(self) -> IDataReader: ...
    def GetILForModule(self, address: UInt64, rva: UInt32) -> UInt64: ...
    def GetILMap(self, nativeCode: UInt64, hotColdInfo: HotColdRegions) -> Tuple[ImmutableArray, HotColdRegions]: ...
    def GetSignature(self, methodDesc: UInt64) -> Tuple[bool, str]: ...


class IModuleData:
    @property
    def Address(self) -> UInt64: ...
    @property
    def AssemblyAddress(self) -> UInt64: ...
    @property
    def AssemblyName(self) -> str: ...
    @property
    def FileName(self) -> str: ...
    @property
    def Helpers(self) -> IModuleHelpers: ...
    @property
    def ILImageBase(self) -> UInt64: ...
    @property
    def IsDynamic(self) -> bool: ...
    @property
    def IsFlatLayout(self) -> bool: ...
    @property
    def IsPEFile(self) -> bool: ...
    @property
    def IsReflection(self) -> bool: ...
    @property
    def MetadataLength(self) -> UInt64: ...
    @property
    def MetadataStart(self) -> UInt64: ...
    @property
    def Name(self) -> str: ...
    @property
    def PEImageBase(self) -> UInt64: ...
    @property
    def SimpleName(self) -> str: ...
    @property
    def Size(self) -> UInt64: ...


class IModuleHelpers:
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def GetMetadataImport(self, module: ClrModule) -> MetadataImport: ...
    def GetSortedTypeDefMap(self, module: ClrModule) -> Set(ValueTuple): ...
    def GetSortedTypeRefMap(self, module: ClrModule) -> Set(ValueTuple): ...
    def GetTypeName(self, mt: UInt64) -> str: ...
    def TryGetType(self, mt: UInt64) -> ClrType: ...


class IObjectData:
    @property
    def CCW(self) -> UInt64: ...
    @property
    def DataPointer(self) -> UInt64: ...
    @property
    def ElementType(self) -> ClrElementType: ...
    @property
    def ElementTypeHandle(self) -> UInt64: ...
    @property
    def RCW(self) -> UInt64: ...


class IRcwData:
    @property
    def Address(self) -> UInt64: ...
    @property
    def CreatorThread(self) -> UInt64: ...
    @property
    def Disconnected(self) -> bool: ...
    @property
    def IUnknown(self) -> UInt64: ...
    @property
    def ManagedObject(self) -> UInt64: ...
    @property
    def RefCount(self) -> int: ...
    @property
    def VTablePointer(self) -> UInt64: ...
    def GetInterfaces(self) -> ImmutableArray: ...


class IRuntimeHelpers:
    def EnumerateHandleTable(self, runtime: ClrRuntime) -> Iterable[ClrHandle]: ...
    def FlushCachedData(self) -> None: ...
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def GetAppDomains(self, runtime: ClrRuntime) -> Tuple[ImmutableArray, ClrAppDomain, ClrAppDomain]: ...
    def GetBaseClassLibrary(self, runtime: ClrRuntime) -> ClrModule: ...
    def GetJitHelperFunctionName(self, ip: UInt64) -> str: ...
    def GetMethodDesc(self, ip: UInt64) -> UInt64: ...
    def GetThreads(self, runtime: ClrRuntime) -> ImmutableArray: ...


class ISegmentData:
    @property
    def BaseAddress(self) -> UInt64: ...
    @property
    def CommittedEnd(self) -> UInt64: ...
    @property
    def End(self) -> UInt64: ...
    @property
    def Gen0Length(self) -> UInt64: ...
    @property
    def Gen0Start(self) -> UInt64: ...
    @property
    def Gen1Length(self) -> UInt64: ...
    @property
    def Gen1Start(self) -> UInt64: ...
    @property
    def Gen2Length(self) -> UInt64: ...
    @property
    def Gen2Start(self) -> UInt64: ...
    @property
    def IsEphemeralSegment(self) -> bool: ...
    @property
    def IsLargeObjectSegment(self) -> bool: ...
    @property
    def IsPinnedObjectSegment(self) -> bool: ...
    @property
    def LogicalHeap(self) -> int: ...
    @property
    def ReservedEnd(self) -> UInt64: ...
    @property
    def Start(self) -> UInt64: ...


class IThreadData:
    @property
    def Address(self) -> UInt64: ...
    @property
    def ExceptionHandle(self) -> UInt64: ...
    @property
    def Helpers(self) -> IThreadHelpers: ...
    @property
    def IsFinalizer(self) -> bool: ...
    @property
    def LockCount(self) -> UInt32: ...
    @property
    def ManagedThreadID(self) -> int: ...
    @property
    def OSThreadID(self) -> UInt32: ...
    @property
    def Preemptive(self) -> bool: ...
    @property
    def StackBase(self) -> UInt64: ...
    @property
    def StackLimit(self) -> UInt64: ...
    @property
    def State(self) -> int: ...


class IThreadHelpers:
    def EnumerateStackRoots(self, thread: ClrThread) -> Iterable[IClrStackRoot]: ...
    def EnumerateStackTrace(self, thread: ClrThread, includeContext: bool) -> Iterable[ClrStackFrame]: ...
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def ExceptionHelpers(self) -> IExceptionHelpers: ...
    @property
    def Factory(self) -> ITypeFactory: ...


class ITypeData:
    @property
    def BaseSize(self) -> int: ...
    @property
    def ComponentMethodTable(self) -> UInt64: ...
    @property
    def ComponentSize(self) -> int: ...
    @property
    def ContainsPointers(self) -> bool: ...
    @property
    def Helpers(self) -> ITypeHelpers: ...
    @property
    def IsShared(self) -> bool: ...
    @property
    def MethodCount(self) -> int: ...
    @property
    def MethodTable(self) -> UInt64: ...
    @property
    def Token(self) -> int: ...


class ITypeFactory:
    def CreateCCWForObject(self, obj: UInt64) -> ComCallableWrapper: ...
    def CreateFieldsForType(self, type: ClrType) -> Tuple[bool, ImmutableArray, ImmutableArray]: ...
    def CreateMethodFromHandle(self, methodHandle: UInt64) -> ClrMethod: ...
    def CreateMethodsForType(self, type: ClrType) -> Tuple[bool, ImmutableArray]: ...
    def CreateRCWForObject(self, obj: UInt64) -> RuntimeCallableWrapper: ...
    def CreateSystemType(self, heap: ClrHeap, mt: UInt64, kind: str) -> ClrType: ...
    @property
    def IsThreadSafe(self) -> bool: ...
    def GetOrCreateArrayType(self, inner: ClrType, ranks: int) -> ClrType: ...
    def GetOrCreateBasicType(self, basicType: ClrElementType) -> ClrType: ...
    def GetOrCreateHeap(self) -> ClrHeap: ...
    def GetOrCreateModule(self, domain: ClrAppDomain, address: UInt64) -> ClrModule: ...
    def GetOrCreatePointerType(self, innerType: ClrType, depth: int) -> ClrType: ...
    def GetOrCreateRuntime(self) -> ClrRuntime: ...
    @overload
    def GetOrCreateType(self, mt: UInt64, obj: UInt64) -> ClrType: ...
    @overload
    def GetOrCreateType(self, heap: ClrHeap, mt: UInt64, obj: UInt64) -> ClrType: ...
    def GetOrCreateTypeFromSignature(self, module: ClrModule, parser: SigParser, typeParameters: Iterable[ClrGenericParameter], methodParameters: Iterable[ClrGenericParameter]) -> ClrType: ...
    def GetOrCreateTypeFromToken(self, module: ClrModule, token: int) -> ClrType: ...


class ITypeHelpers:
    @property
    def ClrObjectHelpers(self) -> IClrObjectHelpers: ...
    @property
    def DataReader(self) -> IDataReader: ...
    @property
    def Factory(self) -> ITypeFactory: ...
    def GetAssemblyLoadContextAddress(self, mt: UInt64) -> UInt64: ...
    def GetLoaderAllocatorHandle(self, mt: UInt64) -> UInt64: ...
    def GetObjectData(self, objRef: UInt64) -> IObjectData: ...
    def GetTypeName(self, mt: UInt64) -> Tuple[bool, str]: ...
