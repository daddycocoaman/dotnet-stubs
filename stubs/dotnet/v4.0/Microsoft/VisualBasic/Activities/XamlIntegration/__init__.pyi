from typing import Tuple, Set, Iterable, List


class VisualBasicSettingsConverter:
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ITypeDescriptorContext, sourceType: Type) -> bool: ...
    @overload
    def CanConvertTo(self, context: ITypeDescriptorContext, destinationType: Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object) -> Object: ...
    @overload
    def ConvertTo(self, context: ITypeDescriptorContext, culture: CultureInfo, value: Object, destinationType: Type) -> Object: ...


class VisualBasicSettingsValueSerializer:
    def __init__(self): ...
    def CanConvertToString(self, value: Object, context: IValueSerializerContext) -> bool: ...
    def ConvertToString(self, value: Object, context: IValueSerializerContext) -> str: ...
