from typing import Tuple, Set, Iterable, List


class ACLFlagValue:
    #None = 0
    Owner = 1
    Group = 2
    DACL = 4
    SACL = 8


class AddBitsFileCommand:
    def __init__(self): ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @property
    def Destination(self) -> Set(str): ...
    @property
    def Source(self) -> Set(str): ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...
    @Destination.setter
    def Destination(self, value: Set(str)) -> None: ...
    @Source.setter
    def Source(self, value: Set(str)) -> None: ...


class AuthenticationTargetValue:
    #None = 0
    Server = 1
    Proxy = 2


class BitsErrorCondition:
    NoError = 0
    PartialComplete = 2097175
    UnableToDeleteFiles = 2097178
    ProxyChanged = 2097194
    HttpError100 = 2149122148
    HttpError101 = 2149122149
    HttpError200 = 2149122248
    HttpError201 = 2149122249
    HttpError202 = 2149122250
    HttpError203 = 2149122251
    HttpError204 = 2149122252
    HttpError205 = 2149122253
    HttpError206 = 2149122254
    HttpError300 = 2149122348
    HttpError301 = 2149122349
    HttpError302 = 2149122350
    HttpError303 = 2149122351
    HttpError304 = 2149122352
    HttpError305 = 2149122353
    HttpError307 = 2149122355
    HttpError400 = 2149122448
    HttpError401 = 2149122449
    HttpError402 = 2149122450
    HttpError403 = 2149122451
    HttpError404 = 2149122452
    HttpError405 = 2149122453
    HttpError406 = 2149122454
    HttpError407 = 2149122455
    HttpError408 = 2149122456
    HttpError409 = 2149122457
    HttpError410 = 2149122458
    HttpError411 = 2149122459
    HttpError412 = 2149122460
    HttpError413 = 2149122461
    HttpError414 = 2149122462
    HttpError415 = 2149122463
    HttpError416 = 2149122464
    HttpError417 = 2149122465
    HttpError449 = 2149122497
    HttpError500 = 2149122548
    HttpError501 = 2149122549
    HttpError502 = 2149122550
    HttpError503 = 2149122551
    HttpError504 = 2149122552
    HttpError505 = 2149122553
    JobNotFound = 2149580801
    InvalidJobState = 2149580802
    JobEmpty = 2149580803
    FileNotAvailable = 2149580804
    ProtocolNotAvailable = 2149580805
    DestinationFileSystemLocked = 2149580813
    DestinationFileSystemChanged = 2149580814
    ErrorInformationUnavailable = 2149580815
    NetworkDisconnected = 2149580816
    MissingFileSize = 2149580817
    InsufficientHttpSupport = 2149580818
    InsufficientRangeSupport = 2149580819
    RemoteUseNotSupported = 2149580820
    NewOwnerDifferentMapping = 2149580821
    NewOwnerNoFileAccess = 2149580822
    ProxyListTooLarge = 2149580824
    ProxyBypassListTooLarge = 2149580825
    InvalidServerResponse = 2149580827
    JobHasTooManyFiles = 2149580828
    LocalFileChanged = 2149580829
    SessionNotFound = 2149580831
    JobTooLarge = 2149580832
    StringTooLong = 2149580833
    ClientServerProtocolMismatch = 2149580834
    ExecutePermissionsEnabled = 2149580835
    NoProgress = 2149580836
    UserNameTooLarge = 2149580837
    PasswordTooLarge = 2149580838
    InvalidAuthenticationTarget = 2149580839
    InvalidAuthenticationScheme = 2149580840
    FileNotFound = 2149580841
    InvalidRange = 2149580843
    OverlappingRanges = 2149580844
    ConnectFailure = 2149580845
    ConnectionClosed = 2149580846
    KeepAliveFailures = 2149580847
    MessageLengthLimitExceeded = 2149580848
    NameResolutionFailure = 2149580849
    InternalRequestPending = 2149580850
    PipelineFailure = 2149580851
    ProtocolError = 2149580852
    ProxyNameResolutionFailure = 2149580853
    ReceiveFailure = 2149580854
    RequestCanceled = 2149580855
    SecureChannelFailure = 2149580856
    SendFailure = 2149580857
    ServerProtocolViolation = 2149580858
    Timeout = 2149580859
    CertificateTrustFailure = 2149580860
    UnknownError = 2149580861
    BlockedByCostTransferPolicy = 2149580889


class BitsErrorContext:
    #None = 0
    Unknown = 1
    GeneralQueueManager = 2
    QueueManagerNotification = 3
    LocalFile = 4
    RemoteFile = 5
    GeneralTransport = 6
    RemoteApplication = 7


class BitsFile:
    def __init__(self): ...
    @property
    def BytesTotal(self) -> UInt64: ...
    @property
    def BytesTransferred(self) -> UInt64: ...
    @property
    def IsTransferComplete(self) -> bool: ...
    @property
    def LocalName(self) -> str: ...
    @property
    def RemoteName(self) -> str: ...
    @BytesTotal.setter
    def BytesTotal(self, value: UInt64) -> None: ...
    @BytesTransferred.setter
    def BytesTransferred(self, value: UInt64) -> None: ...
    @IsTransferComplete.setter
    def IsTransferComplete(self, value: bool) -> None: ...
    @LocalName.setter
    def LocalName(self, value: str) -> None: ...
    @RemoteName.setter
    def RemoteName(self, value: str) -> None: ...


class BitsJob:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, jobId: Guid): ...
    @property
    def ACLFlags(self) -> ACLFlagValue: ...
    @property
    def BytesTotal(self) -> UInt64: ...
    @property
    def BytesTransferred(self) -> UInt64: ...
    @property
    def CertificateHash(self) -> ReadOnlyCollection: ...
    @property
    def CertificateStoreLocation(self) -> CertStoreLocationValue: ...
    @property
    def CertificateStoreName(self) -> str: ...
    @property
    def CertificateSubjectName(self) -> str: ...
    @property
    def CreationTime(self) -> DateTime: ...
    @property
    def CustomHeaders(self) -> ReadOnlyCollection: ...
    @property
    def Description(self) -> str: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Dynamic(self) -> bool: ...
    @property
    def ErrorCondition(self) -> BitsErrorCondition: ...
    @property
    def ErrorContext(self) -> BitsErrorContext: ...
    @property
    def ErrorContextDescription(self) -> str: ...
    @property
    def ErrorDescription(self) -> str: ...
    @property
    def FileList(self) -> ReadOnlyCollection: ...
    @property
    def FilesTotal(self) -> UInt32: ...
    @property
    def FilesTransferred(self) -> UInt32: ...
    @property
    def HttpMethod(self) -> str: ...
    @property
    def InternalErrorCode(self) -> int: ...
    @property
    def JobId(self) -> Guid: ...
    @property
    def JobState(self) -> BitsJobState: ...
    @property
    def MaxDownloadTime(self) -> int: ...
    @property
    def ModificationTime(self) -> DateTime: ...
    @property
    def NotifyCmdLine(self) -> ReadOnlyCollection: ...
    @property
    def NotifyFlags(self) -> NotifyFlagValue: ...
    @property
    def OwnerAccount(self) -> NTAccount: ...
    @property
    def Priority(self) -> BitsJobPriority: ...
    @property
    def ProxyBypassList(self) -> ReadOnlyCollection: ...
    @property
    def ProxyList(self) -> ReadOnlyCollection: ...
    @property
    def ProxyUsage(self) -> BitsJobProxyUsage: ...
    @property
    def RetryInterval(self) -> int: ...
    @property
    def RetryTimeout(self) -> int: ...
    @property
    def SecurityFlags(self) -> SecurityFlagValue: ...
    @property
    def TransferCompletionTime(self) -> DateTime: ...
    @property
    def TransferPolicy(self) -> CostStates: ...
    @property
    def TransferType(self) -> BitsJobType: ...
    @property
    def TransientErrorCount(self) -> UInt32: ...
    def RemoveClientCertificate(self) -> None: ...
    @ACLFlags.setter
    def ACLFlags(self, value: ACLFlagValue) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @DisplayName.setter
    def DisplayName(self, value: str) -> None: ...
    @Dynamic.setter
    def Dynamic(self, value: bool) -> None: ...
    @HttpMethod.setter
    def HttpMethod(self, value: str) -> None: ...
    @JobId.setter
    def JobId(self, value: Guid) -> None: ...
    @MaxDownloadTime.setter
    def MaxDownloadTime(self, value: int) -> None: ...
    @NotifyFlags.setter
    def NotifyFlags(self, value: NotifyFlagValue) -> None: ...
    @Priority.setter
    def Priority(self, value: BitsJobPriority) -> None: ...
    @ProxyUsage.setter
    def ProxyUsage(self, value: BitsJobProxyUsage) -> None: ...
    @RetryInterval.setter
    def RetryInterval(self, value: int) -> None: ...
    @RetryTimeout.setter
    def RetryTimeout(self, value: int) -> None: ...
    @SecurityFlags.setter
    def SecurityFlags(self, value: SecurityFlagValue) -> None: ...
    @TransferPolicy.setter
    def TransferPolicy(self, value: CostStates) -> None: ...


class BitsJobPriority:
    Foreground = 0
    High = 1
    Normal = 2
    Low = 3


class BitsJobProxyUsage:
    SystemDefault = 0
    NoProxy = 1
    Override = 2
    AutoDetect = 3


class BitsJobState:
    Queued = 0
    Connecting = 1
    Transferring = 2
    Suspended = 3
    Error = 4
    TransientError = 5
    Transferred = 6
    Acknowledged = 7
    Canceled = 8


class BitsJobType:
    Download = 0
    Upload = 1
    UploadReply = 2


class CertStoreLocationValue:
    CurrentUser = 0
    LocalMachine = 1
    CurrentService = 2
    Services = 3
    Users = 4
    CurrentUserGroupPolicy = 5
    LocalMachineGroupPolicy = 6
    LocalMachineEnterprise = 7


class ClearBitsTransferCommand:
    def __init__(self): ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...


class CompleteBitsTransferCommand:
    def __init__(self): ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...


class CostStates:
    #None = 0
    Unrestricted = 1
    Capped = 2
    BelowCap = 4
    NearCap = 8
    OverCapCharged = 16
    OverCapThrottled = 32
    UsageBased = 64
    Roaming = 128
    IgnoreCongestion = -2147483648
    PolicyUnrestricted = -2147483615
    Standard = -2147483545
    NoSurcharge = -2147483537
    NotRoaming = -2147483521
    Always = -2147483393


class GetBitsTransfer:
    def __init__(self): ...
    @property
    def AllUsers(self) -> SwitchParameter: ...
    @property
    def JobId(self) -> Set(Guid): ...
    @property
    def Name(self) -> Set(str): ...
    @AllUsers.setter
    def AllUsers(self, value: SwitchParameter) -> None: ...
    @JobId.setter
    def JobId(self, value: Set(Guid)) -> None: ...
    @Name.setter
    def Name(self, value: Set(str)) -> None: ...


class NewBitsTransferCommand:
    def __init__(self): ...
    @property
    def ACLFlags(self) -> ACLFlagValue: ...
    @property
    def Asynchronous(self) -> SwitchParameter: ...
    @property
    def Authentication(self) -> str: ...
    @property
    def CertHash(self) -> Set(Byte): ...
    @property
    def CertStoreLocation(self) -> CertStoreLocationValue: ...
    @property
    def CertStoreName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def CustomHeaders(self) -> Set(str): ...
    @property
    def Description(self) -> str: ...
    @property
    def Destination(self) -> Set(str): ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Dynamic(self) -> SwitchParameter: ...
    @property
    def HttpMethod(self) -> str: ...
    @property
    def MaxDownloadTime(self) -> int: ...
    @property
    def NotifyCmdLine(self) -> Set(str): ...
    @property
    def NotifyFlags(self) -> Nullable: ...
    @property
    def Priority(self) -> str: ...
    @property
    def ProxyAuthentication(self) -> str: ...
    @property
    def ProxyBypass(self) -> Set(str): ...
    @property
    def ProxyCredential(self) -> PSCredential: ...
    @property
    def ProxyList(self) -> Set(Uri): ...
    @property
    def ProxyUsage(self) -> str: ...
    @property
    def RetryInterval(self) -> int: ...
    @property
    def RetryTimeout(self) -> int: ...
    @property
    def SecurityFlags(self) -> SecurityFlagValue: ...
    @property
    def Source(self) -> Set(str): ...
    @property
    def Suspended(self) -> SwitchParameter: ...
    @property
    def TransferPolicy(self) -> CostStates: ...
    @property
    def TransferType(self) -> str: ...
    @property
    def UseStoredCredential(self) -> AuthenticationTargetValue: ...
    @ACLFlags.setter
    def ACLFlags(self, value: ACLFlagValue) -> None: ...
    @Asynchronous.setter
    def Asynchronous(self, value: SwitchParameter) -> None: ...
    @Authentication.setter
    def Authentication(self, value: str) -> None: ...
    @CertHash.setter
    def CertHash(self, value: Set(Byte)) -> None: ...
    @CertStoreLocation.setter
    def CertStoreLocation(self, value: CertStoreLocationValue) -> None: ...
    @CertStoreName.setter
    def CertStoreName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @CustomHeaders.setter
    def CustomHeaders(self, value: Set(str)) -> None: ...
    @CustomHeadersWriteOnly.setter
    def CustomHeadersWriteOnly(self, value: SwitchParameter) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @Destination.setter
    def Destination(self, value: Set(str)) -> None: ...
    @DisplayName.setter
    def DisplayName(self, value: str) -> None: ...
    @Dynamic.setter
    def Dynamic(self, value: SwitchParameter) -> None: ...
    @HttpMethod.setter
    def HttpMethod(self, value: str) -> None: ...
    @MaxDownloadTime.setter
    def MaxDownloadTime(self, value: int) -> None: ...
    @NotifyCmdLine.setter
    def NotifyCmdLine(self, value: Set(str)) -> None: ...
    @NotifyFlags.setter
    def NotifyFlags(self, value: Nullable) -> None: ...
    @Priority.setter
    def Priority(self, value: str) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: str) -> None: ...
    @ProxyBypass.setter
    def ProxyBypass(self, value: Set(str)) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: PSCredential) -> None: ...
    @ProxyList.setter
    def ProxyList(self, value: Set(Uri)) -> None: ...
    @ProxyUsage.setter
    def ProxyUsage(self, value: str) -> None: ...
    @RetryInterval.setter
    def RetryInterval(self, value: int) -> None: ...
    @RetryTimeout.setter
    def RetryTimeout(self, value: int) -> None: ...
    @SecurityFlags.setter
    def SecurityFlags(self, value: SecurityFlagValue) -> None: ...
    @Source.setter
    def Source(self, value: Set(str)) -> None: ...
    @Suspended.setter
    def Suspended(self, value: SwitchParameter) -> None: ...
    @TransferPolicy.setter
    def TransferPolicy(self, value: CostStates) -> None: ...
    @TransferType.setter
    def TransferType(self, value: str) -> None: ...
    @UseStoredCredential.setter
    def UseStoredCredential(self, value: AuthenticationTargetValue) -> None: ...


class NotifyFlagValue:
    JobTransferred = 1
    JobError = 2
    Disable = 4


class ResumeBitsTransferCommand:
    def __init__(self): ...
    @property
    def Asynchronous(self) -> SwitchParameter: ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @Asynchronous.setter
    def Asynchronous(self, value: SwitchParameter) -> None: ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...


class SecurityFlagValue:
    RedirectPolicyAllowSilent = 0
    EnableCRLCheck = 1
    IgnoreCertCNInvalid = 2
    IgnoreCertDateInvalid = 4
    IgnoreUnknownCA = 8
    IgnoreCertWrongUsage = 16
    RedirectPolicyAllowReport = 256
    RedirectPolicyDisallow = 512
    RedirectPolicyAllowHttpsToHttp = 2048


class SetBitsTransferCommand:
    def __init__(self): ...
    @property
    def ACLFlags(self) -> Nullable: ...
    @property
    def Authentication(self) -> str: ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @property
    def CertHash(self) -> Set(Byte): ...
    @property
    def CertStoreLocation(self) -> CertStoreLocationValue: ...
    @property
    def CertStoreName(self) -> str: ...
    @property
    def Credential(self) -> PSCredential: ...
    @property
    def CustomHeaders(self) -> Set(str): ...
    @property
    def Description(self) -> str: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Dynamic(self) -> Nullable: ...
    @property
    def HttpMethod(self) -> str: ...
    @property
    def MaxDownloadTime(self) -> int: ...
    @property
    def NotifyCmdLine(self) -> Set(str): ...
    @property
    def NotifyFlags(self) -> Nullable: ...
    @property
    def Priority(self) -> str: ...
    @property
    def ProxyAuthentication(self) -> str: ...
    @property
    def ProxyBypass(self) -> Set(str): ...
    @property
    def ProxyCredential(self) -> PSCredential: ...
    @property
    def ProxyList(self) -> Set(Uri): ...
    @property
    def ProxyUsage(self) -> str: ...
    @property
    def RetryInterval(self) -> int: ...
    @property
    def RetryTimeout(self) -> int: ...
    @property
    def SecurityFlags(self) -> Nullable: ...
    @property
    def SetOwnerToCurrentUser(self) -> SwitchParameter: ...
    @property
    def TransferPolicy(self) -> CostStates: ...
    @property
    def UseStoredCredential(self) -> AuthenticationTargetValue: ...
    @ACLFlags.setter
    def ACLFlags(self, value: Nullable) -> None: ...
    @Authentication.setter
    def Authentication(self, value: str) -> None: ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...
    @CertHash.setter
    def CertHash(self, value: Set(Byte)) -> None: ...
    @CertStoreLocation.setter
    def CertStoreLocation(self, value: CertStoreLocationValue) -> None: ...
    @CertStoreName.setter
    def CertStoreName(self, value: str) -> None: ...
    @Credential.setter
    def Credential(self, value: PSCredential) -> None: ...
    @CustomHeaders.setter
    def CustomHeaders(self, value: Set(str)) -> None: ...
    @CustomHeadersWriteOnly.setter
    def CustomHeadersWriteOnly(self, value: SwitchParameter) -> None: ...
    @Description.setter
    def Description(self, value: str) -> None: ...
    @DisplayName.setter
    def DisplayName(self, value: str) -> None: ...
    @Dynamic.setter
    def Dynamic(self, value: Nullable) -> None: ...
    @HttpMethod.setter
    def HttpMethod(self, value: str) -> None: ...
    @MaxDownloadTime.setter
    def MaxDownloadTime(self, value: int) -> None: ...
    @NotifyCmdLine.setter
    def NotifyCmdLine(self, value: Set(str)) -> None: ...
    @NotifyFlags.setter
    def NotifyFlags(self, value: Nullable) -> None: ...
    @Priority.setter
    def Priority(self, value: str) -> None: ...
    @ProxyAuthentication.setter
    def ProxyAuthentication(self, value: str) -> None: ...
    @ProxyBypass.setter
    def ProxyBypass(self, value: Set(str)) -> None: ...
    @ProxyCredential.setter
    def ProxyCredential(self, value: PSCredential) -> None: ...
    @ProxyList.setter
    def ProxyList(self, value: Set(Uri)) -> None: ...
    @ProxyUsage.setter
    def ProxyUsage(self, value: str) -> None: ...
    @RetryInterval.setter
    def RetryInterval(self, value: int) -> None: ...
    @RetryTimeout.setter
    def RetryTimeout(self, value: int) -> None: ...
    @SecurityFlags.setter
    def SecurityFlags(self, value: Nullable) -> None: ...
    @SetOwnerToCurrentUser.setter
    def SetOwnerToCurrentUser(self, value: SwitchParameter) -> None: ...
    @TransferPolicy.setter
    def TransferPolicy(self, value: CostStates) -> None: ...
    @UseStoredCredential.setter
    def UseStoredCredential(self, value: AuthenticationTargetValue) -> None: ...


class SuspendBitsTransferCommand:
    def __init__(self): ...
    @property
    def BitsJob(self) -> Set(BitsJob): ...
    @BitsJob.setter
    def BitsJob(self, value: Set(BitsJob)) -> None: ...
