from typing import Tuple, Set, Iterable, List


class SinglePassEventsDetails:
    def __init__(self): ...
    @property
    def ActivityId(self) -> str: ...
    @property
    def DomainControllerIPAddress(self) -> str: ...
    @property
    def DomainControllerName(self) -> str: ...
    @property
    def ErrorCount(self) -> UInt32: ...
    @property
    def EventRecord(self) -> Set(CrimsonEventRecord): ...
    @property
    def ExtensionProcessingTime(self) -> Set(ExtensionProcessingTime): ...
    @property
    def LinkSpeedInKbps(self) -> int: ...
    @property
    def PolicyElapsedTimeInMilliseconds(self) -> Int64: ...
    @property
    def PolicyProcessingMode(self) -> LoopbackMode: ...
    @property
    def ProcessingAppMode(self) -> PolicyApplicationMode: ...
    @property
    def ProcessingTrigger(self) -> PolicyApplicationTrigger: ...
    @property
    def SlowLinkThresholdInKbps(self) -> int: ...
    @property
    def WarningCount(self) -> UInt32: ...
    @ActivityId.setter
    def ActivityId(self, value: str) -> None: ...
    @DomainControllerIPAddress.setter
    def DomainControllerIPAddress(self, value: str) -> None: ...
    @DomainControllerName.setter
    def DomainControllerName(self, value: str) -> None: ...
    @ErrorCount.setter
    def ErrorCount(self, value: UInt32) -> None: ...
    @EventRecord.setter
    def EventRecord(self, value: Set(CrimsonEventRecord)) -> None: ...
    @ExtensionProcessingTime.setter
    def ExtensionProcessingTime(self, value: Set(ExtensionProcessingTime)) -> None: ...
    @LinkSpeedInKbps.setter
    def LinkSpeedInKbps(self, value: int) -> None: ...
    @PolicyElapsedTimeInMilliseconds.setter
    def PolicyElapsedTimeInMilliseconds(self, value: Int64) -> None: ...
    @PolicyProcessingMode.setter
    def PolicyProcessingMode(self, value: LoopbackMode) -> None: ...
    @ProcessingAppMode.setter
    def ProcessingAppMode(self, value: PolicyApplicationMode) -> None: ...
    @ProcessingTrigger.setter
    def ProcessingTrigger(self, value: PolicyApplicationTrigger) -> None: ...
    @SlowLinkThresholdInKbps.setter
    def SlowLinkThresholdInKbps(self, value: int) -> None: ...
    @WarningCount.setter
    def WarningCount(self, value: UInt32) -> None: ...
