__all__ = ['DataSources','Devices','DriveMaps','Environment','Files','FolderOptions','Folders','IniFiles','Internet','Lugs','NetworkOptions','NetworkShares','PowerOptions','Printers','RegionalOptions','Registry','ScheduledTasks','Services','Shortcuts','StartMenu']
from typing import Tuple, Set, Iterable, List


class INSTANCERsopXmlElement:
    @property
    def ClassName(self) -> str: ...
    @property
    def DSNAttributes(self) -> Collection: ...
    @property
    def ItemSubInstance(self) -> INSTANCERsopXmlElement: ...
    @property
    def Members(self) -> Collection: ...
    @property
    def Properties(self) -> Collection: ...
    @property
    def RegSettings(self) -> Collection: ...
    @property
    def SubInstances(self) -> Collection: ...
    @property
    def Task(self) -> TaskCollectionGPOSetting: ...
    def GetPropertyValue(self, propertyName: str) -> str: ...
    @ClassName.setter
    def ClassName(self, value: str) -> None: ...
    @DSNAttributes.setter
    def DSNAttributes(self, value: Collection) -> None: ...
    @Members.setter
    def Members(self, value: Collection) -> None: ...
    @Properties.setter
    def Properties(self, value: Collection) -> None: ...
    @RegSettings.setter
    def RegSettings(self, value: Collection) -> None: ...
    @SubInstances.setter
    def SubInstances(self, value: Collection) -> None: ...
    @Task.setter
    def Task(self, value: TaskCollectionGPOSetting) -> None: ...
    def SetItemSubInstance(self, itemSubInstanceAttributeName: str) -> None: ...
    def TryGetPropertyValue(self, propertyName: str) -> str: ...


class IPolicyMakerGPOSetting:
    def BypassErrors(self) -> bool: ...
    @property
    def Filters(self) -> Collection: ...
    @property
    def Order(self) -> int: ...
    def GetDescription(self) -> str: ...
    def GetName(self) -> str: ...
    def IsDisabled(self) -> bool: ...
    def IsRemovedWhenNotApplicable(self) -> bool: ...
    def IsUserContext(self) -> bool: ...


class IPolicyMakerRsopSetting:
    @property
    def GPO(self) -> GPOIdentifier: ...
    def GetClassName(self) -> str: ...
    def GetPrecedence(self) -> int: ...
    def GetResultCodeInDecimal(self) -> str: ...
    def GetResultCodeInHex(self) -> str: ...
    def GetSettingName(self) -> str: ...


class IPolicyMakerSetting:
    def GetHashKey(self) -> str: ...
    def GetKeyComponents(self) -> Set(str): ...
    def GetPropertyValue(self, propertyName: str) -> str: ...


class PolicyMakerAttributeNames:
    def __init__(self): ...


class PolicyMakerAttributeValues:
    def __init__(self): ...


class PolicyMakerElement:
    @property
    def Attributes(self) -> Set(XmlAttribute): ...
    def GetAttributeValue(self, attributeName: str) -> str: ...
    def GetAttributeValueAsBool(self, attributeName: str) -> bool: ...
    def GetAttributeValueAsInt(self, attributeName: str) -> int: ...
    def GetAttributeValueAsLong(self, attributeName: str) -> Int64: ...
    def GetAttributeValueAsUInt(self, attributeName: str) -> UInt32: ...
    def HasAttributeValue(self, attributeName: str) -> bool: ...
    def HasAttributeValues(self, attributeNames: Set(str)) -> bool: ...
    @Attributes.setter
    def Attributes(self, value: Set(XmlAttribute)) -> None: ...


class PolicyMakerFilter(PolicyMakerElement):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, resourceId: str): ...
    def GetResourceId(self) -> str: ...
    def IsHidden(self) -> bool: ...


class PolicyMakerFilterBattery(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterCollection(PolicyMakerFilter):
    def __init__(self): ...
    @property
    def Filters(self) -> Collection: ...
    @Filters.setter
    def Filters(self, value: Collection) -> None: ...


class PolicyMakerFilterComputer(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterCpu(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterDate(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterDisk(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterDomain(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterDun(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterFile(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterGroup(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterIpRange(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterLanguage(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterLdap(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterMacRange(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterMsi(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterOrgUnit(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterOs(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterPcmcia(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterPortable(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterProcMode(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterRam(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterRegistry(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterRunOnce(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterSite(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterTerminal(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterTime(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterUser(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterVariable(PolicyMakerFilter):
    def __init__(self): ...


class PolicyMakerFilterWmi(PolicyMakerFilter):
    def __init__(self): ...




class PolicyMakerProperties(PolicyMakerElement):
    def __init__(self): ...


class PolicyMakerRsopSetting(PolicySetting):
    @property
    def BaseInstanceRsopXml(self) -> INSTANCERsopXmlElement: ...
    def GetClassName(self) -> str: ...
    def GetHashKey(self) -> str: ...
    def GetItemSubInstanceAttributeName(self) -> str: ...
    def GetKeyComponents(self) -> Set(str): ...
    def GetPrecedence(self) -> int: ...
    def GetPropertyValue(self, propertyName: str) -> str: ...
    def GetResultCodeInDecimal(self) -> str: ...
    def GetResultCodeInHex(self) -> str: ...
    def GetSettingName(self) -> str: ...
    @BaseInstanceRsopXml.setter
    def BaseInstanceRsopXml(self, value: INSTANCERsopXmlElement) -> None: ...


class PolicyMakerSettings(GPOExtension):
    def GetGPOSettings(self) -> ICollection: ...
    def GetRsopSettings(self) -> ICollection: ...


class PROPERTYRsopXmlElement:
    def __init__(self): ...
    @property
    def Name(self) -> str: ...
    @property
    def Value(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Value.setter
    def Value(self, value: str) -> None: ...
