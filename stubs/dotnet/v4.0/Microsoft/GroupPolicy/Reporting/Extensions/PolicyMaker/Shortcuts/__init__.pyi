from typing import Tuple, Set, Iterable, List


class ShortcutGPOSetting:
    def __init__(self): ...
    @property
    def ShortcutPath(self) -> str: ...
    def GetHashKey(self) -> str: ...


class ShortcutGPOSettings(PolicyMakerElement):
    def __init__(self): ...
    @property
    def Shortcuts(self) -> Collection: ...
    @Shortcuts.setter
    def Shortcuts(self, value: Collection) -> None: ...


class ShortcutRsopSetting(PolicyMakerRsopSetting):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, managementObject: ManagementObject): ...
    @property
    def ShortcutPathResolved(self) -> str: ...
    def GetHashKey(self) -> str: ...
    def GetItemSubInstanceAttributeName(self) -> str: ...


class ShortcutSettings(PolicyMakerSettings):
    def __init__(self): ...
    @property
    def ShortcutGPOSettings(self) -> ShortcutGPOSettings: ...
    @property
    def ShortcutRsopSettings(self) -> Collection: ...
    def GetGPOSettings(self) -> ICollection: ...
    def GetRsopSettings(self) -> ICollection: ...
    def Initialize(self, context: ReportingContext) -> None: ...
    @ShortcutGPOSettings.setter
    def ShortcutGPOSettings(self, value: ShortcutGPOSettings) -> None: ...
    @ShortcutRsopSettings.setter
    def ShortcutRsopSettings(self, value: Collection) -> None: ...
