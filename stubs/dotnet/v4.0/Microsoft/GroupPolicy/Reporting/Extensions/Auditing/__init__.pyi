from typing import Tuple, Set, Iterable, List


class AuditSetting(PolicySetting):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, auditObject: ManagementObject, auditPolicyModel: Policy): ...
    @overload
    def __init__(self, policyTarget: str, subcategoryName: str, subcategoryGuid: Guid, settingValue: UInt32): ...
    @property
    def PolicyTarget(self) -> str: ...
    @property
    def SettingValue(self) -> UInt32: ...
    @property
    def SubcategoryGuid(self) -> str: ...
    @property
    def SubcategoryName(self) -> str: ...
    @PolicyTarget.setter
    def PolicyTarget(self, value: str) -> None: ...
    @SettingValue.setter
    def SettingValue(self, value: UInt32) -> None: ...
    @SubcategoryGuid.setter
    def SubcategoryGuid(self, value: str) -> None: ...
    @SubcategoryName.setter
    def SubcategoryName(self, value: str) -> None: ...


class AuditSettings(GPOExtension):
    def __init__(self): ...
    @property
    def AuditSetting(self) -> Set(AuditSetting): ...
    @property
    def GlobalSaclSetting(self) -> Set(GlobalSaclSetting): ...
    def Initialize(self, context: ReportingContext) -> None: ...
    @AuditSetting.setter
    def AuditSetting(self, value: Set(AuditSetting)) -> None: ...
    @GlobalSaclSetting.setter
    def GlobalSaclSetting(self, value: Set(GlobalSaclSetting)) -> None: ...


class GlobalSaclSetting(PolicySetting):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, globalSaclObject: ManagementObject, server: str): ...
    @overload
    def __init__(self, globalSaclType: GlobalSaclType, saclValue: str, server: str): ...
    @property
    def GlobalSaclType(self) -> GlobalSaclType: ...
    @property
    def SecurityDescriptor(self) -> SecurityDescriptor: ...
    @GlobalSaclType.setter
    def GlobalSaclType(self, value: GlobalSaclType) -> None: ...
    @SecurityDescriptor.setter
    def SecurityDescriptor(self, value: SecurityDescriptor) -> None: ...


class GlobalSaclType:
    File = 0
    Registry = 1
